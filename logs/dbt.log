[0m09:56:02  Running with dbt=1.5.0
[0m09:56:02  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m09:56:02  Encountered an error:
Compilation Error
  dbt found 2 package(s) specified in packages.yml, but only 1 package(s) installed in dbt_packages. Run "dbt deps" to install package dependencies.
[0m09:56:02  Command `dbt run` failed at 11:56:02.341899 after 0.10 seconds
[0m09:56:02  Flushing usage events
[0m10:00:15  Running with dbt=1.5.0
[0m10:00:15  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:00:15  Set downloads directory='C:\Users\lfouc\AppData\Local\Temp\dbt-downloads-wzv26rhu'
[0m10:00:15  Executing "git clone --depth 1 https://github.com/dbt-labs/dbt-utils.git b03949bb53de3439f6a8057088ba4032"
[0m10:00:17  STDOUT: "b''"
[0m10:00:17  STDERR: "b"Cloning into 'b03949bb53de3439f6a8057088ba4032'...\n""
[0m10:00:17  Pulling new dependency b03949bb53de3439f6a8057088ba4032.
[0m10:00:17  Executing "git rev-parse HEAD"
[0m10:00:17  STDOUT: "b'e9d23b5c152422d6a294c71199e595f4224ca966\n'"
[0m10:00:17  STDERR: "b''"
[0m10:00:17  Checking out revision 0.9.2.
[0m10:00:17  Executing "git remote set-branches origin 0.9.2"
[0m10:00:17  STDOUT: "b''"
[0m10:00:17  STDERR: "b''"
[0m10:00:17  Executing "git fetch origin --depth 1 --tags 0.9.2"
[0m10:00:18  STDOUT: "b''"
[0m10:00:18  STDERR: "b'From https://github.com/dbt-labs/dbt-utils\n * tag               0.9.2      -> FETCH_HEAD\n * [new tag]         0.0.1      -> 0.0.1\n * [new tag]         0.1.0      -> 0.1.0\n * [new tag]         0.1.1      -> 0.1.1\n * [new tag]         0.1.10     -> 0.1.10\n * [new tag]         0.1.11     -> 0.1.11\n * [new tag]         0.1.12     -> 0.1.12\n * [new tag]         0.1.13     -> 0.1.13\n * [new tag]         0.1.14     -> 0.1.14\n * [new tag]         0.1.15     -> 0.1.15\n * [new tag]         0.1.16     -> 0.1.16\n * [new tag]         0.1.17     -> 0.1.17\n * [new tag]         0.1.18     -> 0.1.18\n * [new tag]         0.1.19     -> 0.1.19\n * [new tag]         0.1.2      -> 0.1.2\n * [new tag]         0.1.20     -> 0.1.20\n * [new tag]         0.1.21     -> 0.1.21\n * [new tag]         0.1.22     -> 0.1.22\n * [new tag]         0.1.23     -> 0.1.23\n * [new tag]         0.1.24     -> 0.1.24\n * [new tag]         0.1.25     -> 0.1.25\n * [new tag]         0.1.3      -> 0.1.3\n * [new tag]         0.1.4      -> 0.1.4\n * [new tag]         0.1.5      -> 0.1.5\n * [new tag]         0.1.6      -> 0.1.6\n * [new tag]         0.1.7      -> 0.1.7\n * [new tag]         0.1.8      -> 0.1.8\n * [new tag]         0.1.9      -> 0.1.9\n * [new tag]         0.2.0      -> 0.2.0\n * [new tag]         0.2.1      -> 0.2.1\n * [new tag]         0.2.2      -> 0.2.2\n * [new tag]         0.2.3      -> 0.2.3\n * [new tag]         0.2.4      -> 0.2.4\n * [new tag]         0.2.5      -> 0.2.5\n * [new tag]         0.3.0      -> 0.3.0\n * [new tag]         0.4.0      -> 0.4.0\n * [new tag]         0.4.1      -> 0.4.1\n * [new tag]         0.5.0      -> 0.5.0\n * [new tag]         0.5.1      -> 0.5.1\n * [new tag]         0.6.0      -> 0.6.0\n * [new tag]         0.6.1      -> 0.6.1\n * [new tag]         0.6.2      -> 0.6.2\n * [new tag]         0.6.3      -> 0.6.3\n * [new tag]         0.6.4      -> 0.6.4\n * [new tag]         0.6.5      -> 0.6.5\n * [new tag]         0.6.6      -> 0.6.6\n * [new tag]         0.7.0      -> 0.7.0\n * [new tag]         0.7.1      -> 0.7.1\n * [new tag]         0.7.2      -> 0.7.2\n * [new tag]         0.7.3      -> 0.7.3\n * [new tag]         0.7.4      -> 0.7.4\n * [new tag]         0.7.4-b1   -> 0.7.4-b1\n * [new tag]         0.7.4b1    -> 0.7.4b1\n * [new tag]         0.7.5      -> 0.7.5\n * [new tag]         0.7.6      -> 0.7.6\n * [new tag]         0.8.0      -> 0.8.0\n * [new tag]         0.8.1      -> 0.8.1\n * [new tag]         0.8.2      -> 0.8.2\n * [new tag]         0.8.3      -> 0.8.3\n * [new tag]         0.8.4      -> 0.8.4\n * [new tag]         0.8.5      -> 0.8.5\n * [new tag]         0.8.6      -> 0.8.6\n * [new tag]         0.9.0      -> 0.9.0\n * [new tag]         0.9.1      -> 0.9.1\n * [new tag]         0.9.2      -> 0.9.2\n * [new tag]         0.9.5      -> 0.9.5\n * [new tag]         0.9.6      -> 0.9.6\n * [new tag]         1.0.0      -> 1.0.0\n * [new tag]         1.0.0-b1   -> 1.0.0-b1\n * [new tag]         1.0.0-b2   -> 1.0.0-b2\n * [new tag]         1.0.0-rc1  -> 1.0.0-rc1\n * [new tag]         1.1.0      -> 1.1.0\n'"
[0m10:00:18  Executing "git tag --list"
[0m10:00:18  STDOUT: "b'0.0.1\n0.1.0\n0.1.1\n0.1.10\n0.1.11\n0.1.12\n0.1.13\n0.1.14\n0.1.15\n0.1.16\n0.1.17\n0.1.18\n0.1.19\n0.1.2\n0.1.20\n0.1.21\n0.1.22\n0.1.23\n0.1.24\n0.1.25\n0.1.3\n0.1.4\n0.1.5\n0.1.6\n0.1.7\n0.1.8\n0.1.9\n0.2.0\n0.2.1\n0.2.2\n0.2.3\n0.2.4\n0.2.5\n0.3.0\n0.4.0\n0.4.1\n0.5.0\n0.5.1\n0.6.0\n0.6.1\n0.6.2\n0.6.3\n0.6.4\n0.6.5\n0.6.6\n0.7.0\n0.7.1\n0.7.2\n0.7.3\n0.7.4\n0.7.4-b1\n0.7.4b1\n0.7.5\n0.7.6\n0.8.0\n0.8.1\n0.8.2\n0.8.3\n0.8.4\n0.8.5\n0.8.6\n0.9.0\n0.9.1\n0.9.2\n0.9.5\n0.9.6\n1.0.0\n1.0.0-b1\n1.0.0-b2\n1.0.0-rc1\n1.1.0\n'"
[0m10:00:18  STDERR: "b''"
[0m10:00:18  Executing "git reset --hard tags/0.9.2"
[0m10:00:18  STDOUT: "b'HEAD is now at 064c2ab Add where clause example (#623)\n'"
[0m10:00:18  STDERR: "b''"
[0m10:00:18  Executing "git rev-parse HEAD"
[0m10:00:18  STDOUT: "b'064c2abee80816ea855de32e66e54e96d9916677\n'"
[0m10:00:18  STDERR: "b''"
[0m10:00:18  Checked out at 064c2ab.
[0m10:00:18  Making package index registry request: GET https://hub.getdbt.com/api/v1/index.json
[0m10:00:19  Response from registry index: GET https://hub.getdbt.com/api/v1/index.json 200
[0m10:00:19  Making package registry request: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json
[0m10:00:19  Response from registry: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json 200
[0m10:00:19  Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
[0m10:00:19  Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
[0m10:00:19  Executing "git clone --depth 1 https://github.com/dbt-labs/dbt-utils.git b03949bb53de3439f6a8057088ba4032"
[0m10:00:19  STDOUT: "b''"
[0m10:00:19  STDERR: "b"fatal: destination path 'b03949bb53de3439f6a8057088ba4032' already exists and is not an empty directory.\n""
[0m10:00:19  command return code=128
[0m10:00:19  Updating existing dependency b03949bb53de3439f6a8057088ba4032.
[0m10:00:19  Executing "git rev-parse HEAD"
[0m10:00:19  STDOUT: "b'064c2abee80816ea855de32e66e54e96d9916677\n'"
[0m10:00:19  STDERR: "b''"
[0m10:00:19  Checking out revision 0.9.2.
[0m10:00:19  Executing "git remote set-branches origin 0.9.2"
[0m10:00:19  STDOUT: "b''"
[0m10:00:19  STDERR: "b''"
[0m10:00:19  Executing "git fetch origin --depth 1 --tags 0.9.2"
[0m10:00:20  STDOUT: "b''"
[0m10:00:20  STDERR: "b'From https://github.com/dbt-labs/dbt-utils\n * tag               0.9.2      -> FETCH_HEAD\n'"
[0m10:00:20  Executing "git tag --list"
[0m10:00:20  STDOUT: "b'0.0.1\n0.1.0\n0.1.1\n0.1.10\n0.1.11\n0.1.12\n0.1.13\n0.1.14\n0.1.15\n0.1.16\n0.1.17\n0.1.18\n0.1.19\n0.1.2\n0.1.20\n0.1.21\n0.1.22\n0.1.23\n0.1.24\n0.1.25\n0.1.3\n0.1.4\n0.1.5\n0.1.6\n0.1.7\n0.1.8\n0.1.9\n0.2.0\n0.2.1\n0.2.2\n0.2.3\n0.2.4\n0.2.5\n0.3.0\n0.4.0\n0.4.1\n0.5.0\n0.5.1\n0.6.0\n0.6.1\n0.6.2\n0.6.3\n0.6.4\n0.6.5\n0.6.6\n0.7.0\n0.7.1\n0.7.2\n0.7.3\n0.7.4\n0.7.4-b1\n0.7.4b1\n0.7.5\n0.7.6\n0.8.0\n0.8.1\n0.8.2\n0.8.3\n0.8.4\n0.8.5\n0.8.6\n0.9.0\n0.9.1\n0.9.2\n0.9.5\n0.9.6\n1.0.0\n1.0.0-b1\n1.0.0-b2\n1.0.0-rc1\n1.1.0\n'"
[0m10:00:20  STDERR: "b''"
[0m10:00:20  Executing "git reset --hard tags/0.9.2"
[0m10:00:20  STDOUT: "b'HEAD is now at 064c2ab Add where clause example (#623)\n'"
[0m10:00:20  STDERR: "b''"
[0m10:00:20  Executing "git rev-parse HEAD"
[0m10:00:20  STDOUT: "b'064c2abee80816ea855de32e66e54e96d9916677\n'"
[0m10:00:20  STDERR: "b''"
[0m10:00:20  Already at 064c2ab, nothing to do.
[0m10:00:20  Encountered an error:
Found duplicate project "dbt_utils". This occurs when a dependency has the same project name as some other dependency.
[0m10:00:20  Command `dbt deps` failed at 12:00:20.706331 after 5.21 seconds
[0m10:00:20  Flushing usage events
[0m10:01:15  Running with dbt=1.5.0
[0m10:01:15  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:01:15  Set downloads directory='C:\Users\lfouc\AppData\Local\Temp\dbt-downloads-5g6izngv'
[0m10:01:15  Making package index registry request: GET https://hub.getdbt.com/api/v1/index.json
[0m10:01:15  Response from registry index: GET https://hub.getdbt.com/api/v1/index.json 200
[0m10:01:15  Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
[0m10:01:15  Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
[0m10:01:15  Making package registry request: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json
[0m10:01:15  Response from registry: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json 200
[0m10:01:15  Installing dbt-labs/dbt_utils
[0m10:01:16  Installed from version 1.1.0
[0m10:01:16  Up to date!
[0m10:01:16  Installing Datavault-UK/automate_dv
[0m10:01:17  Installed from version 0.9.6
[0m10:01:17  Up to date!
[0m10:01:17  Command `dbt deps` succeeded at 12:01:17.116033 after 2.12 seconds
[0m10:01:17  Flushing usage events
[0m10:01:25  Running with dbt=1.5.0
[0m10:01:25  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:01:25  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:01:25  Unable to do partial parsing because profile has changed
[0m10:01:25  Unable to do partial parsing because a project dependency has been added
[0m10:01:25  Unable to do partial parsing because a project config has changed
[0m10:01:28  1699: static parser successfully parsed customers.sql
[0m10:01:28  1603: static parser failed on orders.sql
[0m10:01:28  1602: parser fallback to jinja rendering on orders.sql
[0m10:01:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:01:28  1699: static parser successfully parsed staging\stg_orders.sql
[0m10:01:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:01:28  1603: static parser failed on staging\v_staging_orders.sql
[0m10:01:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:01:28  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_staging.raw_customer' which was not found
[0m10:01:28  Command `dbt run` failed at 12:01:28.367964 after 3.34 seconds
[0m10:01:28  Flushing usage events
[0m10:19:26  Running with dbt=1.5.0
[0m10:19:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:19:26  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:19:26  Unable to do partial parsing because profile has changed
[0m10:19:26  Unable to do partial parsing because a project dependency has been added
[0m10:19:26  Unable to do partial parsing because a project config has changed
[0m10:19:28  1699: static parser successfully parsed customers.sql
[0m10:19:28  1603: static parser failed on orders.sql
[0m10:19:28  1602: parser fallback to jinja rendering on orders.sql
[0m10:19:28  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:19:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:19:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:19:28  1603: static parser failed on staging\v_staging_orders.sql
[0m10:19:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:19:28  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_staging.raw_customer' which was not found
[0m10:19:28  Command `dbt run` failed at 12:19:28.615615 after 1.95 seconds
[0m10:19:28  Flushing usage events
[0m10:19:42  Running with dbt=1.5.0
[0m10:19:42  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:19:42  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:19:42  Unable to do partial parsing because profile has changed
[0m10:19:42  Unable to do partial parsing because a project dependency has been added
[0m10:19:42  Unable to do partial parsing because a project config has changed
[0m10:19:43  1699: static parser successfully parsed customers.sql
[0m10:19:43  1603: static parser failed on orders.sql
[0m10:19:43  1602: parser fallback to jinja rendering on orders.sql
[0m10:19:43  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:19:43  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:19:43  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:19:43  1603: static parser failed on staging\v_staging_orders.sql
[0m10:19:43  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:19:44  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_staging.stg_orders' which was not found
[0m10:19:44  Command `dbt run` failed at 12:19:44.129721 after 1.98 seconds
[0m10:19:44  Flushing usage events
[0m10:20:20  Running with dbt=1.5.0
[0m10:20:20  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:20:20  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:20:20  Unable to do partial parsing because profile has changed
[0m10:20:20  Unable to do partial parsing because a project dependency has been added
[0m10:20:20  Unable to do partial parsing because a project config has changed
[0m10:20:21  1699: static parser successfully parsed customers.sql
[0m10:20:21  1603: static parser failed on orders.sql
[0m10:20:21  1602: parser fallback to jinja rendering on orders.sql
[0m10:20:21  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:20:21  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:20:21  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:20:21  1603: static parser failed on staging\v_staging_orders.sql
[0m10:20:21  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:20:22  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:20:22  Command `dbt run` failed at 12:20:22.128331 after 1.96 seconds
[0m10:20:22  Flushing usage events
[0m10:21:45  Running with dbt=1.5.0
[0m10:21:46  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:21:46  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:21:46  Unable to do partial parsing because profile has changed
[0m10:21:46  Unable to do partial parsing because a project dependency has been added
[0m10:21:46  Unable to do partial parsing because a project config has changed
[0m10:21:47  1699: static parser successfully parsed customers.sql
[0m10:21:47  1603: static parser failed on orders.sql
[0m10:21:47  1602: parser fallback to jinja rendering on orders.sql
[0m10:21:47  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:21:47  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:21:47  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:21:47  1603: static parser failed on staging\v_staging_orders.sql
[0m10:21:47  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:21:47  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:21:47  Command `dbt run` failed at 12:21:47.925547 after 1.95 seconds
[0m10:21:47  Flushing usage events
[0m10:21:54  Running with dbt=1.5.0
[0m10:21:54  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:21:54  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:21:54  Unable to do partial parsing because profile has changed
[0m10:21:54  Unable to do partial parsing because a project dependency has been added
[0m10:21:54  Unable to do partial parsing because a project config has changed
[0m10:21:56  1699: static parser successfully parsed customers.sql
[0m10:21:56  1603: static parser failed on orders.sql
[0m10:21:56  1602: parser fallback to jinja rendering on orders.sql
[0m10:21:56  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:21:56  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:21:56  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:21:56  1603: static parser failed on staging\v_staging_orders.sql
[0m10:21:56  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:21:56  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:21:56  Command `dbt run` failed at 12:21:56.505862 after 1.93 seconds
[0m10:21:56  Flushing usage events
[0m10:22:21  Running with dbt=1.5.0
[0m10:22:21  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:22:21  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:22:21  Unable to do partial parsing because profile has changed
[0m10:22:21  Unable to do partial parsing because a project dependency has been added
[0m10:22:21  Unable to do partial parsing because a project config has changed
[0m10:22:23  1699: static parser successfully parsed customers.sql
[0m10:22:23  1603: static parser failed on orders.sql
[0m10:22:23  1602: parser fallback to jinja rendering on orders.sql
[0m10:22:23  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:22:23  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:22:23  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:22:23  1603: static parser failed on staging\v_staging_orders.sql
[0m10:22:23  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:22:23  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:22:23  Command `dbt run` failed at 12:22:23.664524 after 1.95 seconds
[0m10:22:23  Flushing usage events
[0m10:23:42  Running with dbt=1.5.0
[0m10:23:42  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:23:42  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:23:42  Unable to do partial parsing because profile has changed
[0m10:23:42  Unable to do partial parsing because a project dependency has been added
[0m10:23:42  Unable to do partial parsing because a project config has changed
[0m10:23:43  1699: static parser successfully parsed customers.sql
[0m10:23:43  1603: static parser failed on orders.sql
[0m10:23:43  1602: parser fallback to jinja rendering on orders.sql
[0m10:23:43  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:23:43  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:23:43  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:23:43  1603: static parser failed on staging\v_staging_orders.sql
[0m10:23:43  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:23:43  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:23:43  Command `dbt run` failed at 12:23:43.998254 after 1.96 seconds
[0m10:23:43  Flushing usage events
[0m10:30:42  Running with dbt=1.5.0
[0m10:30:42  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:30:42  dbt version: 1.5.0
[0m10:30:42  python version: 3.10.11
[0m10:30:42  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m10:30:42  os info: Windows-10-10.0.22621-SP0
[0m10:30:42  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m10:30:42  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m10:30:42  Configuration:
[0m10:30:42    profiles.yml file [[32mOK found and valid[0m]
[0m10:30:42    dbt_project.yml file [[32mOK found and valid[0m]
[0m10:30:42  Required dependencies:
[0m10:30:42  Executing "git --help"
[0m10:30:42  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m10:30:42  STDERR: "b''"
[0m10:30:42   - git [[32mOK found[0m]

[0m10:30:42  Connection:
[0m10:30:42    host: localhost
[0m10:30:42    port: 5432
[0m10:30:42    user: postgres
[0m10:30:42    database: sales
[0m10:30:42    schema: public
[0m10:30:42    search_path: None
[0m10:30:42    keepalives_idle: 0
[0m10:30:42    sslmode: None
[0m10:30:42  Acquiring new postgres connection 'debug'
[0m10:30:42  Using postgres connection "debug"
[0m10:30:42  On debug: select 1 as id
[0m10:30:42  Opening a new connection, currently in state init
[0m10:30:42  SQL status: SELECT 1 in 0.0 seconds
[0m10:30:42  On debug: Close
[0m10:30:42    Connection test: [[32mOK connection ok[0m]

[0m10:30:42  [32mAll checks passed![0m
[0m10:30:42  Command `dbt debug` succeeded at 12:30:42.833131 after 0.24 seconds
[0m10:30:42  Connection 'debug' was properly closed.
[0m10:30:42  Flushing usage events
[0m10:31:26  Running with dbt=1.5.0
[0m10:31:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:31:26  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:31:26  Unable to do partial parsing because profile has changed
[0m10:31:26  Unable to do partial parsing because a project dependency has been added
[0m10:31:26  Unable to do partial parsing because a project config has changed
[0m10:31:28  1699: static parser successfully parsed customers.sql
[0m10:31:28  1603: static parser failed on orders.sql
[0m10:31:28  1602: parser fallback to jinja rendering on orders.sql
[0m10:31:28  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:31:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:31:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:31:28  1603: static parser failed on staging\v_staging_orders.sql
[0m10:31:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:31:28  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:31:28  Command `dbt run` failed at 12:31:28.471240 after 1.95 seconds
[0m10:31:28  Flushing usage events
[0m10:31:33  Running with dbt=1.5.0
[0m10:31:33  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:31:34  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:31:34  Unable to do partial parsing because profile has changed
[0m10:31:34  Unable to do partial parsing because a project dependency has been added
[0m10:31:34  Unable to do partial parsing because a project config has changed
[0m10:31:35  1699: static parser successfully parsed customers.sql
[0m10:31:35  1603: static parser failed on orders.sql
[0m10:31:35  1602: parser fallback to jinja rendering on orders.sql
[0m10:31:35  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:31:35  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:31:35  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:31:35  1603: static parser failed on staging\v_staging_orders.sql
[0m10:31:35  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:31:35  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:31:35  Command `dbt run` failed at 12:31:35.827775 after 1.90 seconds
[0m10:31:35  Flushing usage events
[0m10:35:40  Running with dbt=1.5.0
[0m10:35:40  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:35:40  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:35:40  Unable to do partial parsing because profile has changed
[0m10:35:40  Unable to do partial parsing because a project dependency has been added
[0m10:35:40  Unable to do partial parsing because a project config has changed
[0m10:35:41  1699: static parser successfully parsed customers.sql
[0m10:35:41  1603: static parser failed on orders.sql
[0m10:35:41  1602: parser fallback to jinja rendering on orders.sql
[0m10:35:41  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:35:41  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:35:41  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:35:42  1603: static parser failed on staging\v_staging_orders.sql
[0m10:35:42  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:35:42  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:35:42  Command `dbt run` failed at 12:35:42.288183 after 1.99 seconds
[0m10:35:42  Flushing usage events
[0m10:40:47  Running with dbt=1.5.0
[0m10:40:47  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:40:47  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:40:47  Unable to do partial parsing because profile has changed
[0m10:40:47  Unable to do partial parsing because a project dependency has been added
[0m10:40:47  Unable to do partial parsing because a project config has changed
[0m10:40:48  1699: static parser successfully parsed customers.sql
[0m10:40:48  1603: static parser failed on orders.sql
[0m10:40:48  1602: parser fallback to jinja rendering on orders.sql
[0m10:40:48  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:40:48  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:40:48  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:40:48  1603: static parser failed on staging\v_staging_orders.sql
[0m10:40:48  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:40:49  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'seeds.raw_orders' which was not found
[0m10:40:49  Command `dbt run` failed at 12:40:49.042570 after 2.03 seconds
[0m10:40:49  Flushing usage events
[0m10:48:08  Running with dbt=1.5.0
[0m10:48:08  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:48:08  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:48:08  Unable to do partial parsing because profile has changed
[0m10:48:08  Unable to do partial parsing because a project dependency has been added
[0m10:48:08  Unable to do partial parsing because a project config has changed
[0m10:48:09  1699: static parser successfully parsed customers.sql
[0m10:48:09  1603: static parser failed on orders.sql
[0m10:48:09  1602: parser fallback to jinja rendering on orders.sql
[0m10:48:09  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:48:09  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:48:09  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:48:09  1603: static parser failed on staging\v_staging_orders.sql
[0m10:48:09  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:48:10  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:48:10  Command `dbt run` failed at 12:48:10.014307 after 1.98 seconds
[0m10:48:10  Flushing usage events
[0m10:48:34  Running with dbt=1.5.0
[0m10:48:34  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:48:34  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:48:34  Unable to do partial parsing because profile has changed
[0m10:48:34  Unable to do partial parsing because a project dependency has been added
[0m10:48:34  Unable to do partial parsing because a project config has changed
[0m10:48:35  1699: static parser successfully parsed customers.sql
[0m10:48:35  1603: static parser failed on orders.sql
[0m10:48:35  1602: parser fallback to jinja rendering on orders.sql
[0m10:48:35  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:48:35  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:48:35  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:48:35  1603: static parser failed on staging\v_staging_orders.sql
[0m10:48:36  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:48:36  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:48:36  Command `dbt run` failed at 12:48:36.184498 after 2.02 seconds
[0m10:48:36  Flushing usage events
[0m10:49:57  Running with dbt=1.5.0
[0m10:49:57  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:49:57  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:49:57  Unable to do partial parsing because profile has changed
[0m10:49:57  Unable to do partial parsing because a project dependency has been added
[0m10:49:57  Unable to do partial parsing because a project config has changed
[0m10:49:59  1699: static parser successfully parsed customers.sql
[0m10:49:59  1603: static parser failed on orders.sql
[0m10:49:59  1602: parser fallback to jinja rendering on orders.sql
[0m10:49:59  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:49:59  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:49:59  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:49:59  1603: static parser failed on staging\v_staging_orders.sql
[0m10:49:59  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  invalid syntax for function call expression
    line 30
      -- {{ automate_dv.stage(include_source_columns=true,
[0m10:49:59  Command `dbt run` failed at 12:49:59.074397 after 1.67 seconds
[0m10:49:59  Flushing usage events
[0m10:50:43  Running with dbt=1.5.0
[0m10:50:43  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:50:43  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:50:43  Unable to do partial parsing because profile has changed
[0m10:50:43  Unable to do partial parsing because a project dependency has been added
[0m10:50:43  Unable to do partial parsing because a project config has changed
[0m10:50:44  1699: static parser successfully parsed customers.sql
[0m10:50:44  1603: static parser failed on orders.sql
[0m10:50:44  1602: parser fallback to jinja rendering on orders.sql
[0m10:50:44  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:50:44  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:50:44  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:50:44  1603: static parser failed on staging\v_staging_orders.sql
[0m10:50:44  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:50:44  Command `dbt run` failed at 12:50:44.789926 after 1.67 seconds
[0m10:50:44  Flushing usage events
[0m10:51:27  Running with dbt=1.5.0
[0m10:51:27  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:51:27  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:51:27  Unable to do partial parsing because profile has changed
[0m10:51:27  Unable to do partial parsing because a project dependency has been added
[0m10:51:27  Unable to do partial parsing because a project config has changed
[0m10:51:29  1699: static parser successfully parsed customers.sql
[0m10:51:29  1603: static parser failed on orders.sql
[0m10:51:29  1602: parser fallback to jinja rendering on orders.sql
[0m10:51:29  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:51:29  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:51:29  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:51:29  1603: static parser failed on staging\v_staging_orders.sql
[0m10:51:29  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:51:29  Command `dbt run` failed at 12:51:29.114612 after 1.74 seconds
[0m10:51:29  Flushing usage events
[0m10:52:38  Running with dbt=1.5.0
[0m10:52:38  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:52:39  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:52:39  Unable to do partial parsing because profile has changed
[0m10:52:39  Unable to do partial parsing because a project dependency has been added
[0m10:52:39  Unable to do partial parsing because a project config has changed
[0m10:52:40  1699: static parser successfully parsed customers.sql
[0m10:52:40  1603: static parser failed on orders.sql
[0m10:52:40  1602: parser fallback to jinja rendering on orders.sql
[0m10:52:40  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:52:40  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:52:40  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:52:40  1603: static parser failed on staging\v_staging_orders.sql
[0m10:52:40  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:52:40  Command `dbt run` failed at 12:52:40.693082 after 1.74 seconds
[0m10:52:40  Flushing usage events
[0m10:56:46  Running with dbt=1.5.0
[0m10:56:46  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:56:46  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:56:46  Unable to do partial parsing because profile has changed
[0m10:56:46  Unable to do partial parsing because a project dependency has been added
[0m10:56:46  Unable to do partial parsing because a project config has changed
[0m10:56:47  1699: static parser successfully parsed customers.sql
[0m10:56:47  1603: static parser failed on orders.sql
[0m10:56:47  1602: parser fallback to jinja rendering on orders.sql
[0m10:56:47  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:56:47  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:56:47  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:56:47  1603: static parser failed on staging\v_staging_orders.sql
[0m10:56:47  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:56:47  Command `dbt run` failed at 12:56:47.735800 after 1.74 seconds
[0m10:56:47  Flushing usage events
[0m10:58:58  Running with dbt=1.5.0
[0m10:58:58  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:58:58  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:58:58  Unable to do partial parsing because profile has changed
[0m10:58:58  Unable to do partial parsing because a project dependency has been added
[0m10:58:58  Unable to do partial parsing because a project config has changed
[0m10:58:59  1699: static parser successfully parsed customers.sql
[0m10:58:59  1603: static parser failed on orders.sql
[0m10:58:59  1602: parser fallback to jinja rendering on orders.sql
[0m10:58:59  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:58:59  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:58:59  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:58:59  1603: static parser failed on staging\v_staging_orders.sql
[0m10:58:59  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:58:59  Command `dbt run` failed at 12:58:59.850860 after 1.71 seconds
[0m10:58:59  Flushing usage events
[0m11:01:26  Running with dbt=1.5.0
[0m11:01:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:01:26  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:01:26  Unable to do partial parsing because profile has changed
[0m11:01:26  Unable to do partial parsing because a project dependency has been added
[0m11:01:26  Unable to do partial parsing because a project config has changed
[0m11:01:28  1699: static parser successfully parsed customers.sql
[0m11:01:28  1603: static parser failed on orders.sql
[0m11:01:28  1602: parser fallback to jinja rendering on orders.sql
[0m11:01:28  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m11:01:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m11:01:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m11:01:28  1603: static parser failed on staging\v_staging_orders.sql
[0m11:01:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:01:28  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
  There are 5 unused configuration paths:
  - models.jaffle_shop.sats
  - models.jaffle_shop.hubs
  - models.jaffle_shop.t_links
  - models.jaffle_shop.raw_vault
  - models.jaffle_shop.links
[0m11:01:28  Command `dbt run` failed at 13:01:28.670367 after 1.89 seconds
[0m11:01:28  Flushing usage events
[0m11:03:11  Running with dbt=1.5.0
[0m11:03:11  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:03:11  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:03:11  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:03:11  Partial parsing enabled, no changes found, skipping parsing
[0m11:03:11  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
  There are 5 unused configuration paths:
  - models.jaffle_shop.links
  - models.jaffle_shop.raw_vault
  - models.jaffle_shop.sats
  - models.jaffle_shop.t_links
  - models.jaffle_shop.hubs
[0m11:03:11  Command `dbt run` failed at 13:03:11.412163 after 0.28 seconds
[0m11:03:11  Flushing usage events
[0m11:06:07  Running with dbt=1.5.0
[0m11:06:07  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:06:07  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:06:07  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:06:07  Partial parsing enabled, no changes found, skipping parsing
[0m11:06:07  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
  There are 5 unused configuration paths:
  - models.jaffle_shop.raw_vault
  - models.jaffle_shop.sats
  - models.jaffle_shop.hubs
  - models.jaffle_shop.t_links
  - models.jaffle_shop.links
[0m11:06:07  Command `dbt run` failed at 13:06:07.756602 after 0.25 seconds
[0m11:06:07  Flushing usage events
[0m11:07:07  Running with dbt=1.5.0
[0m11:07:07  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:07:07  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:07:07  Unable to do partial parsing because a project config has changed
[0m11:07:09  1699: static parser successfully parsed customers.sql
[0m11:07:09  1603: static parser failed on orders.sql
[0m11:07:09  1602: parser fallback to jinja rendering on orders.sql
[0m11:07:09  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m11:07:09  1699: static parser successfully parsed staging\stg_customers.sql
[0m11:07:09  1699: static parser successfully parsed staging\stg_payments.sql
[0m11:07:09  1603: static parser failed on staging\v_staging_orders.sql
[0m11:07:09  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:07:09  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:07:09  
[0m11:07:09  Acquiring new postgres connection 'master'
[0m11:07:09  Acquiring new postgres connection 'list_sales'
[0m11:07:09  Using postgres connection "list_sales"
[0m11:07:09  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:09  SQL status: SELECT 4 in 0.0 seconds
[0m11:07:09  On list_sales: Close
[0m11:07:09  Acquiring new postgres connection 'list_sales_public'
[0m11:07:09  Using postgres connection "list_sales_public"
[0m11:07:09  On list_sales_public: BEGIN
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:09  SQL status: BEGIN in 0.0 seconds
[0m11:07:09  Using postgres connection "list_sales_public"
[0m11:07:09  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:07:09  SQL status: SELECT 8 in 0.0 seconds
[0m11:07:09  On list_sales_public: ROLLBACK
[0m11:07:09  On list_sales_public: Close
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: BEGIN
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:09  SQL status: BEGIN in 0.0 seconds
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:07:09  SQL status: SELECT 3 in 0.0 seconds
[0m11:07:09  On master: ROLLBACK
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: BEGIN
[0m11:07:09  SQL status: BEGIN in 0.0 seconds
[0m11:07:09  On master: COMMIT
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: COMMIT
[0m11:07:09  SQL status: COMMIT in 0.0 seconds
[0m11:07:09  On master: Close
[0m11:07:09  Concurrency: 1 threads (target='dev')
[0m11:07:09  
[0m11:07:09  Began running node model.jaffle_shop.stg_customers
[0m11:07:09  1 of 6 START sql view model public.stg_customers ............................... [RUN]
[0m11:07:09  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m11:07:09  Began compiling node model.jaffle_shop.stg_customers
[0m11:07:09  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:07:09  Timing info for model.jaffle_shop.stg_customers (compile): 13:07:09.942543 => 13:07:09.946556
[0m11:07:09  Began executing node model.jaffle_shop.stg_customers
[0m11:07:09  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m11:07:09  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:09  On model.jaffle_shop.stg_customers: BEGIN
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m11:07:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.stg_customers: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "sales"."public"."stg_customers__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.stg_customers (execute): 13:07:09.950568 => 13:07:10.139119
[0m11:07:10  On model.jaffle_shop.stg_customers: Close
[0m11:07:10  1 of 6 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.20s]
[0m11:07:10  Finished running node model.jaffle_shop.stg_customers
[0m11:07:10  Began running node model.jaffle_shop.stg_orders
[0m11:07:10  2 of 6 START sql table model public.stg_orders ................................. [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:07:10  Began compiling node model.jaffle_shop.stg_orders
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:07:10  Timing info for model.jaffle_shop.stg_orders (compile): 13:07:10.153837 => 13:07:10.159834
[0m11:07:10  Began executing node model.jaffle_shop.stg_orders
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "sales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m11:07:10  SQL status: SELECT 99 in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.stg_orders: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop view if exists "sales"."public"."stg_orders__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.stg_orders (execute): 13:07:10.163840 => 13:07:10.303043
[0m11:07:10  On model.jaffle_shop.stg_orders: Close
[0m11:07:10  2 of 6 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.16s]
[0m11:07:10  Finished running node model.jaffle_shop.stg_orders
[0m11:07:10  Began running node model.jaffle_shop.stg_payments
[0m11:07:10  3 of 6 START sql view model public.stg_payments ................................ [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:07:10  Began compiling node model.jaffle_shop.stg_payments
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:07:10  Timing info for model.jaffle_shop.stg_payments (compile): 13:07:10.316493 => 13:07:10.324489
[0m11:07:10  Began executing node model.jaffle_shop.stg_payments
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m11:07:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.stg_payments: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "sales"."public"."stg_payments__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.stg_payments (execute): 13:07:10.327498 => 13:07:10.446075
[0m11:07:10  On model.jaffle_shop.stg_payments: Close
[0m11:07:10  3 of 6 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.14s]
[0m11:07:10  Finished running node model.jaffle_shop.stg_payments
[0m11:07:10  Began running node model.jaffle_shop.v_staging_orders
[0m11:07:10  4 of 6 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.v_staging_orders)
[0m11:07:10  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:07:10  SQL status: SELECT 4 in 0.0 seconds
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:07:10  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:07:10.461138 => 13:07:10.573092
[0m11:07:10  Began executing node model.jaffle_shop.v_staging_orders
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM source_data
)

SELECT * FROM columns_to_select
  );
[0m11:07:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:07:10.575091 => 13:07:10.614632
[0m11:07:10  On model.jaffle_shop.v_staging_orders: Close
[0m11:07:10  4 of 6 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.16s]
[0m11:07:10  Finished running node model.jaffle_shop.v_staging_orders
[0m11:07:10  Began running node model.jaffle_shop.customers
[0m11:07:10  5 of 6 START sql table model public.customers .................................. [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m11:07:10  Began compiling node model.jaffle_shop.customers
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:07:10  Timing info for model.jaffle_shop.customers (compile): 13:07:10.626811 => 13:07:10.634819
[0m11:07:10  Began executing node model.jaffle_shop.customers
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.customers"
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "sales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select * from "sales"."public"."stg_customers"

),

orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),



customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m11:07:10  SQL status: SELECT 100 in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers" rename to "customers__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers__dbt_tmp" rename to "customers"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.customers: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop table if exists "sales"."public"."customers__dbt_backup" cascade
[0m11:07:10  SQL status: DROP TABLE in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.customers (execute): 13:07:10.637808 => 13:07:10.754813
[0m11:07:10  On model.jaffle_shop.customers: Close
[0m11:07:10  5 of 6 OK created sql table model public.customers ............................. [[32mSELECT 100[0m in 0.13s]
[0m11:07:10  Finished running node model.jaffle_shop.customers
[0m11:07:10  Began running node model.jaffle_shop.orders
[0m11:07:10  6 of 6 START sql table model public.orders ..................................... [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m11:07:10  Began compiling node model.jaffle_shop.orders
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

    
    select distinct
    payment_method
    from "sales"."public"."raw_payments"
    order by 1

  
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: SELECT 4 in 0.0 seconds
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.orders"
[0m11:07:10  Timing info for model.jaffle_shop.orders (compile): 13:07:10.766434 => 13:07:10.854751
[0m11:07:10  Began executing node model.jaffle_shop.orders
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.orders"
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: BEGIN
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "sales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    --Set the payment methods in a variable to use later in a for loop


with orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        --use the variable specified at the top of this model
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        
        --remove trailling , that may cause double comma errors--end for loop
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.bank_transfer_amount,

        order_payments.coupon_amount,

        order_payments.credit_card_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m11:07:10  SQL status: SELECT 99 in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders" rename to "orders__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders__dbt_tmp" rename to "orders"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.orders: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "sales"."public"."orders__dbt_backup" cascade
[0m11:07:10  SQL status: DROP TABLE in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.orders (execute): 13:07:10.856842 => 13:07:10.919859
[0m11:07:10  On model.jaffle_shop.orders: Close
[0m11:07:10  6 of 6 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.16s]
[0m11:07:10  Finished running node model.jaffle_shop.orders
[0m11:07:10  Using postgres connection "master"
[0m11:07:10  On master: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  On master: COMMIT
[0m11:07:10  Using postgres connection "master"
[0m11:07:10  On master: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  On master: Close
[0m11:07:10  Connection 'master' was properly closed.
[0m11:07:10  Connection 'list_sales' was properly closed.
[0m11:07:10  Connection 'list_sales_public' was properly closed.
[0m11:07:10  Connection 'model.jaffle_shop.orders' was properly closed.
[0m11:07:10  
[0m11:07:10  Finished running 3 view models, 3 table models in 0 hours 0 minutes and 1.31 seconds (1.31s).
[0m11:07:10  Command end result
[0m11:07:10  
[0m11:07:11  [32mCompleted successfully[0m
[0m11:07:11  
[0m11:07:11  Done. PASS=6 WARN=0 ERROR=0 SKIP=0 TOTAL=6
[0m11:07:11  Command `dbt run` succeeded at 13:07:11.004780 after 3.30 seconds
[0m11:07:11  Flushing usage events
[0m11:10:31  Running with dbt=1.5.0
[0m11:10:31  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:10:31  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:10:31  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:10:31  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:10:31  1603: static parser failed on staging\v_staging_orders.sql
[0m11:10:31  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:10:31  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:10:31  
[0m11:10:31  Acquiring new postgres connection 'master'
[0m11:10:31  Acquiring new postgres connection 'list_sales'
[0m11:10:31  Using postgres connection "list_sales"
[0m11:10:31  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:10:31  Opening a new connection, currently in state init
[0m11:10:31  SQL status: SELECT 4 in 0.0 seconds
[0m11:10:31  On list_sales: Close
[0m11:10:31  Acquiring new postgres connection 'list_sales_public'
[0m11:10:31  Using postgres connection "list_sales_public"
[0m11:10:31  On list_sales_public: BEGIN
[0m11:10:31  Opening a new connection, currently in state init
[0m11:10:31  SQL status: BEGIN in 0.0 seconds
[0m11:10:31  Using postgres connection "list_sales_public"
[0m11:10:31  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:10:31  SQL status: SELECT 9 in 0.0 seconds
[0m11:10:31  On list_sales_public: ROLLBACK
[0m11:10:31  On list_sales_public: Close
[0m11:10:31  Using postgres connection "master"
[0m11:10:31  On master: BEGIN
[0m11:10:31  Opening a new connection, currently in state init
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:10:32  SQL status: SELECT 3 in 0.0 seconds
[0m11:10:32  On master: ROLLBACK
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: BEGIN
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  On master: COMMIT
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: COMMIT
[0m11:10:32  SQL status: COMMIT in 0.0 seconds
[0m11:10:32  On master: Close
[0m11:10:32  Concurrency: 1 threads (target='dev')
[0m11:10:32  
[0m11:10:32  Began running node model.jaffle_shop.v_staging_orders
[0m11:10:32  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:10:32  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:10:32  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:10:32  Opening a new connection, currently in state init
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:10:32  SQL status: SELECT 4 in 0.0 seconds
[0m11:10:32  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:10:32  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:10:32.074056 => 13:10:32.162994
[0m11:10:32  Began executing node model.jaffle_shop.v_staging_orders
[0m11:10:32  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM source_data
)

SELECT * FROM columns_to_select
  );
[0m11:10:32  SQL status: CREATE VIEW in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders" rename to "v_staging_orders__dbt_backup"
[0m11:10:32  SQL status: ALTER TABLE in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:10:32  SQL status: ALTER TABLE in 0.0 seconds
[0m11:10:32  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:10:32  SQL status: COMMIT in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:10:32  SQL status: DROP VIEW in 0.0 seconds
[0m11:10:32  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:10:32.165003 => 13:10:32.272678
[0m11:10:32  On model.jaffle_shop.v_staging_orders: Close
[0m11:10:32  1 of 1 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.21s]
[0m11:10:32  Finished running node model.jaffle_shop.v_staging_orders
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: BEGIN
[0m11:10:32  Opening a new connection, currently in state closed
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  On master: COMMIT
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: COMMIT
[0m11:10:32  SQL status: COMMIT in 0.0 seconds
[0m11:10:32  On master: Close
[0m11:10:32  Connection 'master' was properly closed.
[0m11:10:32  Connection 'list_sales' was properly closed.
[0m11:10:32  Connection 'list_sales_public' was properly closed.
[0m11:10:32  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:10:32  
[0m11:10:32  Finished running 1 view model in 0 hours 0 minutes and 0.72 seconds (0.72s).
[0m11:10:32  Command end result
[0m11:10:32  
[0m11:10:32  [32mCompleted successfully[0m
[0m11:10:32  
[0m11:10:32  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m11:10:32  Command `dbt run` succeeded at 13:10:32.514548 after 1.20 seconds
[0m11:10:32  Flushing usage events
[0m11:12:18  Running with dbt=1.5.0
[0m11:12:18  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:12:18  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:12:18  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:12:18  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:12:18  1603: static parser failed on staging\v_staging_orders.sql
[0m11:12:18  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:12:18  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:12:18  
[0m11:12:18  Acquiring new postgres connection 'master'
[0m11:12:18  Acquiring new postgres connection 'list_sales'
[0m11:12:18  Using postgres connection "list_sales"
[0m11:12:18  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: SELECT 4 in 0.0 seconds
[0m11:12:18  On list_sales: Close
[0m11:12:18  Acquiring new postgres connection 'list_sales_public'
[0m11:12:18  Using postgres connection "list_sales_public"
[0m11:12:18  On list_sales_public: BEGIN
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  Using postgres connection "list_sales_public"
[0m11:12:18  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:12:18  SQL status: SELECT 9 in 0.0 seconds
[0m11:12:18  On list_sales_public: ROLLBACK
[0m11:12:18  On list_sales_public: Close
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: BEGIN
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:12:18  SQL status: SELECT 3 in 0.0 seconds
[0m11:12:18  On master: ROLLBACK
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: BEGIN
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  On master: COMMIT
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: COMMIT
[0m11:12:18  SQL status: COMMIT in 0.0 seconds
[0m11:12:18  On master: Close
[0m11:12:18  Concurrency: 1 threads (target='dev')
[0m11:12:18  
[0m11:12:18  Began running node model.jaffle_shop.v_staging_orders
[0m11:12:18  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:12:18  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:12:18  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:12:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:18  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:18  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:12:19  SQL status: SELECT 4 in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:12:19  SQL status: SELECT 4 in 0.0 seconds
[0m11:12:19  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:12:19  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:12:18.936135 => 13:12:19.037324
[0m11:12:19  Began executing node model.jaffle_shop.v_staging_orders
[0m11:12:19  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m11:12:19  SQL status: CREATE VIEW in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders" rename to "v_staging_orders__dbt_backup"
[0m11:12:19  SQL status: ALTER TABLE in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:12:19  SQL status: ALTER TABLE in 0.0 seconds
[0m11:12:19  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:12:19  SQL status: COMMIT in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:12:19  SQL status: DROP VIEW in 0.0 seconds
[0m11:12:19  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:12:19.039324 => 13:12:19.197520
[0m11:12:19  On model.jaffle_shop.v_staging_orders: Close
[0m11:12:19  1 of 1 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.27s]
[0m11:12:19  Finished running node model.jaffle_shop.v_staging_orders
[0m11:12:19  Using postgres connection "master"
[0m11:12:19  On master: BEGIN
[0m11:12:19  Opening a new connection, currently in state closed
[0m11:12:19  SQL status: BEGIN in 0.0 seconds
[0m11:12:19  On master: COMMIT
[0m11:12:19  Using postgres connection "master"
[0m11:12:19  On master: COMMIT
[0m11:12:19  SQL status: COMMIT in 0.0 seconds
[0m11:12:19  On master: Close
[0m11:12:19  Connection 'master' was properly closed.
[0m11:12:19  Connection 'list_sales' was properly closed.
[0m11:12:19  Connection 'list_sales_public' was properly closed.
[0m11:12:19  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:12:19  
[0m11:12:19  Finished running 1 view model in 0 hours 0 minutes and 0.68 seconds (0.68s).
[0m11:12:19  Command end result
[0m11:12:19  
[0m11:12:19  [32mCompleted successfully[0m
[0m11:12:19  
[0m11:12:19  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m11:12:19  Command `dbt run` succeeded at 13:12:19.282771 after 1.09 seconds
[0m11:12:19  Flushing usage events
[0m11:15:47  Running with dbt=1.5.0
[0m11:15:47  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:15:48  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:15:48  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:15:48  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:15:48  1603: static parser failed on staging\v_staging_orders.sql
[0m11:15:48  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:15:48  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:15:48  
[0m11:15:48  Acquiring new postgres connection 'master'
[0m11:15:48  Acquiring new postgres connection 'list_sales'
[0m11:15:48  Using postgres connection "list_sales"
[0m11:15:48  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: SELECT 4 in 0.0 seconds
[0m11:15:48  On list_sales: Close
[0m11:15:48  Acquiring new postgres connection 'list_sales_public'
[0m11:15:48  Using postgres connection "list_sales_public"
[0m11:15:48  On list_sales_public: BEGIN
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  Using postgres connection "list_sales_public"
[0m11:15:48  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:15:48  SQL status: SELECT 9 in 0.0 seconds
[0m11:15:48  On list_sales_public: ROLLBACK
[0m11:15:48  On list_sales_public: Close
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: BEGIN
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:15:48  SQL status: SELECT 3 in 0.0 seconds
[0m11:15:48  On master: ROLLBACK
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: BEGIN
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  On master: COMMIT
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: COMMIT
[0m11:15:48  SQL status: COMMIT in 0.0 seconds
[0m11:15:48  On master: Close
[0m11:15:48  Concurrency: 1 threads (target='dev')
[0m11:15:48  
[0m11:15:48  Began running node model.jaffle_shop.v_staging_orders
[0m11:15:48  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:15:48  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:15:48  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:15:48  SQL status: SELECT 4 in 0.0 seconds
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:15:48  SQL status: SELECT 4 in 0.0 seconds
[0m11:15:48  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:15:48  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:15:48.656780 => 13:15:48.755555
[0m11:15:48  Began executing node model.jaffle_shop.v_staging_orders
[0m11:15:48  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 12:43:00 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m11:15:48  Postgres adapter: Postgres error: syntax error at or near "12"
LINE 36:     28/05/2023 12:43:00 AS LOAD_DATETIME,
                        ^

[0m11:15:48  On model.jaffle_shop.v_staging_orders: ROLLBACK
[0m11:15:48  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:15:48.757673 => 13:15:48.805947
[0m11:15:48  On model.jaffle_shop.v_staging_orders: Close
[0m11:15:48  Database Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  syntax error at or near "12"
  LINE 36:     28/05/2023 12:43:00 AS LOAD_DATETIME,
                          ^
  compiled Code at target\run\jaffle_shop\models\staging\v_staging_orders.sql
[0m11:15:48  1 of 1 ERROR creating sql view model public.v_staging_orders ................... [[31mERROR[0m in 0.22s]
[0m11:15:48  Finished running node model.jaffle_shop.v_staging_orders
[0m11:15:48  CANCEL query list_sales ........................................................ [[31mCANCEL[0m]
[0m11:15:48  CANCEL query list_sales_public ................................................. [[31mCANCEL[0m]
[0m11:15:48  CANCEL query model.jaffle_shop.v_staging_orders ................................ [[31mCANCEL[0m]
[0m11:15:48  
[0m11:15:48  [33mDatabase Error in model v_staging_orders (models\staging\v_staging_orders.sql)[0m
[0m11:15:48    syntax error at or near "12"
[0m11:15:48    LINE 36:     28/05/2023 12:43:00 AS LOAD_DATETIME,
[0m11:15:48                            ^
[0m11:15:48    compiled Code at target\run\jaffle_shop\models\staging\v_staging_orders.sql
[0m11:15:48  Connection 'master' was properly closed.
[0m11:15:48  Connection 'list_sales' was properly closed.
[0m11:15:48  Connection 'list_sales_public' was properly closed.
[0m11:15:48  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:15:48  
[0m11:15:48  Finished running 1 view model in 0 hours 0 minutes and 0.56 seconds (0.56s).
[0m11:15:48  Encountered an error:
FailFast Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  Failing early due to test failure or runtime error
[0m11:15:48  Command `dbt run` failed at 13:15:48.892846 after 0.98 seconds
[0m11:15:48  Flushing usage events
[0m11:16:29  Running with dbt=1.5.0
[0m11:16:29  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:16:29  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:16:29  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:16:29  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:16:29  1603: static parser failed on staging\v_staging_orders.sql
[0m11:16:29  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:16:29  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:16:29  
[0m11:16:29  Acquiring new postgres connection 'master'
[0m11:16:29  Acquiring new postgres connection 'list_sales'
[0m11:16:29  Using postgres connection "list_sales"
[0m11:16:29  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: SELECT 4 in 0.0 seconds
[0m11:16:29  On list_sales: Close
[0m11:16:29  Acquiring new postgres connection 'list_sales_public'
[0m11:16:29  Using postgres connection "list_sales_public"
[0m11:16:29  On list_sales_public: BEGIN
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  Using postgres connection "list_sales_public"
[0m11:16:29  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:16:29  SQL status: SELECT 9 in 0.0 seconds
[0m11:16:29  On list_sales_public: ROLLBACK
[0m11:16:29  On list_sales_public: Close
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: BEGIN
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:16:29  SQL status: SELECT 3 in 0.0 seconds
[0m11:16:29  On master: ROLLBACK
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: BEGIN
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  On master: COMMIT
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: COMMIT
[0m11:16:29  SQL status: COMMIT in 0.0 seconds
[0m11:16:29  On master: Close
[0m11:16:29  Concurrency: 1 threads (target='dev')
[0m11:16:29  
[0m11:16:29  Began running node model.jaffle_shop.v_staging_orders
[0m11:16:29  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:16:29  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:16:29  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:29  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:29  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:16:29  SQL status: SELECT 4 in 0.0 seconds
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:29  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:16:29  SQL status: SELECT 4 in 0.0 seconds
[0m11:16:29  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:16:29  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:16:29.864475 => 13:16:29.959593
[0m11:16:29  Began executing node model.jaffle_shop.v_staging_orders
[0m11:16:29  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m11:16:30  SQL status: CREATE VIEW in 0.0 seconds
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders" rename to "v_staging_orders__dbt_backup"
[0m11:16:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:16:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:16:30  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:16:30  SQL status: COMMIT in 0.0 seconds
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:16:30  SQL status: DROP VIEW in 0.0 seconds
[0m11:16:30  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:16:29.963600 => 13:16:30.141478
[0m11:16:30  On model.jaffle_shop.v_staging_orders: Close
[0m11:16:30  1 of 1 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.28s]
[0m11:16:30  Finished running node model.jaffle_shop.v_staging_orders
[0m11:16:30  Using postgres connection "master"
[0m11:16:30  On master: BEGIN
[0m11:16:30  Opening a new connection, currently in state closed
[0m11:16:30  SQL status: BEGIN in 0.0 seconds
[0m11:16:30  On master: COMMIT
[0m11:16:30  Using postgres connection "master"
[0m11:16:30  On master: COMMIT
[0m11:16:30  SQL status: COMMIT in 0.0 seconds
[0m11:16:30  On master: Close
[0m11:16:30  Connection 'master' was properly closed.
[0m11:16:30  Connection 'list_sales' was properly closed.
[0m11:16:30  Connection 'list_sales_public' was properly closed.
[0m11:16:30  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:16:30  
[0m11:16:30  Finished running 1 view model in 0 hours 0 minutes and 0.82 seconds (0.82s).
[0m11:16:30  Command end result
[0m11:16:30  
[0m11:16:30  [32mCompleted successfully[0m
[0m11:16:30  
[0m11:16:30  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m11:16:30  Command `dbt run` succeeded at 13:16:30.335815 after 1.23 seconds
[0m11:16:30  Flushing usage events
