[0m09:56:02  Running with dbt=1.5.0
[0m09:56:02  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m09:56:02  Encountered an error:
Compilation Error
  dbt found 2 package(s) specified in packages.yml, but only 1 package(s) installed in dbt_packages. Run "dbt deps" to install package dependencies.
[0m09:56:02  Command `dbt run` failed at 11:56:02.341899 after 0.10 seconds
[0m09:56:02  Flushing usage events
[0m10:00:15  Running with dbt=1.5.0
[0m10:00:15  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:00:15  Set downloads directory='C:\Users\lfouc\AppData\Local\Temp\dbt-downloads-wzv26rhu'
[0m10:00:15  Executing "git clone --depth 1 https://github.com/dbt-labs/dbt-utils.git b03949bb53de3439f6a8057088ba4032"
[0m10:00:17  STDOUT: "b''"
[0m10:00:17  STDERR: "b"Cloning into 'b03949bb53de3439f6a8057088ba4032'...\n""
[0m10:00:17  Pulling new dependency b03949bb53de3439f6a8057088ba4032.
[0m10:00:17  Executing "git rev-parse HEAD"
[0m10:00:17  STDOUT: "b'e9d23b5c152422d6a294c71199e595f4224ca966\n'"
[0m10:00:17  STDERR: "b''"
[0m10:00:17  Checking out revision 0.9.2.
[0m10:00:17  Executing "git remote set-branches origin 0.9.2"
[0m10:00:17  STDOUT: "b''"
[0m10:00:17  STDERR: "b''"
[0m10:00:17  Executing "git fetch origin --depth 1 --tags 0.9.2"
[0m10:00:18  STDOUT: "b''"
[0m10:00:18  STDERR: "b'From https://github.com/dbt-labs/dbt-utils\n * tag               0.9.2      -> FETCH_HEAD\n * [new tag]         0.0.1      -> 0.0.1\n * [new tag]         0.1.0      -> 0.1.0\n * [new tag]         0.1.1      -> 0.1.1\n * [new tag]         0.1.10     -> 0.1.10\n * [new tag]         0.1.11     -> 0.1.11\n * [new tag]         0.1.12     -> 0.1.12\n * [new tag]         0.1.13     -> 0.1.13\n * [new tag]         0.1.14     -> 0.1.14\n * [new tag]         0.1.15     -> 0.1.15\n * [new tag]         0.1.16     -> 0.1.16\n * [new tag]         0.1.17     -> 0.1.17\n * [new tag]         0.1.18     -> 0.1.18\n * [new tag]         0.1.19     -> 0.1.19\n * [new tag]         0.1.2      -> 0.1.2\n * [new tag]         0.1.20     -> 0.1.20\n * [new tag]         0.1.21     -> 0.1.21\n * [new tag]         0.1.22     -> 0.1.22\n * [new tag]         0.1.23     -> 0.1.23\n * [new tag]         0.1.24     -> 0.1.24\n * [new tag]         0.1.25     -> 0.1.25\n * [new tag]         0.1.3      -> 0.1.3\n * [new tag]         0.1.4      -> 0.1.4\n * [new tag]         0.1.5      -> 0.1.5\n * [new tag]         0.1.6      -> 0.1.6\n * [new tag]         0.1.7      -> 0.1.7\n * [new tag]         0.1.8      -> 0.1.8\n * [new tag]         0.1.9      -> 0.1.9\n * [new tag]         0.2.0      -> 0.2.0\n * [new tag]         0.2.1      -> 0.2.1\n * [new tag]         0.2.2      -> 0.2.2\n * [new tag]         0.2.3      -> 0.2.3\n * [new tag]         0.2.4      -> 0.2.4\n * [new tag]         0.2.5      -> 0.2.5\n * [new tag]         0.3.0      -> 0.3.0\n * [new tag]         0.4.0      -> 0.4.0\n * [new tag]         0.4.1      -> 0.4.1\n * [new tag]         0.5.0      -> 0.5.0\n * [new tag]         0.5.1      -> 0.5.1\n * [new tag]         0.6.0      -> 0.6.0\n * [new tag]         0.6.1      -> 0.6.1\n * [new tag]         0.6.2      -> 0.6.2\n * [new tag]         0.6.3      -> 0.6.3\n * [new tag]         0.6.4      -> 0.6.4\n * [new tag]         0.6.5      -> 0.6.5\n * [new tag]         0.6.6      -> 0.6.6\n * [new tag]         0.7.0      -> 0.7.0\n * [new tag]         0.7.1      -> 0.7.1\n * [new tag]         0.7.2      -> 0.7.2\n * [new tag]         0.7.3      -> 0.7.3\n * [new tag]         0.7.4      -> 0.7.4\n * [new tag]         0.7.4-b1   -> 0.7.4-b1\n * [new tag]         0.7.4b1    -> 0.7.4b1\n * [new tag]         0.7.5      -> 0.7.5\n * [new tag]         0.7.6      -> 0.7.6\n * [new tag]         0.8.0      -> 0.8.0\n * [new tag]         0.8.1      -> 0.8.1\n * [new tag]         0.8.2      -> 0.8.2\n * [new tag]         0.8.3      -> 0.8.3\n * [new tag]         0.8.4      -> 0.8.4\n * [new tag]         0.8.5      -> 0.8.5\n * [new tag]         0.8.6      -> 0.8.6\n * [new tag]         0.9.0      -> 0.9.0\n * [new tag]         0.9.1      -> 0.9.1\n * [new tag]         0.9.2      -> 0.9.2\n * [new tag]         0.9.5      -> 0.9.5\n * [new tag]         0.9.6      -> 0.9.6\n * [new tag]         1.0.0      -> 1.0.0\n * [new tag]         1.0.0-b1   -> 1.0.0-b1\n * [new tag]         1.0.0-b2   -> 1.0.0-b2\n * [new tag]         1.0.0-rc1  -> 1.0.0-rc1\n * [new tag]         1.1.0      -> 1.1.0\n'"
[0m10:00:18  Executing "git tag --list"
[0m10:00:18  STDOUT: "b'0.0.1\n0.1.0\n0.1.1\n0.1.10\n0.1.11\n0.1.12\n0.1.13\n0.1.14\n0.1.15\n0.1.16\n0.1.17\n0.1.18\n0.1.19\n0.1.2\n0.1.20\n0.1.21\n0.1.22\n0.1.23\n0.1.24\n0.1.25\n0.1.3\n0.1.4\n0.1.5\n0.1.6\n0.1.7\n0.1.8\n0.1.9\n0.2.0\n0.2.1\n0.2.2\n0.2.3\n0.2.4\n0.2.5\n0.3.0\n0.4.0\n0.4.1\n0.5.0\n0.5.1\n0.6.0\n0.6.1\n0.6.2\n0.6.3\n0.6.4\n0.6.5\n0.6.6\n0.7.0\n0.7.1\n0.7.2\n0.7.3\n0.7.4\n0.7.4-b1\n0.7.4b1\n0.7.5\n0.7.6\n0.8.0\n0.8.1\n0.8.2\n0.8.3\n0.8.4\n0.8.5\n0.8.6\n0.9.0\n0.9.1\n0.9.2\n0.9.5\n0.9.6\n1.0.0\n1.0.0-b1\n1.0.0-b2\n1.0.0-rc1\n1.1.0\n'"
[0m10:00:18  STDERR: "b''"
[0m10:00:18  Executing "git reset --hard tags/0.9.2"
[0m10:00:18  STDOUT: "b'HEAD is now at 064c2ab Add where clause example (#623)\n'"
[0m10:00:18  STDERR: "b''"
[0m10:00:18  Executing "git rev-parse HEAD"
[0m10:00:18  STDOUT: "b'064c2abee80816ea855de32e66e54e96d9916677\n'"
[0m10:00:18  STDERR: "b''"
[0m10:00:18  Checked out at 064c2ab.
[0m10:00:18  Making package index registry request: GET https://hub.getdbt.com/api/v1/index.json
[0m10:00:19  Response from registry index: GET https://hub.getdbt.com/api/v1/index.json 200
[0m10:00:19  Making package registry request: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json
[0m10:00:19  Response from registry: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json 200
[0m10:00:19  Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
[0m10:00:19  Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
[0m10:00:19  Executing "git clone --depth 1 https://github.com/dbt-labs/dbt-utils.git b03949bb53de3439f6a8057088ba4032"
[0m10:00:19  STDOUT: "b''"
[0m10:00:19  STDERR: "b"fatal: destination path 'b03949bb53de3439f6a8057088ba4032' already exists and is not an empty directory.\n""
[0m10:00:19  command return code=128
[0m10:00:19  Updating existing dependency b03949bb53de3439f6a8057088ba4032.
[0m10:00:19  Executing "git rev-parse HEAD"
[0m10:00:19  STDOUT: "b'064c2abee80816ea855de32e66e54e96d9916677\n'"
[0m10:00:19  STDERR: "b''"
[0m10:00:19  Checking out revision 0.9.2.
[0m10:00:19  Executing "git remote set-branches origin 0.9.2"
[0m10:00:19  STDOUT: "b''"
[0m10:00:19  STDERR: "b''"
[0m10:00:19  Executing "git fetch origin --depth 1 --tags 0.9.2"
[0m10:00:20  STDOUT: "b''"
[0m10:00:20  STDERR: "b'From https://github.com/dbt-labs/dbt-utils\n * tag               0.9.2      -> FETCH_HEAD\n'"
[0m10:00:20  Executing "git tag --list"
[0m10:00:20  STDOUT: "b'0.0.1\n0.1.0\n0.1.1\n0.1.10\n0.1.11\n0.1.12\n0.1.13\n0.1.14\n0.1.15\n0.1.16\n0.1.17\n0.1.18\n0.1.19\n0.1.2\n0.1.20\n0.1.21\n0.1.22\n0.1.23\n0.1.24\n0.1.25\n0.1.3\n0.1.4\n0.1.5\n0.1.6\n0.1.7\n0.1.8\n0.1.9\n0.2.0\n0.2.1\n0.2.2\n0.2.3\n0.2.4\n0.2.5\n0.3.0\n0.4.0\n0.4.1\n0.5.0\n0.5.1\n0.6.0\n0.6.1\n0.6.2\n0.6.3\n0.6.4\n0.6.5\n0.6.6\n0.7.0\n0.7.1\n0.7.2\n0.7.3\n0.7.4\n0.7.4-b1\n0.7.4b1\n0.7.5\n0.7.6\n0.8.0\n0.8.1\n0.8.2\n0.8.3\n0.8.4\n0.8.5\n0.8.6\n0.9.0\n0.9.1\n0.9.2\n0.9.5\n0.9.6\n1.0.0\n1.0.0-b1\n1.0.0-b2\n1.0.0-rc1\n1.1.0\n'"
[0m10:00:20  STDERR: "b''"
[0m10:00:20  Executing "git reset --hard tags/0.9.2"
[0m10:00:20  STDOUT: "b'HEAD is now at 064c2ab Add where clause example (#623)\n'"
[0m10:00:20  STDERR: "b''"
[0m10:00:20  Executing "git rev-parse HEAD"
[0m10:00:20  STDOUT: "b'064c2abee80816ea855de32e66e54e96d9916677\n'"
[0m10:00:20  STDERR: "b''"
[0m10:00:20  Already at 064c2ab, nothing to do.
[0m10:00:20  Encountered an error:
Found duplicate project "dbt_utils". This occurs when a dependency has the same project name as some other dependency.
[0m10:00:20  Command `dbt deps` failed at 12:00:20.706331 after 5.21 seconds
[0m10:00:20  Flushing usage events
[0m10:01:15  Running with dbt=1.5.0
[0m10:01:15  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:01:15  Set downloads directory='C:\Users\lfouc\AppData\Local\Temp\dbt-downloads-5g6izngv'
[0m10:01:15  Making package index registry request: GET https://hub.getdbt.com/api/v1/index.json
[0m10:01:15  Response from registry index: GET https://hub.getdbt.com/api/v1/index.json 200
[0m10:01:15  Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
[0m10:01:15  Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
[0m10:01:15  Making package registry request: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json
[0m10:01:15  Response from registry: GET https://hub.getdbt.com/api/v1/Datavault-UK/automate_dv.json 200
[0m10:01:15  Installing dbt-labs/dbt_utils
[0m10:01:16  Installed from version 1.1.0
[0m10:01:16  Up to date!
[0m10:01:16  Installing Datavault-UK/automate_dv
[0m10:01:17  Installed from version 0.9.6
[0m10:01:17  Up to date!
[0m10:01:17  Command `dbt deps` succeeded at 12:01:17.116033 after 2.12 seconds
[0m10:01:17  Flushing usage events
[0m10:01:25  Running with dbt=1.5.0
[0m10:01:25  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:01:25  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:01:25  Unable to do partial parsing because profile has changed
[0m10:01:25  Unable to do partial parsing because a project dependency has been added
[0m10:01:25  Unable to do partial parsing because a project config has changed
[0m10:01:28  1699: static parser successfully parsed customers.sql
[0m10:01:28  1603: static parser failed on orders.sql
[0m10:01:28  1602: parser fallback to jinja rendering on orders.sql
[0m10:01:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:01:28  1699: static parser successfully parsed staging\stg_orders.sql
[0m10:01:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:01:28  1603: static parser failed on staging\v_staging_orders.sql
[0m10:01:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:01:28  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_staging.raw_customer' which was not found
[0m10:01:28  Command `dbt run` failed at 12:01:28.367964 after 3.34 seconds
[0m10:01:28  Flushing usage events
[0m10:19:26  Running with dbt=1.5.0
[0m10:19:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:19:26  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:19:26  Unable to do partial parsing because profile has changed
[0m10:19:26  Unable to do partial parsing because a project dependency has been added
[0m10:19:26  Unable to do partial parsing because a project config has changed
[0m10:19:28  1699: static parser successfully parsed customers.sql
[0m10:19:28  1603: static parser failed on orders.sql
[0m10:19:28  1602: parser fallback to jinja rendering on orders.sql
[0m10:19:28  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:19:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:19:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:19:28  1603: static parser failed on staging\v_staging_orders.sql
[0m10:19:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:19:28  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_staging.raw_customer' which was not found
[0m10:19:28  Command `dbt run` failed at 12:19:28.615615 after 1.95 seconds
[0m10:19:28  Flushing usage events
[0m10:19:42  Running with dbt=1.5.0
[0m10:19:42  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:19:42  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:19:42  Unable to do partial parsing because profile has changed
[0m10:19:42  Unable to do partial parsing because a project dependency has been added
[0m10:19:42  Unable to do partial parsing because a project config has changed
[0m10:19:43  1699: static parser successfully parsed customers.sql
[0m10:19:43  1603: static parser failed on orders.sql
[0m10:19:43  1602: parser fallback to jinja rendering on orders.sql
[0m10:19:43  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:19:43  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:19:43  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:19:43  1603: static parser failed on staging\v_staging_orders.sql
[0m10:19:43  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:19:44  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_staging.stg_orders' which was not found
[0m10:19:44  Command `dbt run` failed at 12:19:44.129721 after 1.98 seconds
[0m10:19:44  Flushing usage events
[0m10:20:20  Running with dbt=1.5.0
[0m10:20:20  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:20:20  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:20:20  Unable to do partial parsing because profile has changed
[0m10:20:20  Unable to do partial parsing because a project dependency has been added
[0m10:20:20  Unable to do partial parsing because a project config has changed
[0m10:20:21  1699: static parser successfully parsed customers.sql
[0m10:20:21  1603: static parser failed on orders.sql
[0m10:20:21  1602: parser fallback to jinja rendering on orders.sql
[0m10:20:21  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:20:21  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:20:21  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:20:21  1603: static parser failed on staging\v_staging_orders.sql
[0m10:20:21  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:20:22  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:20:22  Command `dbt run` failed at 12:20:22.128331 after 1.96 seconds
[0m10:20:22  Flushing usage events
[0m10:21:45  Running with dbt=1.5.0
[0m10:21:46  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:21:46  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:21:46  Unable to do partial parsing because profile has changed
[0m10:21:46  Unable to do partial parsing because a project dependency has been added
[0m10:21:46  Unable to do partial parsing because a project config has changed
[0m10:21:47  1699: static parser successfully parsed customers.sql
[0m10:21:47  1603: static parser failed on orders.sql
[0m10:21:47  1602: parser fallback to jinja rendering on orders.sql
[0m10:21:47  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:21:47  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:21:47  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:21:47  1603: static parser failed on staging\v_staging_orders.sql
[0m10:21:47  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:21:47  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:21:47  Command `dbt run` failed at 12:21:47.925547 after 1.95 seconds
[0m10:21:47  Flushing usage events
[0m10:21:54  Running with dbt=1.5.0
[0m10:21:54  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:21:54  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:21:54  Unable to do partial parsing because profile has changed
[0m10:21:54  Unable to do partial parsing because a project dependency has been added
[0m10:21:54  Unable to do partial parsing because a project config has changed
[0m10:21:56  1699: static parser successfully parsed customers.sql
[0m10:21:56  1603: static parser failed on orders.sql
[0m10:21:56  1602: parser fallback to jinja rendering on orders.sql
[0m10:21:56  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:21:56  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:21:56  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:21:56  1603: static parser failed on staging\v_staging_orders.sql
[0m10:21:56  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:21:56  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:21:56  Command `dbt run` failed at 12:21:56.505862 after 1.93 seconds
[0m10:21:56  Flushing usage events
[0m10:22:21  Running with dbt=1.5.0
[0m10:22:21  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:22:21  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:22:21  Unable to do partial parsing because profile has changed
[0m10:22:21  Unable to do partial parsing because a project dependency has been added
[0m10:22:21  Unable to do partial parsing because a project config has changed
[0m10:22:23  1699: static parser successfully parsed customers.sql
[0m10:22:23  1603: static parser failed on orders.sql
[0m10:22:23  1602: parser fallback to jinja rendering on orders.sql
[0m10:22:23  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:22:23  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:22:23  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:22:23  1603: static parser failed on staging\v_staging_orders.sql
[0m10:22:23  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:22:23  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:22:23  Command `dbt run` failed at 12:22:23.664524 after 1.95 seconds
[0m10:22:23  Flushing usage events
[0m10:23:42  Running with dbt=1.5.0
[0m10:23:42  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:23:42  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:23:42  Unable to do partial parsing because profile has changed
[0m10:23:42  Unable to do partial parsing because a project dependency has been added
[0m10:23:42  Unable to do partial parsing because a project config has changed
[0m10:23:43  1699: static parser successfully parsed customers.sql
[0m10:23:43  1603: static parser failed on orders.sql
[0m10:23:43  1602: parser fallback to jinja rendering on orders.sql
[0m10:23:43  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:23:43  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:23:43  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:23:43  1603: static parser failed on staging\v_staging_orders.sql
[0m10:23:43  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:23:43  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:23:43  Command `dbt run` failed at 12:23:43.998254 after 1.96 seconds
[0m10:23:43  Flushing usage events
[0m10:30:42  Running with dbt=1.5.0
[0m10:30:42  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:30:42  dbt version: 1.5.0
[0m10:30:42  python version: 3.10.11
[0m10:30:42  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m10:30:42  os info: Windows-10-10.0.22621-SP0
[0m10:30:42  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m10:30:42  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m10:30:42  Configuration:
[0m10:30:42    profiles.yml file [[32mOK found and valid[0m]
[0m10:30:42    dbt_project.yml file [[32mOK found and valid[0m]
[0m10:30:42  Required dependencies:
[0m10:30:42  Executing "git --help"
[0m10:30:42  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m10:30:42  STDERR: "b''"
[0m10:30:42   - git [[32mOK found[0m]

[0m10:30:42  Connection:
[0m10:30:42    host: localhost
[0m10:30:42    port: 5432
[0m10:30:42    user: postgres
[0m10:30:42    database: sales
[0m10:30:42    schema: public
[0m10:30:42    search_path: None
[0m10:30:42    keepalives_idle: 0
[0m10:30:42    sslmode: None
[0m10:30:42  Acquiring new postgres connection 'debug'
[0m10:30:42  Using postgres connection "debug"
[0m10:30:42  On debug: select 1 as id
[0m10:30:42  Opening a new connection, currently in state init
[0m10:30:42  SQL status: SELECT 1 in 0.0 seconds
[0m10:30:42  On debug: Close
[0m10:30:42    Connection test: [[32mOK connection ok[0m]

[0m10:30:42  [32mAll checks passed![0m
[0m10:30:42  Command `dbt debug` succeeded at 12:30:42.833131 after 0.24 seconds
[0m10:30:42  Connection 'debug' was properly closed.
[0m10:30:42  Flushing usage events
[0m10:31:26  Running with dbt=1.5.0
[0m10:31:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:31:26  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:31:26  Unable to do partial parsing because profile has changed
[0m10:31:26  Unable to do partial parsing because a project dependency has been added
[0m10:31:26  Unable to do partial parsing because a project config has changed
[0m10:31:28  1699: static parser successfully parsed customers.sql
[0m10:31:28  1603: static parser failed on orders.sql
[0m10:31:28  1602: parser fallback to jinja rendering on orders.sql
[0m10:31:28  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:31:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:31:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:31:28  1603: static parser failed on staging\v_staging_orders.sql
[0m10:31:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:31:28  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:31:28  Command `dbt run` failed at 12:31:28.471240 after 1.95 seconds
[0m10:31:28  Flushing usage events
[0m10:31:33  Running with dbt=1.5.0
[0m10:31:33  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:31:34  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:31:34  Unable to do partial parsing because profile has changed
[0m10:31:34  Unable to do partial parsing because a project dependency has been added
[0m10:31:34  Unable to do partial parsing because a project config has changed
[0m10:31:35  1699: static parser successfully parsed customers.sql
[0m10:31:35  1603: static parser failed on orders.sql
[0m10:31:35  1602: parser fallback to jinja rendering on orders.sql
[0m10:31:35  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:31:35  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:31:35  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:31:35  1603: static parser failed on staging\v_staging_orders.sql
[0m10:31:35  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:31:35  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:31:35  Command `dbt run` failed at 12:31:35.827775 after 1.90 seconds
[0m10:31:35  Flushing usage events
[0m10:35:40  Running with dbt=1.5.0
[0m10:35:40  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:35:40  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:35:40  Unable to do partial parsing because profile has changed
[0m10:35:40  Unable to do partial parsing because a project dependency has been added
[0m10:35:40  Unable to do partial parsing because a project config has changed
[0m10:35:41  1699: static parser successfully parsed customers.sql
[0m10:35:41  1603: static parser failed on orders.sql
[0m10:35:41  1602: parser fallback to jinja rendering on orders.sql
[0m10:35:41  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:35:41  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:35:41  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:35:42  1603: static parser failed on staging\v_staging_orders.sql
[0m10:35:42  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:35:42  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:35:42  Command `dbt run` failed at 12:35:42.288183 after 1.99 seconds
[0m10:35:42  Flushing usage events
[0m10:40:47  Running with dbt=1.5.0
[0m10:40:47  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:40:47  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:40:47  Unable to do partial parsing because profile has changed
[0m10:40:47  Unable to do partial parsing because a project dependency has been added
[0m10:40:47  Unable to do partial parsing because a project config has changed
[0m10:40:48  1699: static parser successfully parsed customers.sql
[0m10:40:48  1603: static parser failed on orders.sql
[0m10:40:48  1602: parser fallback to jinja rendering on orders.sql
[0m10:40:48  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:40:48  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:40:48  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:40:48  1603: static parser failed on staging\v_staging_orders.sql
[0m10:40:48  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:40:49  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'seeds.raw_orders' which was not found
[0m10:40:49  Command `dbt run` failed at 12:40:49.042570 after 2.03 seconds
[0m10:40:49  Flushing usage events
[0m10:48:08  Running with dbt=1.5.0
[0m10:48:08  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:48:08  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:48:08  Unable to do partial parsing because profile has changed
[0m10:48:08  Unable to do partial parsing because a project dependency has been added
[0m10:48:08  Unable to do partial parsing because a project config has changed
[0m10:48:09  1699: static parser successfully parsed customers.sql
[0m10:48:09  1603: static parser failed on orders.sql
[0m10:48:09  1602: parser fallback to jinja rendering on orders.sql
[0m10:48:09  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:48:09  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:48:09  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:48:09  1603: static parser failed on staging\v_staging_orders.sql
[0m10:48:09  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:48:10  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:48:10  Command `dbt run` failed at 12:48:10.014307 after 1.98 seconds
[0m10:48:10  Flushing usage events
[0m10:48:34  Running with dbt=1.5.0
[0m10:48:34  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:48:34  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:48:34  Unable to do partial parsing because profile has changed
[0m10:48:34  Unable to do partial parsing because a project dependency has been added
[0m10:48:34  Unable to do partial parsing because a project config has changed
[0m10:48:35  1699: static parser successfully parsed customers.sql
[0m10:48:35  1603: static parser failed on orders.sql
[0m10:48:35  1602: parser fallback to jinja rendering on orders.sql
[0m10:48:35  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:48:35  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:48:35  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:48:35  1603: static parser failed on staging\v_staging_orders.sql
[0m10:48:36  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:48:36  Encountered an error:
Compilation Error
  Model 'model.jaffle_shop.v_staging_orders' (models\staging\v_staging_orders.sql) depends on a source named 'raw_stage.stg_orders' which was not found
[0m10:48:36  Command `dbt run` failed at 12:48:36.184498 after 2.02 seconds
[0m10:48:36  Flushing usage events
[0m10:49:57  Running with dbt=1.5.0
[0m10:49:57  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:49:57  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:49:57  Unable to do partial parsing because profile has changed
[0m10:49:57  Unable to do partial parsing because a project dependency has been added
[0m10:49:57  Unable to do partial parsing because a project config has changed
[0m10:49:59  1699: static parser successfully parsed customers.sql
[0m10:49:59  1603: static parser failed on orders.sql
[0m10:49:59  1602: parser fallback to jinja rendering on orders.sql
[0m10:49:59  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:49:59  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:49:59  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:49:59  1603: static parser failed on staging\v_staging_orders.sql
[0m10:49:59  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  invalid syntax for function call expression
    line 30
      -- {{ automate_dv.stage(include_source_columns=true,
[0m10:49:59  Command `dbt run` failed at 12:49:59.074397 after 1.67 seconds
[0m10:49:59  Flushing usage events
[0m10:50:43  Running with dbt=1.5.0
[0m10:50:43  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:50:43  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:50:43  Unable to do partial parsing because profile has changed
[0m10:50:43  Unable to do partial parsing because a project dependency has been added
[0m10:50:43  Unable to do partial parsing because a project config has changed
[0m10:50:44  1699: static parser successfully parsed customers.sql
[0m10:50:44  1603: static parser failed on orders.sql
[0m10:50:44  1602: parser fallback to jinja rendering on orders.sql
[0m10:50:44  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:50:44  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:50:44  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:50:44  1603: static parser failed on staging\v_staging_orders.sql
[0m10:50:44  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:50:44  Command `dbt run` failed at 12:50:44.789926 after 1.67 seconds
[0m10:50:44  Flushing usage events
[0m10:51:27  Running with dbt=1.5.0
[0m10:51:27  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:51:27  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:51:27  Unable to do partial parsing because profile has changed
[0m10:51:27  Unable to do partial parsing because a project dependency has been added
[0m10:51:27  Unable to do partial parsing because a project config has changed
[0m10:51:29  1699: static parser successfully parsed customers.sql
[0m10:51:29  1603: static parser failed on orders.sql
[0m10:51:29  1602: parser fallback to jinja rendering on orders.sql
[0m10:51:29  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:51:29  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:51:29  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:51:29  1603: static parser failed on staging\v_staging_orders.sql
[0m10:51:29  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:51:29  Command `dbt run` failed at 12:51:29.114612 after 1.74 seconds
[0m10:51:29  Flushing usage events
[0m10:52:38  Running with dbt=1.5.0
[0m10:52:38  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:52:39  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:52:39  Unable to do partial parsing because profile has changed
[0m10:52:39  Unable to do partial parsing because a project dependency has been added
[0m10:52:39  Unable to do partial parsing because a project config has changed
[0m10:52:40  1699: static parser successfully parsed customers.sql
[0m10:52:40  1603: static parser failed on orders.sql
[0m10:52:40  1602: parser fallback to jinja rendering on orders.sql
[0m10:52:40  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:52:40  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:52:40  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:52:40  1603: static parser failed on staging\v_staging_orders.sql
[0m10:52:40  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:52:40  Command `dbt run` failed at 12:52:40.693082 after 1.74 seconds
[0m10:52:40  Flushing usage events
[0m10:56:46  Running with dbt=1.5.0
[0m10:56:46  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:56:46  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:56:46  Unable to do partial parsing because profile has changed
[0m10:56:46  Unable to do partial parsing because a project dependency has been added
[0m10:56:46  Unable to do partial parsing because a project config has changed
[0m10:56:47  1699: static parser successfully parsed customers.sql
[0m10:56:47  1603: static parser failed on orders.sql
[0m10:56:47  1602: parser fallback to jinja rendering on orders.sql
[0m10:56:47  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:56:47  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:56:47  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:56:47  1603: static parser failed on staging\v_staging_orders.sql
[0m10:56:47  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:56:47  Command `dbt run` failed at 12:56:47.735800 after 1.74 seconds
[0m10:56:47  Flushing usage events
[0m10:58:58  Running with dbt=1.5.0
[0m10:58:58  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:58:58  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:58:58  Unable to do partial parsing because profile has changed
[0m10:58:58  Unable to do partial parsing because a project dependency has been added
[0m10:58:58  Unable to do partial parsing because a project config has changed
[0m10:58:59  1699: static parser successfully parsed customers.sql
[0m10:58:59  1603: static parser failed on orders.sql
[0m10:58:59  1602: parser fallback to jinja rendering on orders.sql
[0m10:58:59  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:58:59  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:58:59  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:58:59  1603: static parser failed on staging\v_staging_orders.sql
[0m10:58:59  Encountered an error:
Compilation Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  The name argument to ref() must be a string, got <class 'dbt.clients.jinja.create_undefined.<locals>.Undefined'>
  
  > in macro default__stage (macros\staging\stage.sql)
  > called by macro stage (macros\staging\stage.sql)
  > called by model v_staging_orders (models\staging\v_staging_orders.sql)
[0m10:58:59  Command `dbt run` failed at 12:58:59.850860 after 1.71 seconds
[0m10:58:59  Flushing usage events
[0m11:01:26  Running with dbt=1.5.0
[0m11:01:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:01:26  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:01:26  Unable to do partial parsing because profile has changed
[0m11:01:26  Unable to do partial parsing because a project dependency has been added
[0m11:01:26  Unable to do partial parsing because a project config has changed
[0m11:01:28  1699: static parser successfully parsed customers.sql
[0m11:01:28  1603: static parser failed on orders.sql
[0m11:01:28  1602: parser fallback to jinja rendering on orders.sql
[0m11:01:28  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m11:01:28  1699: static parser successfully parsed staging\stg_customers.sql
[0m11:01:28  1699: static parser successfully parsed staging\stg_payments.sql
[0m11:01:28  1603: static parser failed on staging\v_staging_orders.sql
[0m11:01:28  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:01:28  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
  There are 5 unused configuration paths:
  - models.jaffle_shop.sats
  - models.jaffle_shop.hubs
  - models.jaffle_shop.t_links
  - models.jaffle_shop.raw_vault
  - models.jaffle_shop.links
[0m11:01:28  Command `dbt run` failed at 13:01:28.670367 after 1.89 seconds
[0m11:01:28  Flushing usage events
[0m11:03:11  Running with dbt=1.5.0
[0m11:03:11  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:03:11  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:03:11  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:03:11  Partial parsing enabled, no changes found, skipping parsing
[0m11:03:11  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
  There are 5 unused configuration paths:
  - models.jaffle_shop.links
  - models.jaffle_shop.raw_vault
  - models.jaffle_shop.sats
  - models.jaffle_shop.t_links
  - models.jaffle_shop.hubs
[0m11:03:11  Command `dbt run` failed at 13:03:11.412163 after 0.28 seconds
[0m11:03:11  Flushing usage events
[0m11:06:07  Running with dbt=1.5.0
[0m11:06:07  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:06:07  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:06:07  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:06:07  Partial parsing enabled, no changes found, skipping parsing
[0m11:06:07  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
  There are 5 unused configuration paths:
  - models.jaffle_shop.raw_vault
  - models.jaffle_shop.sats
  - models.jaffle_shop.hubs
  - models.jaffle_shop.t_links
  - models.jaffle_shop.links
[0m11:06:07  Command `dbt run` failed at 13:06:07.756602 after 0.25 seconds
[0m11:06:07  Flushing usage events
[0m11:07:07  Running with dbt=1.5.0
[0m11:07:07  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:07:07  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:07:07  Unable to do partial parsing because a project config has changed
[0m11:07:09  1699: static parser successfully parsed customers.sql
[0m11:07:09  1603: static parser failed on orders.sql
[0m11:07:09  1602: parser fallback to jinja rendering on orders.sql
[0m11:07:09  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m11:07:09  1699: static parser successfully parsed staging\stg_customers.sql
[0m11:07:09  1699: static parser successfully parsed staging\stg_payments.sql
[0m11:07:09  1603: static parser failed on staging\v_staging_orders.sql
[0m11:07:09  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:07:09  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:07:09  
[0m11:07:09  Acquiring new postgres connection 'master'
[0m11:07:09  Acquiring new postgres connection 'list_sales'
[0m11:07:09  Using postgres connection "list_sales"
[0m11:07:09  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:09  SQL status: SELECT 4 in 0.0 seconds
[0m11:07:09  On list_sales: Close
[0m11:07:09  Acquiring new postgres connection 'list_sales_public'
[0m11:07:09  Using postgres connection "list_sales_public"
[0m11:07:09  On list_sales_public: BEGIN
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:09  SQL status: BEGIN in 0.0 seconds
[0m11:07:09  Using postgres connection "list_sales_public"
[0m11:07:09  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:07:09  SQL status: SELECT 8 in 0.0 seconds
[0m11:07:09  On list_sales_public: ROLLBACK
[0m11:07:09  On list_sales_public: Close
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: BEGIN
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:09  SQL status: BEGIN in 0.0 seconds
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:07:09  SQL status: SELECT 3 in 0.0 seconds
[0m11:07:09  On master: ROLLBACK
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: BEGIN
[0m11:07:09  SQL status: BEGIN in 0.0 seconds
[0m11:07:09  On master: COMMIT
[0m11:07:09  Using postgres connection "master"
[0m11:07:09  On master: COMMIT
[0m11:07:09  SQL status: COMMIT in 0.0 seconds
[0m11:07:09  On master: Close
[0m11:07:09  Concurrency: 1 threads (target='dev')
[0m11:07:09  
[0m11:07:09  Began running node model.jaffle_shop.stg_customers
[0m11:07:09  1 of 6 START sql view model public.stg_customers ............................... [RUN]
[0m11:07:09  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m11:07:09  Began compiling node model.jaffle_shop.stg_customers
[0m11:07:09  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:07:09  Timing info for model.jaffle_shop.stg_customers (compile): 13:07:09.942543 => 13:07:09.946556
[0m11:07:09  Began executing node model.jaffle_shop.stg_customers
[0m11:07:09  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m11:07:09  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:09  On model.jaffle_shop.stg_customers: BEGIN
[0m11:07:09  Opening a new connection, currently in state init
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m11:07:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.stg_customers: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:07:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "sales"."public"."stg_customers__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.stg_customers (execute): 13:07:09.950568 => 13:07:10.139119
[0m11:07:10  On model.jaffle_shop.stg_customers: Close
[0m11:07:10  1 of 6 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.20s]
[0m11:07:10  Finished running node model.jaffle_shop.stg_customers
[0m11:07:10  Began running node model.jaffle_shop.stg_orders
[0m11:07:10  2 of 6 START sql table model public.stg_orders ................................. [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:07:10  Began compiling node model.jaffle_shop.stg_orders
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:07:10  Timing info for model.jaffle_shop.stg_orders (compile): 13:07:10.153837 => 13:07:10.159834
[0m11:07:10  Began executing node model.jaffle_shop.stg_orders
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "sales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m11:07:10  SQL status: SELECT 99 in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.stg_orders: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:07:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop view if exists "sales"."public"."stg_orders__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.stg_orders (execute): 13:07:10.163840 => 13:07:10.303043
[0m11:07:10  On model.jaffle_shop.stg_orders: Close
[0m11:07:10  2 of 6 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.16s]
[0m11:07:10  Finished running node model.jaffle_shop.stg_orders
[0m11:07:10  Began running node model.jaffle_shop.stg_payments
[0m11:07:10  3 of 6 START sql view model public.stg_payments ................................ [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:07:10  Began compiling node model.jaffle_shop.stg_payments
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:07:10  Timing info for model.jaffle_shop.stg_payments (compile): 13:07:10.316493 => 13:07:10.324489
[0m11:07:10  Began executing node model.jaffle_shop.stg_payments
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m11:07:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.stg_payments: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:07:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "sales"."public"."stg_payments__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.stg_payments (execute): 13:07:10.327498 => 13:07:10.446075
[0m11:07:10  On model.jaffle_shop.stg_payments: Close
[0m11:07:10  3 of 6 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.14s]
[0m11:07:10  Finished running node model.jaffle_shop.stg_payments
[0m11:07:10  Began running node model.jaffle_shop.v_staging_orders
[0m11:07:10  4 of 6 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.v_staging_orders)
[0m11:07:10  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:07:10  SQL status: SELECT 4 in 0.0 seconds
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:07:10  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:07:10.461138 => 13:07:10.573092
[0m11:07:10  Began executing node model.jaffle_shop.v_staging_orders
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM source_data
)

SELECT * FROM columns_to_select
  );
[0m11:07:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:07:10  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:07:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:07:10.575091 => 13:07:10.614632
[0m11:07:10  On model.jaffle_shop.v_staging_orders: Close
[0m11:07:10  4 of 6 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.16s]
[0m11:07:10  Finished running node model.jaffle_shop.v_staging_orders
[0m11:07:10  Began running node model.jaffle_shop.customers
[0m11:07:10  5 of 6 START sql table model public.customers .................................. [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m11:07:10  Began compiling node model.jaffle_shop.customers
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:07:10  Timing info for model.jaffle_shop.customers (compile): 13:07:10.626811 => 13:07:10.634819
[0m11:07:10  Began executing node model.jaffle_shop.customers
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.customers"
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "sales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select * from "sales"."public"."stg_customers"

),

orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),



customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m11:07:10  SQL status: SELECT 100 in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers" rename to "customers__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers__dbt_tmp" rename to "customers"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.customers: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:07:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop table if exists "sales"."public"."customers__dbt_backup" cascade
[0m11:07:10  SQL status: DROP TABLE in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.customers (execute): 13:07:10.637808 => 13:07:10.754813
[0m11:07:10  On model.jaffle_shop.customers: Close
[0m11:07:10  5 of 6 OK created sql table model public.customers ............................. [[32mSELECT 100[0m in 0.13s]
[0m11:07:10  Finished running node model.jaffle_shop.customers
[0m11:07:10  Began running node model.jaffle_shop.orders
[0m11:07:10  6 of 6 START sql table model public.orders ..................................... [RUN]
[0m11:07:10  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m11:07:10  Began compiling node model.jaffle_shop.orders
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

    
    select distinct
    payment_method
    from "sales"."public"."raw_payments"
    order by 1

  
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: SELECT 4 in 0.0 seconds
[0m11:07:10  Writing injected SQL for node "model.jaffle_shop.orders"
[0m11:07:10  Timing info for model.jaffle_shop.orders (compile): 13:07:10.766434 => 13:07:10.854751
[0m11:07:10  Began executing node model.jaffle_shop.orders
[0m11:07:10  Writing runtime sql for node "model.jaffle_shop.orders"
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: BEGIN
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "sales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    --Set the payment methods in a variable to use later in a for loop


with orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        --use the variable specified at the top of this model
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        
        --remove trailling , that may cause double comma errors--end for loop
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.bank_transfer_amount,

        order_payments.coupon_amount,

        order_payments.credit_card_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m11:07:10  SQL status: SELECT 99 in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders" rename to "orders__dbt_backup"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders__dbt_tmp" rename to "orders"
[0m11:07:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:07:10  On model.jaffle_shop.orders: COMMIT
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:07:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "sales"."public"."orders__dbt_backup" cascade
[0m11:07:10  SQL status: DROP TABLE in 0.0 seconds
[0m11:07:10  Timing info for model.jaffle_shop.orders (execute): 13:07:10.856842 => 13:07:10.919859
[0m11:07:10  On model.jaffle_shop.orders: Close
[0m11:07:10  6 of 6 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.16s]
[0m11:07:10  Finished running node model.jaffle_shop.orders
[0m11:07:10  Using postgres connection "master"
[0m11:07:10  On master: BEGIN
[0m11:07:10  Opening a new connection, currently in state closed
[0m11:07:10  SQL status: BEGIN in 0.0 seconds
[0m11:07:10  On master: COMMIT
[0m11:07:10  Using postgres connection "master"
[0m11:07:10  On master: COMMIT
[0m11:07:10  SQL status: COMMIT in 0.0 seconds
[0m11:07:10  On master: Close
[0m11:07:10  Connection 'master' was properly closed.
[0m11:07:10  Connection 'list_sales' was properly closed.
[0m11:07:10  Connection 'list_sales_public' was properly closed.
[0m11:07:10  Connection 'model.jaffle_shop.orders' was properly closed.
[0m11:07:10  
[0m11:07:10  Finished running 3 view models, 3 table models in 0 hours 0 minutes and 1.31 seconds (1.31s).
[0m11:07:10  Command end result
[0m11:07:10  
[0m11:07:11  [32mCompleted successfully[0m
[0m11:07:11  
[0m11:07:11  Done. PASS=6 WARN=0 ERROR=0 SKIP=0 TOTAL=6
[0m11:07:11  Command `dbt run` succeeded at 13:07:11.004780 after 3.30 seconds
[0m11:07:11  Flushing usage events
[0m11:10:31  Running with dbt=1.5.0
[0m11:10:31  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:10:31  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:10:31  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:10:31  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:10:31  1603: static parser failed on staging\v_staging_orders.sql
[0m11:10:31  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:10:31  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:10:31  
[0m11:10:31  Acquiring new postgres connection 'master'
[0m11:10:31  Acquiring new postgres connection 'list_sales'
[0m11:10:31  Using postgres connection "list_sales"
[0m11:10:31  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:10:31  Opening a new connection, currently in state init
[0m11:10:31  SQL status: SELECT 4 in 0.0 seconds
[0m11:10:31  On list_sales: Close
[0m11:10:31  Acquiring new postgres connection 'list_sales_public'
[0m11:10:31  Using postgres connection "list_sales_public"
[0m11:10:31  On list_sales_public: BEGIN
[0m11:10:31  Opening a new connection, currently in state init
[0m11:10:31  SQL status: BEGIN in 0.0 seconds
[0m11:10:31  Using postgres connection "list_sales_public"
[0m11:10:31  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:10:31  SQL status: SELECT 9 in 0.0 seconds
[0m11:10:31  On list_sales_public: ROLLBACK
[0m11:10:31  On list_sales_public: Close
[0m11:10:31  Using postgres connection "master"
[0m11:10:31  On master: BEGIN
[0m11:10:31  Opening a new connection, currently in state init
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:10:32  SQL status: SELECT 3 in 0.0 seconds
[0m11:10:32  On master: ROLLBACK
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: BEGIN
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  On master: COMMIT
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: COMMIT
[0m11:10:32  SQL status: COMMIT in 0.0 seconds
[0m11:10:32  On master: Close
[0m11:10:32  Concurrency: 1 threads (target='dev')
[0m11:10:32  
[0m11:10:32  Began running node model.jaffle_shop.v_staging_orders
[0m11:10:32  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:10:32  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:10:32  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:10:32  Opening a new connection, currently in state init
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:10:32  SQL status: SELECT 4 in 0.0 seconds
[0m11:10:32  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:10:32  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:10:32.074056 => 13:10:32.162994
[0m11:10:32  Began executing node model.jaffle_shop.v_staging_orders
[0m11:10:32  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM source_data
)

SELECT * FROM columns_to_select
  );
[0m11:10:32  SQL status: CREATE VIEW in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders" rename to "v_staging_orders__dbt_backup"
[0m11:10:32  SQL status: ALTER TABLE in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:10:32  SQL status: ALTER TABLE in 0.0 seconds
[0m11:10:32  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:10:32  SQL status: COMMIT in 0.0 seconds
[0m11:10:32  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:10:32  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:10:32  SQL status: DROP VIEW in 0.0 seconds
[0m11:10:32  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:10:32.165003 => 13:10:32.272678
[0m11:10:32  On model.jaffle_shop.v_staging_orders: Close
[0m11:10:32  1 of 1 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.21s]
[0m11:10:32  Finished running node model.jaffle_shop.v_staging_orders
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: BEGIN
[0m11:10:32  Opening a new connection, currently in state closed
[0m11:10:32  SQL status: BEGIN in 0.0 seconds
[0m11:10:32  On master: COMMIT
[0m11:10:32  Using postgres connection "master"
[0m11:10:32  On master: COMMIT
[0m11:10:32  SQL status: COMMIT in 0.0 seconds
[0m11:10:32  On master: Close
[0m11:10:32  Connection 'master' was properly closed.
[0m11:10:32  Connection 'list_sales' was properly closed.
[0m11:10:32  Connection 'list_sales_public' was properly closed.
[0m11:10:32  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:10:32  
[0m11:10:32  Finished running 1 view model in 0 hours 0 minutes and 0.72 seconds (0.72s).
[0m11:10:32  Command end result
[0m11:10:32  
[0m11:10:32  [32mCompleted successfully[0m
[0m11:10:32  
[0m11:10:32  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m11:10:32  Command `dbt run` succeeded at 13:10:32.514548 after 1.20 seconds
[0m11:10:32  Flushing usage events
[0m11:12:18  Running with dbt=1.5.0
[0m11:12:18  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:12:18  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:12:18  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:12:18  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:12:18  1603: static parser failed on staging\v_staging_orders.sql
[0m11:12:18  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:12:18  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:12:18  
[0m11:12:18  Acquiring new postgres connection 'master'
[0m11:12:18  Acquiring new postgres connection 'list_sales'
[0m11:12:18  Using postgres connection "list_sales"
[0m11:12:18  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: SELECT 4 in 0.0 seconds
[0m11:12:18  On list_sales: Close
[0m11:12:18  Acquiring new postgres connection 'list_sales_public'
[0m11:12:18  Using postgres connection "list_sales_public"
[0m11:12:18  On list_sales_public: BEGIN
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  Using postgres connection "list_sales_public"
[0m11:12:18  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:12:18  SQL status: SELECT 9 in 0.0 seconds
[0m11:12:18  On list_sales_public: ROLLBACK
[0m11:12:18  On list_sales_public: Close
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: BEGIN
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:12:18  SQL status: SELECT 3 in 0.0 seconds
[0m11:12:18  On master: ROLLBACK
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: BEGIN
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  On master: COMMIT
[0m11:12:18  Using postgres connection "master"
[0m11:12:18  On master: COMMIT
[0m11:12:18  SQL status: COMMIT in 0.0 seconds
[0m11:12:18  On master: Close
[0m11:12:18  Concurrency: 1 threads (target='dev')
[0m11:12:18  
[0m11:12:18  Began running node model.jaffle_shop.v_staging_orders
[0m11:12:18  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:12:18  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:12:18  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:12:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:18  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:12:18  Opening a new connection, currently in state init
[0m11:12:18  SQL status: BEGIN in 0.0 seconds
[0m11:12:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:18  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:12:19  SQL status: SELECT 4 in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:12:19  SQL status: SELECT 4 in 0.0 seconds
[0m11:12:19  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:12:19  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:12:18.936135 => 13:12:19.037324
[0m11:12:19  Began executing node model.jaffle_shop.v_staging_orders
[0m11:12:19  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m11:12:19  SQL status: CREATE VIEW in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders" rename to "v_staging_orders__dbt_backup"
[0m11:12:19  SQL status: ALTER TABLE in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:12:19  SQL status: ALTER TABLE in 0.0 seconds
[0m11:12:19  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:12:19  SQL status: COMMIT in 0.0 seconds
[0m11:12:19  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:12:19  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:12:19  SQL status: DROP VIEW in 0.0 seconds
[0m11:12:19  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:12:19.039324 => 13:12:19.197520
[0m11:12:19  On model.jaffle_shop.v_staging_orders: Close
[0m11:12:19  1 of 1 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.27s]
[0m11:12:19  Finished running node model.jaffle_shop.v_staging_orders
[0m11:12:19  Using postgres connection "master"
[0m11:12:19  On master: BEGIN
[0m11:12:19  Opening a new connection, currently in state closed
[0m11:12:19  SQL status: BEGIN in 0.0 seconds
[0m11:12:19  On master: COMMIT
[0m11:12:19  Using postgres connection "master"
[0m11:12:19  On master: COMMIT
[0m11:12:19  SQL status: COMMIT in 0.0 seconds
[0m11:12:19  On master: Close
[0m11:12:19  Connection 'master' was properly closed.
[0m11:12:19  Connection 'list_sales' was properly closed.
[0m11:12:19  Connection 'list_sales_public' was properly closed.
[0m11:12:19  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:12:19  
[0m11:12:19  Finished running 1 view model in 0 hours 0 minutes and 0.68 seconds (0.68s).
[0m11:12:19  Command end result
[0m11:12:19  
[0m11:12:19  [32mCompleted successfully[0m
[0m11:12:19  
[0m11:12:19  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m11:12:19  Command `dbt run` succeeded at 13:12:19.282771 after 1.09 seconds
[0m11:12:19  Flushing usage events
[0m11:15:47  Running with dbt=1.5.0
[0m11:15:47  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:15:48  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:15:48  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:15:48  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:15:48  1603: static parser failed on staging\v_staging_orders.sql
[0m11:15:48  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:15:48  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:15:48  
[0m11:15:48  Acquiring new postgres connection 'master'
[0m11:15:48  Acquiring new postgres connection 'list_sales'
[0m11:15:48  Using postgres connection "list_sales"
[0m11:15:48  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: SELECT 4 in 0.0 seconds
[0m11:15:48  On list_sales: Close
[0m11:15:48  Acquiring new postgres connection 'list_sales_public'
[0m11:15:48  Using postgres connection "list_sales_public"
[0m11:15:48  On list_sales_public: BEGIN
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  Using postgres connection "list_sales_public"
[0m11:15:48  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:15:48  SQL status: SELECT 9 in 0.0 seconds
[0m11:15:48  On list_sales_public: ROLLBACK
[0m11:15:48  On list_sales_public: Close
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: BEGIN
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:15:48  SQL status: SELECT 3 in 0.0 seconds
[0m11:15:48  On master: ROLLBACK
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: BEGIN
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  On master: COMMIT
[0m11:15:48  Using postgres connection "master"
[0m11:15:48  On master: COMMIT
[0m11:15:48  SQL status: COMMIT in 0.0 seconds
[0m11:15:48  On master: Close
[0m11:15:48  Concurrency: 1 threads (target='dev')
[0m11:15:48  
[0m11:15:48  Began running node model.jaffle_shop.v_staging_orders
[0m11:15:48  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:15:48  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:15:48  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:15:48  Opening a new connection, currently in state init
[0m11:15:48  SQL status: BEGIN in 0.0 seconds
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:15:48  SQL status: SELECT 4 in 0.0 seconds
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:15:48  SQL status: SELECT 4 in 0.0 seconds
[0m11:15:48  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:15:48  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:15:48.656780 => 13:15:48.755555
[0m11:15:48  Began executing node model.jaffle_shop.v_staging_orders
[0m11:15:48  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:15:48  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:15:48  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 12:43:00 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m11:15:48  Postgres adapter: Postgres error: syntax error at or near "12"
LINE 36:     28/05/2023 12:43:00 AS LOAD_DATETIME,
                        ^

[0m11:15:48  On model.jaffle_shop.v_staging_orders: ROLLBACK
[0m11:15:48  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:15:48.757673 => 13:15:48.805947
[0m11:15:48  On model.jaffle_shop.v_staging_orders: Close
[0m11:15:48  Database Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  syntax error at or near "12"
  LINE 36:     28/05/2023 12:43:00 AS LOAD_DATETIME,
                          ^
  compiled Code at target\run\jaffle_shop\models\staging\v_staging_orders.sql
[0m11:15:48  1 of 1 ERROR creating sql view model public.v_staging_orders ................... [[31mERROR[0m in 0.22s]
[0m11:15:48  Finished running node model.jaffle_shop.v_staging_orders
[0m11:15:48  CANCEL query list_sales ........................................................ [[31mCANCEL[0m]
[0m11:15:48  CANCEL query list_sales_public ................................................. [[31mCANCEL[0m]
[0m11:15:48  CANCEL query model.jaffle_shop.v_staging_orders ................................ [[31mCANCEL[0m]
[0m11:15:48  
[0m11:15:48  [33mDatabase Error in model v_staging_orders (models\staging\v_staging_orders.sql)[0m
[0m11:15:48    syntax error at or near "12"
[0m11:15:48    LINE 36:     28/05/2023 12:43:00 AS LOAD_DATETIME,
[0m11:15:48                            ^
[0m11:15:48    compiled Code at target\run\jaffle_shop\models\staging\v_staging_orders.sql
[0m11:15:48  Connection 'master' was properly closed.
[0m11:15:48  Connection 'list_sales' was properly closed.
[0m11:15:48  Connection 'list_sales_public' was properly closed.
[0m11:15:48  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:15:48  
[0m11:15:48  Finished running 1 view model in 0 hours 0 minutes and 0.56 seconds (0.56s).
[0m11:15:48  Encountered an error:
FailFast Error in model v_staging_orders (models\staging\v_staging_orders.sql)
  Failing early due to test failure or runtime error
[0m11:15:48  Command `dbt run` failed at 13:15:48.892846 after 0.98 seconds
[0m11:15:48  Flushing usage events
[0m11:16:29  Running with dbt=1.5.0
[0m11:16:29  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:16:29  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:16:29  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:16:29  Partial parsing: updated file: jaffle_shop://models\staging\v_staging_orders.sql
[0m11:16:29  1603: static parser failed on staging\v_staging_orders.sql
[0m11:16:29  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m11:16:29  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:16:29  
[0m11:16:29  Acquiring new postgres connection 'master'
[0m11:16:29  Acquiring new postgres connection 'list_sales'
[0m11:16:29  Using postgres connection "list_sales"
[0m11:16:29  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: SELECT 4 in 0.0 seconds
[0m11:16:29  On list_sales: Close
[0m11:16:29  Acquiring new postgres connection 'list_sales_public'
[0m11:16:29  Using postgres connection "list_sales_public"
[0m11:16:29  On list_sales_public: BEGIN
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  Using postgres connection "list_sales_public"
[0m11:16:29  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:16:29  SQL status: SELECT 9 in 0.0 seconds
[0m11:16:29  On list_sales_public: ROLLBACK
[0m11:16:29  On list_sales_public: Close
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: BEGIN
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:16:29  SQL status: SELECT 3 in 0.0 seconds
[0m11:16:29  On master: ROLLBACK
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: BEGIN
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  On master: COMMIT
[0m11:16:29  Using postgres connection "master"
[0m11:16:29  On master: COMMIT
[0m11:16:29  SQL status: COMMIT in 0.0 seconds
[0m11:16:29  On master: Close
[0m11:16:29  Concurrency: 1 threads (target='dev')
[0m11:16:29  
[0m11:16:29  Began running node model.jaffle_shop.v_staging_orders
[0m11:16:29  1 of 1 START sql view model public.v_staging_orders ............................ [RUN]
[0m11:16:29  Acquiring new postgres connection 'model.jaffle_shop.v_staging_orders'
[0m11:16:29  Began compiling node model.jaffle_shop.v_staging_orders
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:29  On model.jaffle_shop.v_staging_orders: BEGIN
[0m11:16:29  Opening a new connection, currently in state init
[0m11:16:29  SQL status: BEGIN in 0.0 seconds
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:29  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:16:29  SQL status: SELECT 4 in 0.0 seconds
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:29  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "sales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m11:16:29  SQL status: SELECT 4 in 0.0 seconds
[0m11:16:29  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m11:16:29  Timing info for model.jaffle_shop.v_staging_orders (compile): 13:16:29.864475 => 13:16:29.959593
[0m11:16:29  Began executing node model.jaffle_shop.v_staging_orders
[0m11:16:29  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m11:16:29  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "sales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "sales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m11:16:30  SQL status: CREATE VIEW in 0.0 seconds
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders" rename to "v_staging_orders__dbt_backup"
[0m11:16:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "sales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m11:16:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:16:30  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: COMMIT
[0m11:16:30  SQL status: COMMIT in 0.0 seconds
[0m11:16:30  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m11:16:30  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "sales"."public"."v_staging_orders__dbt_backup" cascade
[0m11:16:30  SQL status: DROP VIEW in 0.0 seconds
[0m11:16:30  Timing info for model.jaffle_shop.v_staging_orders (execute): 13:16:29.963600 => 13:16:30.141478
[0m11:16:30  On model.jaffle_shop.v_staging_orders: Close
[0m11:16:30  1 of 1 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.28s]
[0m11:16:30  Finished running node model.jaffle_shop.v_staging_orders
[0m11:16:30  Using postgres connection "master"
[0m11:16:30  On master: BEGIN
[0m11:16:30  Opening a new connection, currently in state closed
[0m11:16:30  SQL status: BEGIN in 0.0 seconds
[0m11:16:30  On master: COMMIT
[0m11:16:30  Using postgres connection "master"
[0m11:16:30  On master: COMMIT
[0m11:16:30  SQL status: COMMIT in 0.0 seconds
[0m11:16:30  On master: Close
[0m11:16:30  Connection 'master' was properly closed.
[0m11:16:30  Connection 'list_sales' was properly closed.
[0m11:16:30  Connection 'list_sales_public' was properly closed.
[0m11:16:30  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m11:16:30  
[0m11:16:30  Finished running 1 view model in 0 hours 0 minutes and 0.82 seconds (0.82s).
[0m11:16:30  Command end result
[0m11:16:30  
[0m11:16:30  [32mCompleted successfully[0m
[0m11:16:30  
[0m11:16:30  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m11:16:30  Command `dbt run` succeeded at 13:16:30.335815 after 1.23 seconds
[0m11:16:30  Flushing usage events
[0m10:44:57  Running with dbt=1.5.0
[0m10:44:57  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:44:57  dbt version: 1.5.0
[0m10:44:57  python version: 3.10.11
[0m10:44:57  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m10:44:57  os info: Windows-10-10.0.22621-SP0
[0m10:44:57  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m10:44:57  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m10:44:57  Configuration:
[0m10:44:57    profiles.yml file [[32mOK found and valid[0m]
[0m10:44:57    dbt_project.yml file [[32mOK found and valid[0m]
[0m10:44:57  Required dependencies:
[0m10:44:57  Executing "git --help"
[0m10:44:57  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m10:44:57  STDERR: "b''"
[0m10:44:57   - git [[32mOK found[0m]

[0m10:44:57  Connection:
[0m10:44:57    host: localhost
[0m10:44:57    port: 5432
[0m10:44:57    user: postgres
[0m10:44:57    database: sales
[0m10:44:57    schema: public
[0m10:44:57    search_path: None
[0m10:44:57    keepalives_idle: 0
[0m10:44:57    sslmode: None
[0m10:44:57  Acquiring new postgres connection 'debug'
[0m10:44:57  Using postgres connection "debug"
[0m10:44:57  On debug: select 1 as id
[0m10:44:57  Opening a new connection, currently in state init
[0m10:44:57  Postgres adapter: Got a retryable error when attempting to open a postgres connection.
1 attempts remaining. Retrying in 0 seconds.
Error:
connection to server at "localhost" (::1), port 5432 failed: FATAL:  database "sales" does not exist

[0m10:44:57  Postgres adapter: Error running SQL: select 1 as id
[0m10:44:57  Postgres adapter: Rolling back transaction.
[0m10:44:57  On debug: No close available on handle
[0m10:44:57    Connection test: [[31mERROR[0m]

[0m10:44:57  [31m1 check failed:[0m
[0m10:44:57  dbt was unable to connect to the specified database.
The database returned the following error:

  >Database Error
  connection to server at "localhost" (::1), port 5432 failed: FATAL:  database "sales" does not exist
  

Check your database credentials and try again. For more information, visit:
https://docs.getdbt.com/docs/configure-your-profile


[0m10:44:57  Command `dbt debug` failed at 12:44:57.498664 after 0.42 seconds
[0m10:44:57  Connection 'debug' was properly closed.
[0m10:44:57  Flushing usage events
[0m10:56:59  Running with dbt=1.5.0
[0m10:56:59  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:56:59  dbt version: 1.5.0
[0m10:56:59  python version: 3.10.11
[0m10:56:59  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m10:56:59  os info: Windows-10-10.0.22621-SP0
[0m10:56:59  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m10:56:59  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m10:56:59  Configuration:
[0m10:56:59    profiles.yml file [[32mOK found and valid[0m]
[0m10:56:59    dbt_project.yml file [[32mOK found and valid[0m]
[0m10:56:59  Required dependencies:
[0m10:56:59  Executing "git --help"
[0m10:56:59  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m10:56:59  STDERR: "b''"
[0m10:56:59   - git [[32mOK found[0m]

[0m10:56:59  Connection:
[0m10:56:59    host: localhost
[0m10:56:59    port: 5432
[0m10:56:59    user: postgres
[0m10:56:59    database: dbtsales
[0m10:56:59    schema: public
[0m10:56:59    search_path: None
[0m10:56:59    keepalives_idle: 0
[0m10:56:59    sslmode: None
[0m10:56:59  Acquiring new postgres connection 'debug'
[0m10:56:59  Using postgres connection "debug"
[0m10:56:59  On debug: select 1 as id
[0m10:56:59  Opening a new connection, currently in state init
[0m10:56:59  SQL status: SELECT 1 in 0.0 seconds
[0m10:56:59  On debug: Close
[0m10:56:59    Connection test: [[32mOK connection ok[0m]

[0m10:56:59  [32mAll checks passed![0m
[0m10:56:59  Command `dbt debug` succeeded at 12:56:59.868380 after 0.41 seconds
[0m10:56:59  Connection 'debug' was properly closed.
[0m10:56:59  Flushing usage events
[0m10:58:12  Running with dbt=1.5.0
[0m10:58:12  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:58:12  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:58:12  Unable to do partial parsing because profile has changed
[0m10:58:15  1699: static parser successfully parsed customers.sql
[0m10:58:15  1603: static parser failed on orders.sql
[0m10:58:15  1602: parser fallback to jinja rendering on orders.sql
[0m10:58:15  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m10:58:15  1699: static parser successfully parsed staging\stg_customers.sql
[0m10:58:15  1699: static parser successfully parsed staging\stg_payments.sql
[0m10:58:15  1603: static parser failed on staging\v_staging_orders.sql
[0m10:58:15  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m10:58:15  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m10:58:15  
[0m10:58:15  Acquiring new postgres connection 'master'
[0m10:58:15  Acquiring new postgres connection 'list_dbtsales'
[0m10:58:15  Using postgres connection "list_dbtsales"
[0m10:58:15  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m10:58:15  Opening a new connection, currently in state init
[0m10:58:16  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:16  On list_dbtsales: Close
[0m10:58:16  Acquiring new postgres connection 'list_dbtsales_public'
[0m10:58:16  Using postgres connection "list_dbtsales_public"
[0m10:58:16  On list_dbtsales_public: BEGIN
[0m10:58:16  Opening a new connection, currently in state init
[0m10:58:16  SQL status: BEGIN in 0.0 seconds
[0m10:58:16  Using postgres connection "list_dbtsales_public"
[0m10:58:16  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m10:58:16  SQL status: SELECT 0 in 0.0 seconds
[0m10:58:16  On list_dbtsales_public: ROLLBACK
[0m10:58:16  On list_dbtsales_public: Close
[0m10:58:16  Using postgres connection "master"
[0m10:58:16  On master: BEGIN
[0m10:58:16  Opening a new connection, currently in state init
[0m10:58:16  SQL status: BEGIN in 0.0 seconds
[0m10:58:16  Using postgres connection "master"
[0m10:58:16  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m10:58:16  SQL status: SELECT 0 in 0.0 seconds
[0m10:58:16  On master: ROLLBACK
[0m10:58:16  Using postgres connection "master"
[0m10:58:16  On master: BEGIN
[0m10:58:16  SQL status: BEGIN in 0.0 seconds
[0m10:58:16  On master: COMMIT
[0m10:58:16  Using postgres connection "master"
[0m10:58:16  On master: COMMIT
[0m10:58:16  SQL status: COMMIT in 0.0 seconds
[0m10:58:16  On master: Close
[0m10:58:16  Concurrency: 1 threads (target='dev')
[0m10:58:16  
[0m10:58:16  Began running node seed.jaffle_shop.raw_customers
[0m10:58:16  1 of 3 START seed file public.raw_customers .................................... [RUN]
[0m10:58:16  Acquiring new postgres connection 'seed.jaffle_shop.raw_customers'
[0m10:58:16  Began compiling node seed.jaffle_shop.raw_customers
[0m10:58:16  Timing info for seed.jaffle_shop.raw_customers (compile): 12:58:16.208401 => 12:58:16.208401
[0m10:58:16  Began executing node seed.jaffle_shop.raw_customers
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m10:58:16  On seed.jaffle_shop.raw_customers: BEGIN
[0m10:58:16  Opening a new connection, currently in state init
[0m10:58:16  SQL status: BEGIN in 0.0 seconds
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m10:58:16  On seed.jaffle_shop.raw_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "seed.jaffle_shop.raw_customers"} */

    create table "dbtsales"."public"."raw_customers" ("id" integer,"first_name" text,"last_name" text)
  
[0m10:58:16  SQL status: CREATE TABLE in 0.0 seconds
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m10:58:16  On seed.jaffle_shop.raw_customers: 
          insert into "dbtsales"."public"."raw_customers" ("id", "first_name", "last_name") values
          (%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s...
[0m10:58:16  SQL status: INSERT 0 100 in 0.0 seconds
[0m10:58:16  Writing runtime SQL for node "seed.jaffle_shop.raw_customers"
[0m10:58:16  On seed.jaffle_shop.raw_customers: COMMIT
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m10:58:16  On seed.jaffle_shop.raw_customers: COMMIT
[0m10:58:16  SQL status: COMMIT in 0.0 seconds
[0m10:58:16  Timing info for seed.jaffle_shop.raw_customers (execute): 12:58:16.213548 => 12:58:16.440450
[0m10:58:16  On seed.jaffle_shop.raw_customers: Close
[0m10:58:16  1 of 3 OK loaded seed file public.raw_customers ................................ [[32mINSERT 100[0m in 0.24s]
[0m10:58:16  Finished running node seed.jaffle_shop.raw_customers
[0m10:58:16  Began running node seed.jaffle_shop.raw_orders
[0m10:58:16  2 of 3 START seed file public.raw_orders ....................................... [RUN]
[0m10:58:16  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_customers, now seed.jaffle_shop.raw_orders)
[0m10:58:16  Began compiling node seed.jaffle_shop.raw_orders
[0m10:58:16  Timing info for seed.jaffle_shop.raw_orders (compile): 12:58:16.454872 => 12:58:16.454872
[0m10:58:16  Began executing node seed.jaffle_shop.raw_orders
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m10:58:16  On seed.jaffle_shop.raw_orders: BEGIN
[0m10:58:16  Opening a new connection, currently in state closed
[0m10:58:16  SQL status: BEGIN in 0.0 seconds
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m10:58:16  On seed.jaffle_shop.raw_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "seed.jaffle_shop.raw_orders"} */

    create table "dbtsales"."public"."raw_orders" ("id" integer,"user_id" integer,"order_date" date,"status" text)
  
[0m10:58:16  SQL status: CREATE TABLE in 0.0 seconds
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m10:58:16  On seed.jaffle_shop.raw_orders: 
          insert into "dbtsales"."public"."raw_orders" ("id", "user_id", "order_date", "status") values
          (%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%...
[0m10:58:16  SQL status: INSERT 0 99 in 0.0 seconds
[0m10:58:16  Writing runtime SQL for node "seed.jaffle_shop.raw_orders"
[0m10:58:16  On seed.jaffle_shop.raw_orders: COMMIT
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m10:58:16  On seed.jaffle_shop.raw_orders: COMMIT
[0m10:58:16  SQL status: COMMIT in 0.0 seconds
[0m10:58:16  Timing info for seed.jaffle_shop.raw_orders (execute): 12:58:16.457398 => 12:58:16.610171
[0m10:58:16  On seed.jaffle_shop.raw_orders: Close
[0m10:58:16  2 of 3 OK loaded seed file public.raw_orders ................................... [[32mINSERT 99[0m in 0.16s]
[0m10:58:16  Finished running node seed.jaffle_shop.raw_orders
[0m10:58:16  Began running node seed.jaffle_shop.raw_payments
[0m10:58:16  3 of 3 START seed file public.raw_payments ..................................... [RUN]
[0m10:58:16  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_orders, now seed.jaffle_shop.raw_payments)
[0m10:58:16  Began compiling node seed.jaffle_shop.raw_payments
[0m10:58:16  Timing info for seed.jaffle_shop.raw_payments (compile): 12:58:16.625495 => 12:58:16.625495
[0m10:58:16  Began executing node seed.jaffle_shop.raw_payments
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m10:58:16  On seed.jaffle_shop.raw_payments: BEGIN
[0m10:58:16  Opening a new connection, currently in state closed
[0m10:58:16  SQL status: BEGIN in 0.0 seconds
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m10:58:16  On seed.jaffle_shop.raw_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "seed.jaffle_shop.raw_payments"} */

    create table "dbtsales"."public"."raw_payments" ("id" integer,"order_id" integer,"payment_method" text,"amount" integer)
  
[0m10:58:16  SQL status: CREATE TABLE in 0.0 seconds
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m10:58:16  On seed.jaffle_shop.raw_payments: 
          insert into "dbtsales"."public"."raw_payments" ("id", "order_id", "payment_method", "amount") values
          (%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s...
[0m10:58:16  SQL status: INSERT 0 113 in 0.0 seconds
[0m10:58:16  Writing runtime SQL for node "seed.jaffle_shop.raw_payments"
[0m10:58:16  On seed.jaffle_shop.raw_payments: COMMIT
[0m10:58:16  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m10:58:16  On seed.jaffle_shop.raw_payments: COMMIT
[0m10:58:16  SQL status: COMMIT in 0.0 seconds
[0m10:58:16  Timing info for seed.jaffle_shop.raw_payments (execute): 12:58:16.628491 => 12:58:16.810681
[0m10:58:16  On seed.jaffle_shop.raw_payments: Close
[0m10:58:16  3 of 3 OK loaded seed file public.raw_payments ................................. [[32mINSERT 113[0m in 0.19s]
[0m10:58:16  Finished running node seed.jaffle_shop.raw_payments
[0m10:58:16  Using postgres connection "master"
[0m10:58:16  On master: BEGIN
[0m10:58:16  Opening a new connection, currently in state closed
[0m10:58:16  SQL status: BEGIN in 0.0 seconds
[0m10:58:16  On master: COMMIT
[0m10:58:16  Using postgres connection "master"
[0m10:58:16  On master: COMMIT
[0m10:58:16  SQL status: COMMIT in 0.0 seconds
[0m10:58:16  On master: Close
[0m10:58:16  Connection 'master' was properly closed.
[0m10:58:16  Connection 'list_dbtsales' was properly closed.
[0m10:58:16  Connection 'list_dbtsales_public' was properly closed.
[0m10:58:16  Connection 'seed.jaffle_shop.raw_payments' was properly closed.
[0m10:58:16  
[0m10:58:16  Finished running 3 seeds in 0 hours 0 minutes and 0.89 seconds (0.89s).
[0m10:58:16  Command end result
[0m10:58:16  
[0m10:58:16  [32mCompleted successfully[0m
[0m10:58:16  
[0m10:58:16  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m10:58:16  Command `dbt seed` succeeded at 12:58:16.896663 after 4.79 seconds
[0m10:58:16  Flushing usage events
[0m10:58:22  Running with dbt=1.5.0
[0m10:58:22  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:58:22  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:58:22  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m10:58:22  Partial parsing enabled, no changes found, skipping parsing
[0m10:58:22  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m10:58:22  
[0m10:58:22  Acquiring new postgres connection 'master'
[0m10:58:22  Acquiring new postgres connection 'list_dbtsales'
[0m10:58:23  Using postgres connection "list_dbtsales"
[0m10:58:23  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m10:58:23  Opening a new connection, currently in state init
[0m10:58:23  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:23  On list_dbtsales: Close
[0m10:58:23  Acquiring new postgres connection 'list_dbtsales_public'
[0m10:58:23  Using postgres connection "list_dbtsales_public"
[0m10:58:23  On list_dbtsales_public: BEGIN
[0m10:58:23  Opening a new connection, currently in state init
[0m10:58:23  SQL status: BEGIN in 0.0 seconds
[0m10:58:23  Using postgres connection "list_dbtsales_public"
[0m10:58:23  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m10:58:23  SQL status: SELECT 3 in 0.0 seconds
[0m10:58:23  On list_dbtsales_public: ROLLBACK
[0m10:58:23  On list_dbtsales_public: Close
[0m10:58:23  Using postgres connection "master"
[0m10:58:23  On master: BEGIN
[0m10:58:23  Opening a new connection, currently in state init
[0m10:58:23  SQL status: BEGIN in 0.0 seconds
[0m10:58:23  Using postgres connection "master"
[0m10:58:23  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m10:58:23  SQL status: SELECT 0 in 0.0 seconds
[0m10:58:23  On master: ROLLBACK
[0m10:58:23  Using postgres connection "master"
[0m10:58:23  On master: BEGIN
[0m10:58:23  SQL status: BEGIN in 0.0 seconds
[0m10:58:23  On master: COMMIT
[0m10:58:23  Using postgres connection "master"
[0m10:58:23  On master: COMMIT
[0m10:58:23  SQL status: COMMIT in 0.0 seconds
[0m10:58:23  On master: Close
[0m10:58:23  Concurrency: 1 threads (target='dev')
[0m10:58:23  
[0m10:58:23  Began running node model.jaffle_shop.stg_customers
[0m10:58:23  1 of 6 START sql view model public.stg_customers ............................... [RUN]
[0m10:58:23  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m10:58:23  Began compiling node model.jaffle_shop.stg_customers
[0m10:58:23  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m10:58:23  Timing info for model.jaffle_shop.stg_customers (compile): 12:58:23.172793 => 12:58:23.180792
[0m10:58:23  Began executing node model.jaffle_shop.stg_customers
[0m10:58:23  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_customers"
[0m10:58:23  On model.jaffle_shop.stg_customers: BEGIN
[0m10:58:23  Opening a new connection, currently in state init
[0m10:58:23  SQL status: BEGIN in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_customers"
[0m10:58:23  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m10:58:23  SQL status: CREATE VIEW in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_customers"
[0m10:58:23  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m10:58:23  SQL status: ALTER TABLE in 0.0 seconds
[0m10:58:23  On model.jaffle_shop.stg_customers: COMMIT
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_customers"
[0m10:58:23  On model.jaffle_shop.stg_customers: COMMIT
[0m10:58:23  SQL status: COMMIT in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_customers"
[0m10:58:23  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public"."stg_customers__dbt_backup" cascade
[0m10:58:23  SQL status: DROP VIEW in 0.0 seconds
[0m10:58:23  Timing info for model.jaffle_shop.stg_customers (execute): 12:58:23.183792 => 12:58:23.335388
[0m10:58:23  On model.jaffle_shop.stg_customers: Close
[0m10:58:23  1 of 6 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.17s]
[0m10:58:23  Finished running node model.jaffle_shop.stg_customers
[0m10:58:23  Began running node model.jaffle_shop.stg_orders
[0m10:58:23  2 of 6 START sql table model public.stg_orders ................................. [RUN]
[0m10:58:23  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m10:58:23  Began compiling node model.jaffle_shop.stg_orders
[0m10:58:23  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m10:58:23  Timing info for model.jaffle_shop.stg_orders (compile): 12:58:23.350036 => 12:58:23.357025
[0m10:58:23  Began executing node model.jaffle_shop.stg_orders
[0m10:58:23  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_orders"
[0m10:58:23  On model.jaffle_shop.stg_orders: BEGIN
[0m10:58:23  Opening a new connection, currently in state closed
[0m10:58:23  SQL status: BEGIN in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_orders"
[0m10:58:23  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m10:58:23  SQL status: SELECT 99 in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_orders"
[0m10:58:23  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m10:58:23  SQL status: ALTER TABLE in 0.0 seconds
[0m10:58:23  On model.jaffle_shop.stg_orders: COMMIT
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_orders"
[0m10:58:23  On model.jaffle_shop.stg_orders: COMMIT
[0m10:58:23  SQL status: COMMIT in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_orders"
[0m10:58:23  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m10:58:23  SQL status: DROP TABLE in 0.0 seconds
[0m10:58:23  Timing info for model.jaffle_shop.stg_orders (execute): 12:58:23.360027 => 12:58:23.483121
[0m10:58:23  On model.jaffle_shop.stg_orders: Close
[0m10:58:23  2 of 6 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.14s]
[0m10:58:23  Finished running node model.jaffle_shop.stg_orders
[0m10:58:23  Began running node model.jaffle_shop.stg_payments
[0m10:58:23  3 of 6 START sql view model public.stg_payments ................................ [RUN]
[0m10:58:23  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m10:58:23  Began compiling node model.jaffle_shop.stg_payments
[0m10:58:23  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m10:58:23  Timing info for model.jaffle_shop.stg_payments (compile): 12:58:23.497393 => 12:58:23.505832
[0m10:58:23  Began executing node model.jaffle_shop.stg_payments
[0m10:58:23  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_payments"
[0m10:58:23  On model.jaffle_shop.stg_payments: BEGIN
[0m10:58:23  Opening a new connection, currently in state closed
[0m10:58:23  SQL status: BEGIN in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_payments"
[0m10:58:23  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "dbtsales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m10:58:23  SQL status: CREATE VIEW in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_payments"
[0m10:58:23  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m10:58:23  SQL status: ALTER TABLE in 0.0 seconds
[0m10:58:23  On model.jaffle_shop.stg_payments: COMMIT
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_payments"
[0m10:58:23  On model.jaffle_shop.stg_payments: COMMIT
[0m10:58:23  SQL status: COMMIT in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.stg_payments"
[0m10:58:23  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "dbtsales"."public"."stg_payments__dbt_backup" cascade
[0m10:58:23  SQL status: DROP VIEW in 0.0 seconds
[0m10:58:23  Timing info for model.jaffle_shop.stg_payments (execute): 12:58:23.508984 => 12:58:23.603858
[0m10:58:23  On model.jaffle_shop.stg_payments: Close
[0m10:58:23  3 of 6 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.11s]
[0m10:58:23  Finished running node model.jaffle_shop.stg_payments
[0m10:58:23  Began running node model.jaffle_shop.v_staging_orders
[0m10:58:23  4 of 6 START sql view model public.v_staging_orders ............................ [RUN]
[0m10:58:23  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.v_staging_orders)
[0m10:58:23  Began compiling node model.jaffle_shop.v_staging_orders
[0m10:58:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:23  On model.jaffle_shop.v_staging_orders: BEGIN
[0m10:58:23  Opening a new connection, currently in state closed
[0m10:58:23  SQL status: BEGIN in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m10:58:23  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m10:58:23  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:23  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m10:58:23  Timing info for model.jaffle_shop.v_staging_orders (compile): 12:58:23.617831 => 12:58:23.861887
[0m10:58:23  Began executing node model.jaffle_shop.v_staging_orders
[0m10:58:23  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m10:58:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "dbtsales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "dbtsales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m10:58:23  SQL status: CREATE VIEW in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "dbtsales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m10:58:23  SQL status: ALTER TABLE in 0.0 seconds
[0m10:58:23  On model.jaffle_shop.v_staging_orders: COMMIT
[0m10:58:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:23  On model.jaffle_shop.v_staging_orders: COMMIT
[0m10:58:23  SQL status: COMMIT in 0.0 seconds
[0m10:58:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "dbtsales"."public"."v_staging_orders__dbt_backup" cascade
[0m10:58:23  SQL status: DROP VIEW in 0.0 seconds
[0m10:58:23  Timing info for model.jaffle_shop.v_staging_orders (execute): 12:58:23.867424 => 12:58:23.936517
[0m10:58:23  On model.jaffle_shop.v_staging_orders: Close
[0m10:58:23  4 of 6 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.33s]
[0m10:58:23  Finished running node model.jaffle_shop.v_staging_orders
[0m10:58:23  Began running node model.jaffle_shop.customers
[0m10:58:23  5 of 6 START sql table model public.customers .................................. [RUN]
[0m10:58:23  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m10:58:23  Began compiling node model.jaffle_shop.customers
[0m10:58:23  Writing injected SQL for node "model.jaffle_shop.customers"
[0m10:58:23  Timing info for model.jaffle_shop.customers (compile): 12:58:23.951633 => 12:58:23.961086
[0m10:58:23  Began executing node model.jaffle_shop.customers
[0m10:58:23  Writing runtime sql for node "model.jaffle_shop.customers"
[0m10:58:23  Using postgres connection "model.jaffle_shop.customers"
[0m10:58:23  On model.jaffle_shop.customers: BEGIN
[0m10:58:23  Opening a new connection, currently in state closed
[0m10:58:24  SQL status: BEGIN in 0.0 seconds
[0m10:58:24  Using postgres connection "model.jaffle_shop.customers"
[0m10:58:24  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "dbtsales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select * from "dbtsales"."public"."stg_customers"

),

orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public"."stg_payments"

),



customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m10:58:24  SQL status: SELECT 100 in 0.0 seconds
[0m10:58:24  Using postgres connection "model.jaffle_shop.customers"
[0m10:58:24  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m10:58:24  SQL status: ALTER TABLE in 0.0 seconds
[0m10:58:24  On model.jaffle_shop.customers: COMMIT
[0m10:58:24  Using postgres connection "model.jaffle_shop.customers"
[0m10:58:24  On model.jaffle_shop.customers: COMMIT
[0m10:58:24  SQL status: COMMIT in 0.0 seconds
[0m10:58:24  Using postgres connection "model.jaffle_shop.customers"
[0m10:58:24  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop table if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m10:58:24  SQL status: DROP TABLE in 0.0 seconds
[0m10:58:24  Timing info for model.jaffle_shop.customers (execute): 12:58:23.967125 => 12:58:24.079277
[0m10:58:24  On model.jaffle_shop.customers: Close
[0m10:58:24  5 of 6 OK created sql table model public.customers ............................. [[32mSELECT 100[0m in 0.14s]
[0m10:58:24  Finished running node model.jaffle_shop.customers
[0m10:58:24  Began running node model.jaffle_shop.orders
[0m10:58:24  6 of 6 START sql table model public.orders ..................................... [RUN]
[0m10:58:24  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m10:58:24  Began compiling node model.jaffle_shop.orders
[0m10:58:24  Using postgres connection "model.jaffle_shop.orders"
[0m10:58:24  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

    
    select distinct
    payment_method
    from "dbtsales"."public"."raw_payments"
    order by 1

  
[0m10:58:24  Opening a new connection, currently in state closed
[0m10:58:24  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:24  Writing injected SQL for node "model.jaffle_shop.orders"
[0m10:58:24  Timing info for model.jaffle_shop.orders (compile): 12:58:24.097173 => 12:58:24.196723
[0m10:58:24  Began executing node model.jaffle_shop.orders
[0m10:58:24  Writing runtime sql for node "model.jaffle_shop.orders"
[0m10:58:24  Using postgres connection "model.jaffle_shop.orders"
[0m10:58:24  On model.jaffle_shop.orders: BEGIN
[0m10:58:24  SQL status: BEGIN in 0.0 seconds
[0m10:58:24  Using postgres connection "model.jaffle_shop.orders"
[0m10:58:24  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "dbtsales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    --Set the payment methods in a variable to use later in a for loop


with orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        --use the variable specified at the top of this model
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        
        --remove trailling , that may cause double comma errors--end for loop
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.bank_transfer_amount,

        order_payments.coupon_amount,

        order_payments.credit_card_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m10:58:24  SQL status: SELECT 99 in 0.0 seconds
[0m10:58:24  Using postgres connection "model.jaffle_shop.orders"
[0m10:58:24  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "dbtsales"."public"."orders__dbt_tmp" rename to "orders"
[0m10:58:24  SQL status: ALTER TABLE in 0.0 seconds
[0m10:58:24  On model.jaffle_shop.orders: COMMIT
[0m10:58:24  Using postgres connection "model.jaffle_shop.orders"
[0m10:58:24  On model.jaffle_shop.orders: COMMIT
[0m10:58:24  SQL status: COMMIT in 0.0 seconds
[0m10:58:24  Using postgres connection "model.jaffle_shop.orders"
[0m10:58:24  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "dbtsales"."public"."orders__dbt_backup" cascade
[0m10:58:24  SQL status: DROP TABLE in 0.0 seconds
[0m10:58:24  Timing info for model.jaffle_shop.orders (execute): 12:58:24.199307 => 12:58:24.282979
[0m10:58:24  On model.jaffle_shop.orders: Close
[0m10:58:24  6 of 6 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.19s]
[0m10:58:24  Finished running node model.jaffle_shop.orders
[0m10:58:24  Using postgres connection "master"
[0m10:58:24  On master: BEGIN
[0m10:58:24  Opening a new connection, currently in state closed
[0m10:58:24  SQL status: BEGIN in 0.0 seconds
[0m10:58:24  On master: COMMIT
[0m10:58:24  Using postgres connection "master"
[0m10:58:24  On master: COMMIT
[0m10:58:24  SQL status: COMMIT in 0.0 seconds
[0m10:58:24  On master: Close
[0m10:58:24  Connection 'master' was properly closed.
[0m10:58:24  Connection 'list_dbtsales' was properly closed.
[0m10:58:24  Connection 'list_dbtsales_public' was properly closed.
[0m10:58:24  Connection 'model.jaffle_shop.orders' was properly closed.
[0m10:58:24  
[0m10:58:24  Finished running 3 view models, 3 table models in 0 hours 0 minutes and 1.35 seconds (1.35s).
[0m10:58:24  Command end result
[0m10:58:24  
[0m10:58:24  [32mCompleted successfully[0m
[0m10:58:24  
[0m10:58:24  Done. PASS=6 WARN=0 ERROR=0 SKIP=0 TOTAL=6
[0m10:58:24  Command `dbt run` succeeded at 12:58:24.368175 after 1.78 seconds
[0m10:58:24  Flushing usage events
[0m10:58:36  Running with dbt=1.5.0
[0m10:58:36  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:58:37  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:58:37  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m10:58:37  Partial parsing enabled, no changes found, skipping parsing
[0m10:58:37  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m10:58:37  
[0m10:58:37  Acquiring new postgres connection 'master'
[0m10:58:37  Acquiring new postgres connection 'list_dbtsales_public'
[0m10:58:37  Using postgres connection "list_dbtsales_public"
[0m10:58:37  On list_dbtsales_public: BEGIN
[0m10:58:37  Opening a new connection, currently in state init
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "list_dbtsales_public"
[0m10:58:37  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m10:58:37  SQL status: SELECT 9 in 0.0 seconds
[0m10:58:37  On list_dbtsales_public: ROLLBACK
[0m10:58:37  On list_dbtsales_public: Close
[0m10:58:37  Using postgres connection "master"
[0m10:58:37  On master: BEGIN
[0m10:58:37  Opening a new connection, currently in state init
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "master"
[0m10:58:37  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m10:58:37  SQL status: SELECT 3 in 0.0 seconds
[0m10:58:37  On master: ROLLBACK
[0m10:58:37  Using postgres connection "master"
[0m10:58:37  On master: BEGIN
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  On master: COMMIT
[0m10:58:37  Using postgres connection "master"
[0m10:58:37  On master: COMMIT
[0m10:58:37  SQL status: COMMIT in 0.0 seconds
[0m10:58:37  On master: Close
[0m10:58:37  Concurrency: 1 threads (target='dev')
[0m10:58:37  
[0m10:58:37  Began running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:37  1 of 20 START test accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m10:58:37  Acquiring new postgres connection 'test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3'
[0m10:58:37  Began compiling node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m10:58:37  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (compile): 12:58:37.405408 => 12:58:37.425422
[0m10:58:37  Began executing node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m10:58:37  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m10:58:37  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: BEGIN
[0m10:58:37  Opening a new connection, currently in state init
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m10:58:37  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "dbtsales"."public"."orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m10:58:37  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:37  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (execute): 12:58:37.427932 => 12:58:37.494953
[0m10:58:37  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: ROLLBACK
[0m10:58:37  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: Close
[0m10:58:37  1 of 20 PASS accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.10s]
[0m10:58:37  Finished running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:37  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:37  2 of 20 START test accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m10:58:37  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3, now test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad)
[0m10:58:37  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m10:58:37  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 12:58:37.513166 => 12:58:37.529563
[0m10:58:37  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m10:58:37  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: BEGIN
[0m10:58:37  Opening a new connection, currently in state closed
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "dbtsales"."public"."stg_orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m10:58:37  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:37  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 12:58:37.531561 => 12:58:37.578149
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: ROLLBACK
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: Close
[0m10:58:37  2 of 20 PASS accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.08s]
[0m10:58:37  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:37  Began running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:37  3 of 20 START test accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [RUN]
[0m10:58:37  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad, now test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278)
[0m10:58:37  Began compiling node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m10:58:37  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (compile): 12:58:37.596521 => 12:58:37.609995
[0m10:58:37  Began executing node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m10:58:37  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: BEGIN
[0m10:58:37  Opening a new connection, currently in state closed
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        payment_method as value_field,
        count(*) as n_records

    from "dbtsales"."public"."stg_payments"
    group by payment_method

)

select *
from all_values
where value_field not in (
    'credit_card','coupon','bank_transfer','gift_card'
)



      
    ) dbt_internal_test
[0m10:58:37  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:37  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (execute): 12:58:37.612998 => 12:58:37.652995
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: ROLLBACK
[0m10:58:37  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: Close
[0m10:58:37  3 of 20 PASS accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [[32mPASS[0m in 0.07s]
[0m10:58:37  Finished running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:37  Began running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:37  4 of 20 START test not_null_customers_customer_id .............................. [RUN]
[0m10:58:37  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278, now test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d)
[0m10:58:37  Began compiling node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m10:58:37  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (compile): 12:58:37.669001 => 12:58:37.679161
[0m10:58:37  Began executing node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m10:58:37  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: BEGIN
[0m10:58:37  Opening a new connection, currently in state closed
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m10:58:37  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "dbtsales"."public"."customers"
where customer_id is null



      
    ) dbt_internal_test
[0m10:58:37  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:37  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (execute): 12:58:37.683522 => 12:58:37.724747
[0m10:58:37  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: ROLLBACK
[0m10:58:37  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: Close
[0m10:58:37  4 of 20 PASS not_null_customers_customer_id .................................... [[32mPASS[0m in 0.06s]
[0m10:58:37  Finished running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:37  Began running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:37  5 of 20 START test not_null_orders_amount ...................................... [RUN]
[0m10:58:37  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d, now test.jaffle_shop.not_null_orders_amount.106140f9fd)
[0m10:58:37  Began compiling node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m10:58:37  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (compile): 12:58:37.738729 => 12:58:37.746727
[0m10:58:37  Began executing node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m10:58:37  On test.jaffle_shop.not_null_orders_amount.106140f9fd: BEGIN
[0m10:58:37  Opening a new connection, currently in state closed
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m10:58:37  On test.jaffle_shop.not_null_orders_amount.106140f9fd: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select amount
from "dbtsales"."public"."orders"
where amount is null



      
    ) dbt_internal_test
[0m10:58:37  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:37  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (execute): 12:58:37.748726 => 12:58:37.788388
[0m10:58:37  On test.jaffle_shop.not_null_orders_amount.106140f9fd: ROLLBACK
[0m10:58:37  On test.jaffle_shop.not_null_orders_amount.106140f9fd: Close
[0m10:58:37  5 of 20 PASS not_null_orders_amount ............................................ [[32mPASS[0m in 0.06s]
[0m10:58:37  Finished running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:37  Began running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:37  6 of 20 START test not_null_orders_bank_transfer_amount ........................ [RUN]
[0m10:58:37  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_amount.106140f9fd, now test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49)
[0m10:58:37  Began compiling node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m10:58:37  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (compile): 12:58:37.803387 => 12:58:37.811384
[0m10:58:37  Began executing node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m10:58:37  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: BEGIN
[0m10:58:37  Opening a new connection, currently in state closed
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m10:58:37  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select bank_transfer_amount
from "dbtsales"."public"."orders"
where bank_transfer_amount is null



      
    ) dbt_internal_test
[0m10:58:37  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:37  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (execute): 12:58:37.814387 => 12:58:37.869393
[0m10:58:37  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: ROLLBACK
[0m10:58:37  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: Close
[0m10:58:37  6 of 20 PASS not_null_orders_bank_transfer_amount .............................. [[32mPASS[0m in 0.08s]
[0m10:58:37  Finished running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:37  Began running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:37  7 of 20 START test not_null_orders_coupon_amount ............................... [RUN]
[0m10:58:37  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49, now test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625)
[0m10:58:37  Began compiling node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m10:58:37  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (compile): 12:58:37.889120 => 12:58:37.904418
[0m10:58:37  Began executing node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m10:58:37  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: BEGIN
[0m10:58:37  Opening a new connection, currently in state closed
[0m10:58:37  SQL status: BEGIN in 0.0 seconds
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m10:58:37  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select coupon_amount
from "dbtsales"."public"."orders"
where coupon_amount is null



      
    ) dbt_internal_test
[0m10:58:37  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:37  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (execute): 12:58:37.909898 => 12:58:37.955028
[0m10:58:37  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: ROLLBACK
[0m10:58:37  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: Close
[0m10:58:37  7 of 20 PASS not_null_orders_coupon_amount ..................................... [[32mPASS[0m in 0.08s]
[0m10:58:37  Finished running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:37  Began running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:37  8 of 20 START test not_null_orders_credit_card_amount .......................... [RUN]
[0m10:58:37  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625, now test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59)
[0m10:58:37  Began compiling node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:37  Writing injected SQL for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m10:58:37  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (compile): 12:58:37.972451 => 12:58:37.981494
[0m10:58:37  Began executing node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:37  Writing runtime sql for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m10:58:37  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m10:58:37  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: BEGIN
[0m10:58:37  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m10:58:38  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select credit_card_amount
from "dbtsales"."public"."orders"
where credit_card_amount is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (execute): 12:58:37.984492 => 12:58:38.029085
[0m10:58:38  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: ROLLBACK
[0m10:58:38  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: Close
[0m10:58:38  8 of 20 PASS not_null_orders_credit_card_amount ................................ [[32mPASS[0m in 0.06s]
[0m10:58:38  Finished running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:38  Began running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:38  9 of 20 START test not_null_orders_customer_id ................................. [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59, now test.jaffle_shop.not_null_orders_customer_id.c5f02694af)
[0m10:58:38  Began compiling node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m10:58:38  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (compile): 12:58:38.046248 => 12:58:38.053229
[0m10:58:38  Began executing node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m10:58:38  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m10:58:38  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "dbtsales"."public"."orders"
where customer_id is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (execute): 12:58:38.056228 => 12:58:38.095977
[0m10:58:38  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: ROLLBACK
[0m10:58:38  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: Close
[0m10:58:38  9 of 20 PASS not_null_orders_customer_id ....................................... [[32mPASS[0m in 0.06s]
[0m10:58:38  Finished running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:38  Began running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:38  10 of 20 START test not_null_orders_gift_card_amount ........................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_customer_id.c5f02694af, now test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a)
[0m10:58:38  Began compiling node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m10:58:38  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (compile): 12:58:38.112169 => 12:58:38.164180
[0m10:58:38  Began executing node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m10:58:38  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m10:58:38  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select gift_card_amount
from "dbtsales"."public"."orders"
where gift_card_amount is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (execute): 12:58:38.166179 => 12:58:38.208728
[0m10:58:38  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: ROLLBACK
[0m10:58:38  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: Close
[0m10:58:38  10 of 20 PASS not_null_orders_gift_card_amount ................................. [[32mPASS[0m in 0.11s]
[0m10:58:38  Finished running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:38  Began running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:38  11 of 20 START test not_null_orders_order_id ................................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a, now test.jaffle_shop.not_null_orders_order_id.cf6c17daed)
[0m10:58:38  Began compiling node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m10:58:38  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (compile): 12:58:38.223094 => 12:58:38.231092
[0m10:58:38  Began executing node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m10:58:38  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m10:58:38  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "dbtsales"."public"."orders"
where order_id is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (execute): 12:58:38.233092 => 12:58:38.272103
[0m10:58:38  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: ROLLBACK
[0m10:58:38  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: Close
[0m10:58:38  11 of 20 PASS not_null_orders_order_id ......................................... [[32mPASS[0m in 0.06s]
[0m10:58:38  Finished running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:38  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:38  12 of 20 START test not_null_stg_customers_customer_id ......................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_order_id.cf6c17daed, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m10:58:38  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m10:58:38  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 12:58:38.287685 => 12:58:38.297686
[0m10:58:38  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m10:58:38  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m10:58:38  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "dbtsales"."public"."stg_customers"
where customer_id is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 12:58:38.300683 => 12:58:38.361694
[0m10:58:38  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: ROLLBACK
[0m10:58:38  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: Close
[0m10:58:38  12 of 20 PASS not_null_stg_customers_customer_id ............................... [[32mPASS[0m in 0.08s]
[0m10:58:38  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:38  Began running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:38  13 of 20 START test not_null_stg_orders_order_id ............................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64)
[0m10:58:38  Began compiling node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m10:58:38  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (compile): 12:58:38.379356 => 12:58:38.386356
[0m10:58:38  Began executing node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m10:58:38  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m10:58:38  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "dbtsales"."public"."stg_orders"
where order_id is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (execute): 12:58:38.391846 => 12:58:38.434846
[0m10:58:38  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: ROLLBACK
[0m10:58:38  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: Close
[0m10:58:38  13 of 20 PASS not_null_stg_orders_order_id ..................................... [[32mPASS[0m in 0.07s]
[0m10:58:38  Finished running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:38  Began running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:38  14 of 20 START test not_null_stg_payments_payment_id ........................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64, now test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075)
[0m10:58:38  Began compiling node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m10:58:38  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (compile): 12:58:38.451846 => 12:58:38.462199
[0m10:58:38  Began executing node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m10:58:38  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m10:58:38  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select payment_id
from "dbtsales"."public"."stg_payments"
where payment_id is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (execute): 12:58:38.464219 => 12:58:38.511087
[0m10:58:38  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: ROLLBACK
[0m10:58:38  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: Close
[0m10:58:38  14 of 20 PASS not_null_stg_payments_payment_id ................................. [[32mPASS[0m in 0.07s]
[0m10:58:38  Finished running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:38  Began running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:38  15 of 20 START test relationships_orders_customer_id__customer_id__ref_customers_  [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075, now test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2)
[0m10:58:38  Began compiling node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m10:58:38  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (compile): 12:58:38.528549 => 12:58:38.547561
[0m10:58:38  Began executing node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m10:58:38  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m10:58:38  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m10:58:38  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with child as (
    select customer_id as from_field
    from "dbtsales"."public"."orders"
    where customer_id is not null
),

parent as (
    select customer_id as to_field
    from "dbtsales"."public"."customers"
)

select
    from_field

from child
left join parent
    on child.from_field = parent.to_field

where parent.to_field is null



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (execute): 12:58:38.550588 => 12:58:38.602404
[0m10:58:38  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: ROLLBACK
[0m10:58:38  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: Close
[0m10:58:38  15 of 20 PASS relationships_orders_customer_id__customer_id__ref_customers_ .... [[32mPASS[0m in 0.08s]
[0m10:58:38  Finished running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:38  Began running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:38  16 of 20 START test unique_customers_customer_id ............................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2, now test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1)
[0m10:58:38  Began compiling node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m10:58:38  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (compile): 12:58:38.622982 => 12:58:38.634979
[0m10:58:38  Began executing node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m10:58:38  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m10:58:38  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "dbtsales"."public"."customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (execute): 12:58:38.637980 => 12:58:38.701727
[0m10:58:38  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: ROLLBACK
[0m10:58:38  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: Close
[0m10:58:38  16 of 20 PASS unique_customers_customer_id ..................................... [[32mPASS[0m in 0.09s]
[0m10:58:38  Finished running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:38  Began running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:38  17 of 20 START test unique_orders_order_id ..................................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1, now test.jaffle_shop.unique_orders_order_id.fed79b3a6e)
[0m10:58:38  Began compiling node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m10:58:38  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (compile): 12:58:38.718666 => 12:58:38.727484
[0m10:58:38  Began executing node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m10:58:38  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m10:58:38  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "dbtsales"."public"."orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (execute): 12:58:38.730487 => 12:58:38.773869
[0m10:58:38  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: ROLLBACK
[0m10:58:38  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: Close
[0m10:58:38  17 of 20 PASS unique_orders_order_id ........................................... [[32mPASS[0m in 0.06s]
[0m10:58:38  Finished running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:38  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:38  18 of 20 START test unique_stg_customers_customer_id ........................... [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_orders_order_id.fed79b3a6e, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m10:58:38  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m10:58:38  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 12:58:38.788387 => 12:58:38.796386
[0m10:58:38  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m10:58:38  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m10:58:38  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "dbtsales"."public"."stg_customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 12:58:38.799387 => 12:58:38.840383
[0m10:58:38  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: ROLLBACK
[0m10:58:38  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: Close
[0m10:58:38  18 of 20 PASS unique_stg_customers_customer_id ................................. [[32mPASS[0m in 0.06s]
[0m10:58:38  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:38  Began running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:38  19 of 20 START test unique_stg_orders_order_id ................................. [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a)
[0m10:58:38  Began compiling node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m10:58:38  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (compile): 12:58:38.853386 => 12:58:38.862413
[0m10:58:38  Began executing node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m10:58:38  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m10:58:38  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "dbtsales"."public"."stg_orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (execute): 12:58:38.864412 => 12:58:38.916574
[0m10:58:38  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: ROLLBACK
[0m10:58:38  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: Close
[0m10:58:38  19 of 20 PASS unique_stg_orders_order_id ....................................... [[32mPASS[0m in 0.07s]
[0m10:58:38  Finished running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:38  Began running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:38  20 of 20 START test unique_stg_payments_payment_id ............................. [RUN]
[0m10:58:38  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a, now test.jaffle_shop.unique_stg_payments_payment_id.3744510712)
[0m10:58:38  Began compiling node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:38  Writing injected SQL for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m10:58:38  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (compile): 12:58:38.931562 => 12:58:38.940556
[0m10:58:38  Began executing node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:38  Writing runtime sql for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m10:58:38  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: BEGIN
[0m10:58:38  Opening a new connection, currently in state closed
[0m10:58:38  SQL status: BEGIN in 0.0 seconds
[0m10:58:38  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m10:58:38  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    payment_id as unique_field,
    count(*) as n_records

from "dbtsales"."public"."stg_payments"
where payment_id is not null
group by payment_id
having count(*) > 1



      
    ) dbt_internal_test
[0m10:58:38  SQL status: SELECT 1 in 0.0 seconds
[0m10:58:38  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (execute): 12:58:38.942560 => 12:58:38.994802
[0m10:58:38  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: ROLLBACK
[0m10:58:38  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: Close
[0m10:58:39  20 of 20 PASS unique_stg_payments_payment_id ................................... [[32mPASS[0m in 0.07s]
[0m10:58:39  Finished running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:39  Using postgres connection "master"
[0m10:58:39  On master: BEGIN
[0m10:58:39  Opening a new connection, currently in state closed
[0m10:58:39  SQL status: BEGIN in 0.0 seconds
[0m10:58:39  On master: COMMIT
[0m10:58:39  Using postgres connection "master"
[0m10:58:39  On master: COMMIT
[0m10:58:39  SQL status: COMMIT in 0.0 seconds
[0m10:58:39  On master: Close
[0m10:58:39  Connection 'master' was properly closed.
[0m10:58:39  Connection 'list_dbtsales_public' was properly closed.
[0m10:58:39  Connection 'test.jaffle_shop.unique_stg_payments_payment_id.3744510712' was properly closed.
[0m10:58:39  
[0m10:58:39  Finished running 20 tests in 0 hours 0 minutes and 1.80 seconds (1.80s).
[0m10:58:39  Command end result
[0m10:58:39  
[0m10:58:39  [32mCompleted successfully[0m
[0m10:58:39  
[0m10:58:39  Done. PASS=20 WARN=0 ERROR=0 SKIP=0 TOTAL=20
[0m10:58:39  Command `dbt test` succeeded at 12:58:39.104331 after 2.16 seconds
[0m10:58:39  Flushing usage events
[0m10:58:45  Running with dbt=1.5.0
[0m10:58:45  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:58:45  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:58:45  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m10:58:46  Partial parsing enabled, no changes found, skipping parsing
[0m10:58:46  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m10:58:46  
[0m10:58:46  Acquiring new postgres connection 'master'
[0m10:58:46  Acquiring new postgres connection 'list_dbtsales_public'
[0m10:58:46  Using postgres connection "list_dbtsales_public"
[0m10:58:46  On list_dbtsales_public: BEGIN
[0m10:58:46  Opening a new connection, currently in state init
[0m10:58:46  SQL status: BEGIN in 0.0 seconds
[0m10:58:46  Using postgres connection "list_dbtsales_public"
[0m10:58:46  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m10:58:46  SQL status: SELECT 9 in 0.0 seconds
[0m10:58:46  On list_dbtsales_public: ROLLBACK
[0m10:58:46  On list_dbtsales_public: Close
[0m10:58:46  Using postgres connection "master"
[0m10:58:46  On master: BEGIN
[0m10:58:46  Opening a new connection, currently in state init
[0m10:58:46  SQL status: BEGIN in 0.0 seconds
[0m10:58:46  Using postgres connection "master"
[0m10:58:46  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m10:58:46  SQL status: SELECT 3 in 0.0 seconds
[0m10:58:46  On master: ROLLBACK
[0m10:58:46  On master: Close
[0m10:58:46  Concurrency: 1 threads (target='dev')
[0m10:58:46  
[0m10:58:46  Began running node seed.jaffle_shop.raw_customers
[0m10:58:46  Acquiring new postgres connection 'seed.jaffle_shop.raw_customers'
[0m10:58:46  Began compiling node seed.jaffle_shop.raw_customers
[0m10:58:46  Timing info for seed.jaffle_shop.raw_customers (compile): 12:58:46.158200 => 12:58:46.162196
[0m10:58:46  Began executing node seed.jaffle_shop.raw_customers
[0m10:58:46  Timing info for seed.jaffle_shop.raw_customers (execute): 12:58:46.164199 => 12:58:46.164199
[0m10:58:46  Finished running node seed.jaffle_shop.raw_customers
[0m10:58:46  Began running node seed.jaffle_shop.raw_orders
[0m10:58:46  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_customers, now seed.jaffle_shop.raw_orders)
[0m10:58:46  Began compiling node seed.jaffle_shop.raw_orders
[0m10:58:46  Timing info for seed.jaffle_shop.raw_orders (compile): 12:58:46.173205 => 12:58:46.175210
[0m10:58:46  Began executing node seed.jaffle_shop.raw_orders
[0m10:58:46  Timing info for seed.jaffle_shop.raw_orders (execute): 12:58:46.177209 => 12:58:46.177209
[0m10:58:46  Finished running node seed.jaffle_shop.raw_orders
[0m10:58:46  Began running node seed.jaffle_shop.raw_payments
[0m10:58:46  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_orders, now seed.jaffle_shop.raw_payments)
[0m10:58:46  Began compiling node seed.jaffle_shop.raw_payments
[0m10:58:46  Timing info for seed.jaffle_shop.raw_payments (compile): 12:58:46.183427 => 12:58:46.186428
[0m10:58:46  Began executing node seed.jaffle_shop.raw_payments
[0m10:58:46  Timing info for seed.jaffle_shop.raw_payments (execute): 12:58:46.190432 => 12:58:46.190432
[0m10:58:46  Finished running node seed.jaffle_shop.raw_payments
[0m10:58:46  Began running node model.jaffle_shop.stg_customers
[0m10:58:46  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_payments, now model.jaffle_shop.stg_customers)
[0m10:58:46  Began compiling node model.jaffle_shop.stg_customers
[0m10:58:46  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m10:58:46  Timing info for model.jaffle_shop.stg_customers (compile): 12:58:46.197427 => 12:58:46.202428
[0m10:58:46  Began executing node model.jaffle_shop.stg_customers
[0m10:58:46  Timing info for model.jaffle_shop.stg_customers (execute): 12:58:46.207431 => 12:58:46.207431
[0m10:58:46  Finished running node model.jaffle_shop.stg_customers
[0m10:58:46  Began running node model.jaffle_shop.stg_orders
[0m10:58:46  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m10:58:46  Began compiling node model.jaffle_shop.stg_orders
[0m10:58:46  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m10:58:46  Timing info for model.jaffle_shop.stg_orders (compile): 12:58:46.213426 => 12:58:46.218429
[0m10:58:46  Began executing node model.jaffle_shop.stg_orders
[0m10:58:46  Timing info for model.jaffle_shop.stg_orders (execute): 12:58:46.223428 => 12:58:46.223428
[0m10:58:46  Finished running node model.jaffle_shop.stg_orders
[0m10:58:46  Began running node model.jaffle_shop.stg_payments
[0m10:58:46  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m10:58:46  Began compiling node model.jaffle_shop.stg_payments
[0m10:58:46  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m10:58:46  Timing info for model.jaffle_shop.stg_payments (compile): 12:58:46.230429 => 12:58:46.238495
[0m10:58:46  Began executing node model.jaffle_shop.stg_payments
[0m10:58:46  Timing info for model.jaffle_shop.stg_payments (execute): 12:58:46.241501 => 12:58:46.241501
[0m10:58:46  Finished running node model.jaffle_shop.stg_payments
[0m10:58:46  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:46  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 12:58:46.247478 => 12:58:46.264991
[0m10:58:46  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:46  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 12:58:46.268451 => 12:58:46.268451
[0m10:58:46  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m10:58:46  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m10:58:46  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m10:58:46  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 12:58:46.276605 => 12:58:46.286128
[0m10:58:46  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:46  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 12:58:46.290128 => 12:58:46.290128
[0m10:58:46  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m10:58:46  Began running node model.jaffle_shop.v_staging_orders
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now model.jaffle_shop.v_staging_orders)
[0m10:58:46  Began compiling node model.jaffle_shop.v_staging_orders
[0m10:58:46  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:46  On model.jaffle_shop.v_staging_orders: BEGIN
[0m10:58:46  Opening a new connection, currently in state init
[0m10:58:46  SQL status: BEGIN in 0.0 seconds
[0m10:58:46  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:46  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m10:58:46  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:46  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m10:58:46  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m10:58:46  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:46  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m10:58:46  Timing info for model.jaffle_shop.v_staging_orders (compile): 12:58:46.297126 => 12:58:46.475089
[0m10:58:46  Began executing node model.jaffle_shop.v_staging_orders
[0m10:58:46  Timing info for model.jaffle_shop.v_staging_orders (execute): 12:58:46.478203 => 12:58:46.478203
[0m10:58:46  On model.jaffle_shop.v_staging_orders: ROLLBACK
[0m10:58:46  On model.jaffle_shop.v_staging_orders: Close
[0m10:58:46  Finished running node model.jaffle_shop.v_staging_orders
[0m10:58:46  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:46  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad)
[0m10:58:46  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m10:58:46  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 12:58:46.492236 => 12:58:46.509236
[0m10:58:46  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:46  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 12:58:46.512235 => 12:58:46.512235
[0m10:58:46  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m10:58:46  Began running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad, now test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (compile): 12:58:46.519238 => 12:58:46.527235
[0m10:58:46  Began executing node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:46  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (execute): 12:58:46.530241 => 12:58:46.530241
[0m10:58:46  Finished running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m10:58:46  Began running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64, now test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a)
[0m10:58:46  Began compiling node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m10:58:46  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (compile): 12:58:46.539200 => 12:58:46.548898
[0m10:58:46  Began executing node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:46  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (execute): 12:58:46.552291 => 12:58:46.552291
[0m10:58:46  Finished running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m10:58:46  Began running node model.jaffle_shop.customers
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a, now model.jaffle_shop.customers)
[0m10:58:46  Began compiling node model.jaffle_shop.customers
[0m10:58:46  Writing injected SQL for node "model.jaffle_shop.customers"
[0m10:58:46  Timing info for model.jaffle_shop.customers (compile): 12:58:46.563598 => 12:58:46.571120
[0m10:58:46  Began executing node model.jaffle_shop.customers
[0m10:58:46  Timing info for model.jaffle_shop.customers (execute): 12:58:46.576249 => 12:58:46.576249
[0m10:58:46  Finished running node model.jaffle_shop.customers
[0m10:58:46  Began running node model.jaffle_shop.orders
[0m10:58:46  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m10:58:46  Began compiling node model.jaffle_shop.orders
[0m10:58:46  Using postgres connection "model.jaffle_shop.orders"
[0m10:58:46  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

    
    select distinct
    payment_method
    from "dbtsales"."public"."raw_payments"
    order by 1

  
[0m10:58:46  Opening a new connection, currently in state closed
[0m10:58:46  SQL status: SELECT 4 in 0.0 seconds
[0m10:58:46  Writing injected SQL for node "model.jaffle_shop.orders"
[0m10:58:46  Timing info for model.jaffle_shop.orders (compile): 12:58:46.585578 => 12:58:46.631814
[0m10:58:46  Began executing node model.jaffle_shop.orders
[0m10:58:46  Timing info for model.jaffle_shop.orders (execute): 12:58:46.633825 => 12:58:46.633825
[0m10:58:46  On model.jaffle_shop.orders: Close
[0m10:58:46  Finished running node model.jaffle_shop.orders
[0m10:58:46  Began running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:46  Re-using an available connection from the pool (formerly model.jaffle_shop.orders, now test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278)
[0m10:58:46  Began compiling node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m10:58:46  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (compile): 12:58:46.647139 => 12:58:46.658489
[0m10:58:46  Began executing node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:46  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (execute): 12:58:46.661486 => 12:58:46.661486
[0m10:58:46  Finished running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m10:58:46  Began running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278, now test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (compile): 12:58:46.673921 => 12:58:46.682446
[0m10:58:46  Began executing node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:46  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (execute): 12:58:46.684451 => 12:58:46.684451
[0m10:58:46  Finished running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m10:58:46  Began running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075, now test.jaffle_shop.unique_stg_payments_payment_id.3744510712)
[0m10:58:46  Began compiling node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m10:58:46  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (compile): 12:58:46.696164 => 12:58:46.705770
[0m10:58:46  Began executing node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:46  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (execute): 12:58:46.711226 => 12:58:46.711226
[0m10:58:46  Finished running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m10:58:46  Began running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_payments_payment_id.3744510712, now test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (compile): 12:58:46.719725 => 12:58:46.788924
[0m10:58:46  Began executing node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:46  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (execute): 12:58:46.791942 => 12:58:46.791942
[0m10:58:46  Finished running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m10:58:46  Began running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d, now test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1)
[0m10:58:46  Began compiling node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m10:58:46  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (compile): 12:58:46.800253 => 12:58:46.810356
[0m10:58:46  Began executing node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:46  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (execute): 12:58:46.812772 => 12:58:46.812772
[0m10:58:46  Finished running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m10:58:46  Began running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1, now test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3)
[0m10:58:46  Began compiling node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m10:58:46  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (compile): 12:58:46.825232 => 12:58:46.871586
[0m10:58:46  Began executing node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:46  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (execute): 12:58:46.875592 => 12:58:46.875592
[0m10:58:46  Finished running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m10:58:46  Began running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3, now test.jaffle_shop.not_null_orders_amount.106140f9fd)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (compile): 12:58:46.885107 => 12:58:46.898390
[0m10:58:46  Began executing node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (execute): 12:58:46.901389 => 12:58:46.901389
[0m10:58:46  Finished running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m10:58:46  Began running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_amount.106140f9fd, now test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (compile): 12:58:46.911549 => 12:58:46.918555
[0m10:58:46  Began executing node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (execute): 12:58:46.924001 => 12:58:46.924001
[0m10:58:46  Finished running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m10:58:46  Began running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49, now test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (compile): 12:58:46.932017 => 12:58:46.943018
[0m10:58:46  Began executing node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (execute): 12:58:46.946016 => 12:58:46.946016
[0m10:58:46  Finished running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m10:58:46  Began running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625, now test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (compile): 12:58:46.955019 => 12:58:46.962019
[0m10:58:46  Began executing node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (execute): 12:58:46.965017 => 12:58:46.965017
[0m10:58:46  Finished running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m10:58:46  Began running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59, now test.jaffle_shop.not_null_orders_customer_id.c5f02694af)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:46  Writing injected SQL for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (compile): 12:58:46.974027 => 12:58:46.980529
[0m10:58:46  Began executing node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:46  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (execute): 12:58:46.986418 => 12:58:46.986418
[0m10:58:46  Finished running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m10:58:46  Began running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:46  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_customer_id.c5f02694af, now test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a)
[0m10:58:46  Began compiling node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:47  Writing injected SQL for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m10:58:47  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (compile): 12:58:46.996406 => 12:58:47.002408
[0m10:58:47  Began executing node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:47  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (execute): 12:58:47.007411 => 12:58:47.007411
[0m10:58:47  Finished running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m10:58:47  Began running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:47  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a, now test.jaffle_shop.not_null_orders_order_id.cf6c17daed)
[0m10:58:47  Began compiling node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:47  Writing injected SQL for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m10:58:47  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (compile): 12:58:47.014468 => 12:58:47.022470
[0m10:58:47  Began executing node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:47  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (execute): 12:58:47.025467 => 12:58:47.025467
[0m10:58:47  Finished running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m10:58:47  Began running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:47  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_order_id.cf6c17daed, now test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2)
[0m10:58:47  Began compiling node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:47  Writing injected SQL for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m10:58:47  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (compile): 12:58:47.033465 => 12:58:47.049466
[0m10:58:47  Began executing node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:47  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (execute): 12:58:47.051464 => 12:58:47.051464
[0m10:58:47  Finished running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m10:58:47  Began running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:47  Re-using an available connection from the pool (formerly test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2, now test.jaffle_shop.unique_orders_order_id.fed79b3a6e)
[0m10:58:47  Began compiling node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:47  Writing injected SQL for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m10:58:47  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (compile): 12:58:47.060672 => 12:58:47.066683
[0m10:58:47  Began executing node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:47  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (execute): 12:58:47.069692 => 12:58:47.069692
[0m10:58:47  Finished running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m10:58:47  Connection 'master' was properly closed.
[0m10:58:47  Connection 'list_dbtsales_public' was properly closed.
[0m10:58:47  Connection 'test.jaffle_shop.unique_orders_order_id.fed79b3a6e' was properly closed.
[0m10:58:47  Command end result
[0m10:58:47  Acquiring new postgres connection 'generate_catalog'
[0m10:58:47  Building catalog
[0m10:58:47  Acquiring new postgres connection 'dbtsales.information_schema'
[0m10:58:47  Using postgres connection "dbtsales.information_schema"
[0m10:58:47  On dbtsales.information_schema: BEGIN
[0m10:58:47  Opening a new connection, currently in state init
[0m10:58:47  SQL status: BEGIN in 0.0 seconds
[0m10:58:47  Using postgres connection "dbtsales.information_schema"
[0m10:58:47  On dbtsales.information_schema: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "dbtsales.information_schema"} */

    
    

    select
        'dbtsales' as table_database,
        sch.nspname as table_schema,
        tbl.relname as table_name,
        case tbl.relkind
            when 'v' then 'VIEW'
            else 'BASE TABLE'
        end as table_type,
        tbl_desc.description as table_comment,
        col.attname as column_name,
        col.attnum as column_index,
        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,
        col_desc.description as column_comment,
        pg_get_userbyid(tbl.relowner) as table_owner

    from pg_catalog.pg_namespace sch
    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid
    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid
    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)
    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)

    where (upper(sch.nspname) = upper('public'))
      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session
      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables
      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view
      and col.attnum > 0 -- negative numbers are used for system columns such as oid
      and not col.attisdropped -- column as not been dropped

    order by
        sch.nspname,
        tbl.relname,
        col.attnum
[0m10:58:47  SQL status: SELECT 47 in 0.0 seconds
[0m10:58:47  On dbtsales.information_schema: ROLLBACK
[0m10:58:47  On dbtsales.information_schema: Close
[0m10:58:47  Catalog written to C:\Louw\GitHub\dbt\jaffle_shop\target\catalog.json
[0m10:58:47  Command `dbt docs generate` succeeded at 12:58:47.452991 after 1.72 seconds
[0m10:58:47  Connection 'generate_catalog' was properly closed.
[0m10:58:47  Connection 'dbtsales.information_schema' was properly closed.
[0m10:58:47  Flushing usage events
[0m10:58:54  Running with dbt=1.5.0
[0m10:58:54  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:58:54  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:58:54  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m10:58:54  Partial parsing enabled, no changes found, skipping parsing
[0m12:38:57  Encountered an error:

[0m12:38:57  Traceback (most recent call last):
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 86, in wrapper
    result, success = func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 71, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 142, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 168, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 215, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 250, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\main.py", line 301, in docs_serve
    results = task.run()
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\task\serve.py", line 28, in run
    httpd.serve_forever()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\socketserver.py", line 232, in serve_forever
    ready = selector.select(poll_interval)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 324, in select
    r, w, _ = self._select(self._readers, self._writers, [], timeout)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 315, in _select
    r, w, x = select.select(r, w, w, timeout)
KeyboardInterrupt

[0m12:38:57  Command `dbt docs serve` failed at 14:38:57.796514 after 6003.47 seconds
[0m12:38:57  Flushing usage events
[0m12:39:05  Running with dbt=1.5.0
[0m12:39:05  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m12:39:05  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m12:39:05  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m12:39:05  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m12:39:05  1699: static parser successfully parsed customers.sql
[0m12:39:05  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m12:39:05  
[0m12:39:05  Acquiring new postgres connection 'master'
[0m12:39:05  Acquiring new postgres connection 'list_dbtsales'
[0m12:39:05  Using postgres connection "list_dbtsales"
[0m12:39:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m12:39:05  Opening a new connection, currently in state init
[0m12:39:05  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:05  On list_dbtsales: Close
[0m12:39:05  Acquiring new postgres connection 'list_dbtsales_public'
[0m12:39:05  Using postgres connection "list_dbtsales_public"
[0m12:39:05  On list_dbtsales_public: BEGIN
[0m12:39:05  Opening a new connection, currently in state init
[0m12:39:05  SQL status: BEGIN in 0.0 seconds
[0m12:39:05  Using postgres connection "list_dbtsales_public"
[0m12:39:05  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m12:39:05  SQL status: SELECT 9 in 0.0 seconds
[0m12:39:05  On list_dbtsales_public: ROLLBACK
[0m12:39:05  On list_dbtsales_public: Close
[0m12:39:05  Using postgres connection "master"
[0m12:39:05  On master: BEGIN
[0m12:39:05  Opening a new connection, currently in state init
[0m12:39:05  SQL status: BEGIN in 0.0 seconds
[0m12:39:05  Using postgres connection "master"
[0m12:39:05  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m12:39:05  SQL status: SELECT 3 in 0.0 seconds
[0m12:39:05  On master: ROLLBACK
[0m12:39:05  Using postgres connection "master"
[0m12:39:05  On master: BEGIN
[0m12:39:05  SQL status: BEGIN in 0.0 seconds
[0m12:39:05  On master: COMMIT
[0m12:39:05  Using postgres connection "master"
[0m12:39:05  On master: COMMIT
[0m12:39:05  SQL status: COMMIT in 0.0 seconds
[0m12:39:05  On master: Close
[0m12:39:05  Concurrency: 1 threads (target='dev')
[0m12:39:05  
[0m12:39:05  Began running node model.jaffle_shop.stg_customers
[0m12:39:05  1 of 6 START sql view model public.stg_customers ............................... [RUN]
[0m12:39:05  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m12:39:05  Began compiling node model.jaffle_shop.stg_customers
[0m12:39:05  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m12:39:05  Timing info for model.jaffle_shop.stg_customers (compile): 14:39:05.842450 => 14:39:05.847993
[0m12:39:05  Began executing node model.jaffle_shop.stg_customers
[0m12:39:05  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m12:39:05  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:05  On model.jaffle_shop.stg_customers: BEGIN
[0m12:39:05  Opening a new connection, currently in state init
[0m12:39:05  SQL status: BEGIN in 0.0 seconds
[0m12:39:05  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:05  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m12:39:05  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:05  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:05  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m12:39:05  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  On model.jaffle_shop.stg_customers: COMMIT
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:06  On model.jaffle_shop.stg_customers: COMMIT
[0m12:39:06  SQL status: COMMIT in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public"."stg_customers__dbt_backup" cascade
[0m12:39:06  SQL status: DROP VIEW in 0.0 seconds
[0m12:39:06  Timing info for model.jaffle_shop.stg_customers (execute): 14:39:05.854357 => 14:39:06.082194
[0m12:39:06  On model.jaffle_shop.stg_customers: Close
[0m12:39:06  1 of 6 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.25s]
[0m12:39:06  Finished running node model.jaffle_shop.stg_customers
[0m12:39:06  Began running node model.jaffle_shop.stg_orders
[0m12:39:06  2 of 6 START sql table model public.stg_orders ................................. [RUN]
[0m12:39:06  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m12:39:06  Began compiling node model.jaffle_shop.stg_orders
[0m12:39:06  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m12:39:06  Timing info for model.jaffle_shop.stg_orders (compile): 14:39:06.101291 => 14:39:06.113836
[0m12:39:06  Began executing node model.jaffle_shop.stg_orders
[0m12:39:06  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:06  On model.jaffle_shop.stg_orders: BEGIN
[0m12:39:06  Opening a new connection, currently in state closed
[0m12:39:06  SQL status: BEGIN in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:06  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m12:39:06  SQL status: SELECT 99 in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:06  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:06  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  On model.jaffle_shop.stg_orders: COMMIT
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:06  On model.jaffle_shop.stg_orders: COMMIT
[0m12:39:06  SQL status: COMMIT in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:06  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m12:39:06  SQL status: DROP TABLE in 0.0 seconds
[0m12:39:06  Timing info for model.jaffle_shop.stg_orders (execute): 14:39:06.116833 => 14:39:06.328245
[0m12:39:06  On model.jaffle_shop.stg_orders: Close
[0m12:39:06  2 of 6 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.24s]
[0m12:39:06  Finished running node model.jaffle_shop.stg_orders
[0m12:39:06  Began running node model.jaffle_shop.stg_payments
[0m12:39:06  3 of 6 START sql view model public.stg_payments ................................ [RUN]
[0m12:39:06  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m12:39:06  Began compiling node model.jaffle_shop.stg_payments
[0m12:39:06  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m12:39:06  Timing info for model.jaffle_shop.stg_payments (compile): 14:39:06.341759 => 14:39:06.351769
[0m12:39:06  Began executing node model.jaffle_shop.stg_payments
[0m12:39:06  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:06  On model.jaffle_shop.stg_payments: BEGIN
[0m12:39:06  Opening a new connection, currently in state closed
[0m12:39:06  SQL status: BEGIN in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:06  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "dbtsales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m12:39:06  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:06  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:06  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  On model.jaffle_shop.stg_payments: COMMIT
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:06  On model.jaffle_shop.stg_payments: COMMIT
[0m12:39:06  SQL status: COMMIT in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:06  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "dbtsales"."public"."stg_payments__dbt_backup" cascade
[0m12:39:06  SQL status: DROP VIEW in 0.0 seconds
[0m12:39:06  Timing info for model.jaffle_shop.stg_payments (execute): 14:39:06.354767 => 14:39:06.452850
[0m12:39:06  On model.jaffle_shop.stg_payments: Close
[0m12:39:06  3 of 6 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.12s]
[0m12:39:06  Finished running node model.jaffle_shop.stg_payments
[0m12:39:06  Began running node model.jaffle_shop.v_staging_orders
[0m12:39:06  4 of 6 START sql view model public.v_staging_orders ............................ [RUN]
[0m12:39:06  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.v_staging_orders)
[0m12:39:06  Began compiling node model.jaffle_shop.v_staging_orders
[0m12:39:06  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:06  On model.jaffle_shop.v_staging_orders: BEGIN
[0m12:39:06  Opening a new connection, currently in state closed
[0m12:39:06  SQL status: BEGIN in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:06  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m12:39:06  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:06  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m12:39:06  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:06  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m12:39:06  Timing info for model.jaffle_shop.v_staging_orders (compile): 14:39:06.471999 => 14:39:06.700264
[0m12:39:06  Began executing node model.jaffle_shop.v_staging_orders
[0m12:39:06  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m12:39:06  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:06  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "dbtsales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "dbtsales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m12:39:06  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:06  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "dbtsales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  On model.jaffle_shop.v_staging_orders: COMMIT
[0m12:39:06  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:06  On model.jaffle_shop.v_staging_orders: COMMIT
[0m12:39:06  SQL status: COMMIT in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:06  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "dbtsales"."public"."v_staging_orders__dbt_backup" cascade
[0m12:39:06  SQL status: DROP VIEW in 0.0 seconds
[0m12:39:06  Timing info for model.jaffle_shop.v_staging_orders (execute): 14:39:06.703261 => 14:39:06.766651
[0m12:39:06  On model.jaffle_shop.v_staging_orders: Close
[0m12:39:06  4 of 6 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.30s]
[0m12:39:06  Finished running node model.jaffle_shop.v_staging_orders
[0m12:39:06  Began running node model.jaffle_shop.customers
[0m12:39:06  5 of 6 START sql view model public.customers ................................... [RUN]
[0m12:39:06  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m12:39:06  Began compiling node model.jaffle_shop.customers
[0m12:39:06  Writing injected SQL for node "model.jaffle_shop.customers"
[0m12:39:06  Timing info for model.jaffle_shop.customers (compile): 14:39:06.782191 => 14:39:06.789194
[0m12:39:06  Began executing node model.jaffle_shop.customers
[0m12:39:06  Writing runtime sql for node "model.jaffle_shop.customers"
[0m12:39:06  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:06  On model.jaffle_shop.customers: BEGIN
[0m12:39:06  Opening a new connection, currently in state closed
[0m12:39:06  SQL status: BEGIN in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public"."stg_customers"

),

orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public"."stg_payments"

),



customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
[0m12:39:06  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers" rename to "customers__dbt_backup"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m12:39:06  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:06  On model.jaffle_shop.customers: COMMIT
[0m12:39:06  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:06  On model.jaffle_shop.customers: COMMIT
[0m12:39:06  SQL status: COMMIT in 0.0 seconds
[0m12:39:06  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop table if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m12:39:06  SQL status: DROP TABLE in 0.0 seconds
[0m12:39:06  Timing info for model.jaffle_shop.customers (execute): 14:39:06.792192 => 14:39:06.939920
[0m12:39:06  On model.jaffle_shop.customers: Close
[0m12:39:06  5 of 6 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.17s]
[0m12:39:06  Finished running node model.jaffle_shop.customers
[0m12:39:06  Began running node model.jaffle_shop.orders
[0m12:39:06  6 of 6 START sql table model public.orders ..................................... [RUN]
[0m12:39:06  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m12:39:06  Began compiling node model.jaffle_shop.orders
[0m12:39:06  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:06  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

    
    select distinct
    payment_method
    from "dbtsales"."public"."raw_payments"
    order by 1

  
[0m12:39:06  Opening a new connection, currently in state closed
[0m12:39:07  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:07  Writing injected SQL for node "model.jaffle_shop.orders"
[0m12:39:07  Timing info for model.jaffle_shop.orders (compile): 14:39:06.956346 => 14:39:07.006832
[0m12:39:07  Began executing node model.jaffle_shop.orders
[0m12:39:07  Writing runtime sql for node "model.jaffle_shop.orders"
[0m12:39:07  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:07  On model.jaffle_shop.orders: BEGIN
[0m12:39:07  SQL status: BEGIN in 0.0 seconds
[0m12:39:07  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:07  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "dbtsales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    --Set the payment methods in a variable to use later in a for loop


with orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        --use the variable specified at the top of this model
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        
        --remove trailling , that may cause double comma errors--end for loop
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.bank_transfer_amount,

        order_payments.coupon_amount,

        order_payments.credit_card_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m12:39:07  SQL status: SELECT 99 in 0.0 seconds
[0m12:39:07  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:07  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "dbtsales"."public"."orders" rename to "orders__dbt_backup"
[0m12:39:07  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:07  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:07  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "dbtsales"."public"."orders__dbt_tmp" rename to "orders"
[0m12:39:07  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:07  On model.jaffle_shop.orders: COMMIT
[0m12:39:07  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:07  On model.jaffle_shop.orders: COMMIT
[0m12:39:07  SQL status: COMMIT in 0.0 seconds
[0m12:39:07  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:07  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "dbtsales"."public"."orders__dbt_backup" cascade
[0m12:39:07  SQL status: DROP TABLE in 0.0 seconds
[0m12:39:07  Timing info for model.jaffle_shop.orders (execute): 14:39:07.009824 => 14:39:07.105162
[0m12:39:07  On model.jaffle_shop.orders: Close
[0m12:39:07  6 of 6 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.15s]
[0m12:39:07  Finished running node model.jaffle_shop.orders
[0m12:39:07  Using postgres connection "master"
[0m12:39:07  On master: BEGIN
[0m12:39:07  Opening a new connection, currently in state closed
[0m12:39:07  SQL status: BEGIN in 0.0 seconds
[0m12:39:07  On master: COMMIT
[0m12:39:07  Using postgres connection "master"
[0m12:39:07  On master: COMMIT
[0m12:39:07  SQL status: COMMIT in 0.0 seconds
[0m12:39:07  On master: Close
[0m12:39:07  Connection 'master' was properly closed.
[0m12:39:07  Connection 'list_dbtsales' was properly closed.
[0m12:39:07  Connection 'list_dbtsales_public' was properly closed.
[0m12:39:07  Connection 'model.jaffle_shop.orders' was properly closed.
[0m12:39:07  
[0m12:39:07  Finished running 4 view models, 2 table models in 0 hours 0 minutes and 1.59 seconds (1.59s).
[0m12:39:07  Command end result
[0m12:39:07  
[0m12:39:07  [32mCompleted successfully[0m
[0m12:39:07  
[0m12:39:07  Done. PASS=6 WARN=0 ERROR=0 SKIP=0 TOTAL=6
[0m12:39:07  Command `dbt run` succeeded at 14:39:07.203894 after 2.14 seconds
[0m12:39:07  Flushing usage events
[0m12:39:22  Running with dbt=1.5.0
[0m12:39:22  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m12:39:22  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m12:39:22  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m12:39:22  Partial parsing enabled, no changes found, skipping parsing
[0m12:39:22  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m12:39:22  
[0m12:39:22  Acquiring new postgres connection 'master'
[0m12:39:22  Acquiring new postgres connection 'list_dbtsales'
[0m12:39:22  Using postgres connection "list_dbtsales"
[0m12:39:22  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m12:39:22  Opening a new connection, currently in state init
[0m12:39:22  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:22  On list_dbtsales: Close
[0m12:39:22  Acquiring new postgres connection 'list_dbtsales_public'
[0m12:39:22  Using postgres connection "list_dbtsales_public"
[0m12:39:22  On list_dbtsales_public: BEGIN
[0m12:39:22  Opening a new connection, currently in state init
[0m12:39:22  SQL status: BEGIN in 0.0 seconds
[0m12:39:22  Using postgres connection "list_dbtsales_public"
[0m12:39:22  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m12:39:22  SQL status: SELECT 9 in 0.0 seconds
[0m12:39:22  On list_dbtsales_public: ROLLBACK
[0m12:39:22  On list_dbtsales_public: Close
[0m12:39:22  Using postgres connection "master"
[0m12:39:22  On master: BEGIN
[0m12:39:22  Opening a new connection, currently in state init
[0m12:39:22  SQL status: BEGIN in 0.0 seconds
[0m12:39:22  Using postgres connection "master"
[0m12:39:22  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m12:39:22  SQL status: SELECT 6 in 0.0 seconds
[0m12:39:22  On master: ROLLBACK
[0m12:39:22  Using postgres connection "master"
[0m12:39:22  On master: BEGIN
[0m12:39:22  SQL status: BEGIN in 0.0 seconds
[0m12:39:22  On master: COMMIT
[0m12:39:22  Using postgres connection "master"
[0m12:39:22  On master: COMMIT
[0m12:39:22  SQL status: COMMIT in 0.0 seconds
[0m12:39:22  On master: Close
[0m12:39:22  Concurrency: 1 threads (target='dev')
[0m12:39:22  
[0m12:39:22  Began running node model.jaffle_shop.stg_customers
[0m12:39:22  1 of 6 START sql view model public.stg_customers ............................... [RUN]
[0m12:39:22  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m12:39:22  Began compiling node model.jaffle_shop.stg_customers
[0m12:39:22  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m12:39:22  Timing info for model.jaffle_shop.stg_customers (compile): 14:39:22.483919 => 14:39:22.488928
[0m12:39:22  Began executing node model.jaffle_shop.stg_customers
[0m12:39:22  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:22  On model.jaffle_shop.stg_customers: BEGIN
[0m12:39:22  Opening a new connection, currently in state init
[0m12:39:22  SQL status: BEGIN in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:22  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m12:39:22  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:22  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m12:39:22  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:22  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m12:39:22  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:22  On model.jaffle_shop.stg_customers: COMMIT
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:22  On model.jaffle_shop.stg_customers: COMMIT
[0m12:39:22  SQL status: COMMIT in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_customers"
[0m12:39:22  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public"."stg_customers__dbt_backup" cascade
[0m12:39:22  SQL status: DROP VIEW in 0.0 seconds
[0m12:39:22  Timing info for model.jaffle_shop.stg_customers (execute): 14:39:22.491279 => 14:39:22.634683
[0m12:39:22  On model.jaffle_shop.stg_customers: Close
[0m12:39:22  1 of 6 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.16s]
[0m12:39:22  Finished running node model.jaffle_shop.stg_customers
[0m12:39:22  Began running node model.jaffle_shop.stg_orders
[0m12:39:22  2 of 6 START sql table model public.stg_orders ................................. [RUN]
[0m12:39:22  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m12:39:22  Began compiling node model.jaffle_shop.stg_orders
[0m12:39:22  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m12:39:22  Timing info for model.jaffle_shop.stg_orders (compile): 14:39:22.647200 => 14:39:22.651199
[0m12:39:22  Began executing node model.jaffle_shop.stg_orders
[0m12:39:22  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:22  On model.jaffle_shop.stg_orders: BEGIN
[0m12:39:22  Opening a new connection, currently in state closed
[0m12:39:22  SQL status: BEGIN in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:22  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m12:39:22  SQL status: SELECT 99 in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:22  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m12:39:22  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:22  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m12:39:22  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:22  On model.jaffle_shop.stg_orders: COMMIT
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:22  On model.jaffle_shop.stg_orders: COMMIT
[0m12:39:22  SQL status: COMMIT in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_orders"
[0m12:39:22  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m12:39:22  SQL status: DROP TABLE in 0.0 seconds
[0m12:39:22  Timing info for model.jaffle_shop.stg_orders (execute): 14:39:22.653201 => 14:39:22.753476
[0m12:39:22  On model.jaffle_shop.stg_orders: Close
[0m12:39:22  2 of 6 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.11s]
[0m12:39:22  Finished running node model.jaffle_shop.stg_orders
[0m12:39:22  Began running node model.jaffle_shop.stg_payments
[0m12:39:22  3 of 6 START sql view model public.stg_payments ................................ [RUN]
[0m12:39:22  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m12:39:22  Began compiling node model.jaffle_shop.stg_payments
[0m12:39:22  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m12:39:22  Timing info for model.jaffle_shop.stg_payments (compile): 14:39:22.766473 => 14:39:22.770475
[0m12:39:22  Began executing node model.jaffle_shop.stg_payments
[0m12:39:22  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:22  On model.jaffle_shop.stg_payments: BEGIN
[0m12:39:22  Opening a new connection, currently in state closed
[0m12:39:22  SQL status: BEGIN in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:22  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "dbtsales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m12:39:22  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:22  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m12:39:22  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:22  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m12:39:22  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:22  On model.jaffle_shop.stg_payments: COMMIT
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:22  On model.jaffle_shop.stg_payments: COMMIT
[0m12:39:22  SQL status: COMMIT in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.stg_payments"
[0m12:39:22  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "dbtsales"."public"."stg_payments__dbt_backup" cascade
[0m12:39:22  SQL status: DROP VIEW in 0.0 seconds
[0m12:39:22  Timing info for model.jaffle_shop.stg_payments (execute): 14:39:22.772473 => 14:39:22.876563
[0m12:39:22  On model.jaffle_shop.stg_payments: Close
[0m12:39:22  3 of 6 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.12s]
[0m12:39:22  Finished running node model.jaffle_shop.stg_payments
[0m12:39:22  Began running node model.jaffle_shop.v_staging_orders
[0m12:39:22  4 of 6 START sql view model public.v_staging_orders ............................ [RUN]
[0m12:39:22  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.v_staging_orders)
[0m12:39:22  Began compiling node model.jaffle_shop.v_staging_orders
[0m12:39:22  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:22  On model.jaffle_shop.v_staging_orders: BEGIN
[0m12:39:22  Opening a new connection, currently in state closed
[0m12:39:22  SQL status: BEGIN in 0.0 seconds
[0m12:39:22  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:22  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m12:39:22  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m12:39:23  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:23  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m12:39:23  Timing info for model.jaffle_shop.v_staging_orders (compile): 14:39:22.893790 => 14:39:23.072062
[0m12:39:23  Began executing node model.jaffle_shop.v_staging_orders
[0m12:39:23  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m12:39:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "dbtsales"."public"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "dbtsales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m12:39:23  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "dbtsales"."public"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m12:39:23  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:23  On model.jaffle_shop.v_staging_orders: COMMIT
[0m12:39:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:23  On model.jaffle_shop.v_staging_orders: COMMIT
[0m12:39:23  SQL status: COMMIT in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m12:39:23  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "dbtsales"."public"."v_staging_orders__dbt_backup" cascade
[0m12:39:23  SQL status: DROP VIEW in 0.0 seconds
[0m12:39:23  Timing info for model.jaffle_shop.v_staging_orders (execute): 14:39:23.075077 => 14:39:23.121066
[0m12:39:23  On model.jaffle_shop.v_staging_orders: Close
[0m12:39:23  4 of 6 OK created sql view model public.v_staging_orders ....................... [[32mCREATE VIEW[0m in 0.23s]
[0m12:39:23  Finished running node model.jaffle_shop.v_staging_orders
[0m12:39:23  Began running node model.jaffle_shop.customers
[0m12:39:23  5 of 6 START sql view model public.customers ................................... [RUN]
[0m12:39:23  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m12:39:23  Began compiling node model.jaffle_shop.customers
[0m12:39:23  Writing injected SQL for node "model.jaffle_shop.customers"
[0m12:39:23  Timing info for model.jaffle_shop.customers (compile): 14:39:23.133072 => 14:39:23.138073
[0m12:39:23  Began executing node model.jaffle_shop.customers
[0m12:39:23  Writing runtime sql for node "model.jaffle_shop.customers"
[0m12:39:23  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:23  On model.jaffle_shop.customers: BEGIN
[0m12:39:23  Opening a new connection, currently in state closed
[0m12:39:23  SQL status: BEGIN in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:23  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public"."stg_customers"

),

orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public"."stg_payments"

),



customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
[0m12:39:23  SQL status: CREATE VIEW in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:23  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m12:39:23  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:23  On model.jaffle_shop.customers: COMMIT
[0m12:39:23  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:23  On model.jaffle_shop.customers: COMMIT
[0m12:39:23  SQL status: COMMIT in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.customers"
[0m12:39:23  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m12:39:23  SQL status: DROP VIEW in 0.0 seconds
[0m12:39:23  Timing info for model.jaffle_shop.customers (execute): 14:39:23.140073 => 14:39:23.207614
[0m12:39:23  On model.jaffle_shop.customers: Close
[0m12:39:23  5 of 6 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.08s]
[0m12:39:23  Finished running node model.jaffle_shop.customers
[0m12:39:23  Began running node model.jaffle_shop.orders
[0m12:39:23  6 of 6 START sql table model public.orders ..................................... [RUN]
[0m12:39:23  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m12:39:23  Began compiling node model.jaffle_shop.orders
[0m12:39:23  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:23  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

    
    select distinct
    payment_method
    from "dbtsales"."public"."raw_payments"
    order by 1

  
[0m12:39:23  Opening a new connection, currently in state closed
[0m12:39:23  SQL status: SELECT 4 in 0.0 seconds
[0m12:39:23  Writing injected SQL for node "model.jaffle_shop.orders"
[0m12:39:23  Timing info for model.jaffle_shop.orders (compile): 14:39:23.218620 => 14:39:23.262880
[0m12:39:23  Began executing node model.jaffle_shop.orders
[0m12:39:23  Writing runtime sql for node "model.jaffle_shop.orders"
[0m12:39:23  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:23  On model.jaffle_shop.orders: BEGIN
[0m12:39:23  SQL status: BEGIN in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:23  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "dbtsales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    --Set the payment methods in a variable to use later in a for loop


with orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        --use the variable specified at the top of this model
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        
        --remove trailling , that may cause double comma errors--end for loop
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.bank_transfer_amount,

        order_payments.coupon_amount,

        order_payments.credit_card_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m12:39:23  SQL status: SELECT 99 in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:23  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "dbtsales"."public"."orders" rename to "orders__dbt_backup"
[0m12:39:23  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:23  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "dbtsales"."public"."orders__dbt_tmp" rename to "orders"
[0m12:39:23  SQL status: ALTER TABLE in 0.0 seconds
[0m12:39:23  On model.jaffle_shop.orders: COMMIT
[0m12:39:23  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:23  On model.jaffle_shop.orders: COMMIT
[0m12:39:23  SQL status: COMMIT in 0.0 seconds
[0m12:39:23  Using postgres connection "model.jaffle_shop.orders"
[0m12:39:23  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "dbtsales"."public"."orders__dbt_backup" cascade
[0m12:39:23  SQL status: DROP TABLE in 0.0 seconds
[0m12:39:23  Timing info for model.jaffle_shop.orders (execute): 14:39:23.265249 => 14:39:23.334003
[0m12:39:23  On model.jaffle_shop.orders: Close
[0m12:39:23  6 of 6 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.12s]
[0m12:39:23  Finished running node model.jaffle_shop.orders
[0m12:39:23  Using postgres connection "master"
[0m12:39:23  On master: BEGIN
[0m12:39:23  Opening a new connection, currently in state closed
[0m12:39:23  SQL status: BEGIN in 0.0 seconds
[0m12:39:23  On master: COMMIT
[0m12:39:23  Using postgres connection "master"
[0m12:39:23  On master: COMMIT
[0m12:39:23  SQL status: COMMIT in 0.0 seconds
[0m12:39:23  On master: Close
[0m12:39:23  Connection 'master' was properly closed.
[0m12:39:23  Connection 'list_dbtsales' was properly closed.
[0m12:39:23  Connection 'list_dbtsales_public' was properly closed.
[0m12:39:23  Connection 'model.jaffle_shop.orders' was properly closed.
[0m12:39:23  
[0m12:39:23  Finished running 4 view models, 2 table models in 0 hours 0 minutes and 1.06 seconds (1.06s).
[0m12:39:23  Command end result
[0m12:39:23  
[0m12:39:23  [32mCompleted successfully[0m
[0m12:39:23  
[0m12:39:23  Done. PASS=6 WARN=0 ERROR=0 SKIP=0 TOTAL=6
[0m12:39:23  Command `dbt run` succeeded at 14:39:23.404163 after 1.39 seconds
[0m12:39:23  Flushing usage events
[0m13:50:12  Running with dbt=1.5.4
[0m13:50:12  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m13:50:12  Registered adapter: postgres=1.5.4
[0m13:50:12  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m13:50:12  Unable to do partial parsing because of a version mismatch
[0m13:50:16  1699: static parser successfully parsed customers.sql
[0m13:50:16  1603: static parser failed on orders.sql
[0m13:50:16  1602: parser fallback to jinja rendering on orders.sql
[0m13:50:16  1699: static parser successfully parsed raw_stage\stg_orders.sql
[0m13:50:16  1699: static parser successfully parsed staging\stg_customers.sql
[0m13:50:16  1699: static parser successfully parsed staging\stg_payments.sql
[0m13:50:16  1603: static parser failed on staging\v_staging_orders.sql
[0m13:50:16  1602: parser fallback to jinja rendering on staging\v_staging_orders.sql
[0m13:50:16  Found 6 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m13:50:16  
[0m13:50:16  Acquiring new postgres connection 'master'
[0m13:50:16  Acquiring new postgres connection 'list_dbtsales'
[0m13:50:17  Using postgres connection "list_dbtsales"
[0m13:50:17  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m13:50:17  Opening a new connection, currently in state init
[0m13:50:17  SQL status: SELECT 4 in 0.0 seconds
[0m13:50:17  On list_dbtsales: Close
[0m13:50:17  Using postgres connection "list_dbtsales"
[0m13:50:17  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m13:50:17  Opening a new connection, currently in state closed
[0m13:50:17  SQL status: SELECT 4 in 0.0 seconds
[0m13:50:17  On list_dbtsales: Close
[0m13:50:17  Re-using an available connection from the pool (formerly list_dbtsales, now create_dbtsales_public_stg)
[0m13:50:17  Creating schema "database: "dbtsales"
schema: "public_stg"
"
[0m13:50:17  Using postgres connection "create_dbtsales_public_stg"
[0m13:50:17  On create_dbtsales_public_stg: BEGIN
[0m13:50:17  Opening a new connection, currently in state closed
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  Using postgres connection "create_dbtsales_public_stg"
[0m13:50:17  On create_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "create_dbtsales_public_stg"} */
create schema if not exists "public_stg"
[0m13:50:17  SQL status: CREATE SCHEMA in 0.0 seconds
[0m13:50:17  On create_dbtsales_public_stg: COMMIT
[0m13:50:17  Using postgres connection "create_dbtsales_public_stg"
[0m13:50:17  On create_dbtsales_public_stg: COMMIT
[0m13:50:17  SQL status: COMMIT in 0.0 seconds
[0m13:50:17  On create_dbtsales_public_stg: Close
[0m13:50:17  Acquiring new postgres connection 'list_dbtsales_public'
[0m13:50:17  Using postgres connection "list_dbtsales_public"
[0m13:50:17  On list_dbtsales_public: BEGIN
[0m13:50:17  Opening a new connection, currently in state init
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  Using postgres connection "list_dbtsales_public"
[0m13:50:17  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m13:50:17  SQL status: SELECT 9 in 0.0 seconds
[0m13:50:17  On list_dbtsales_public: ROLLBACK
[0m13:50:17  On list_dbtsales_public: Close
[0m13:50:17  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m13:50:17  Using postgres connection "list_dbtsales_public_stg"
[0m13:50:17  On list_dbtsales_public_stg: BEGIN
[0m13:50:17  Opening a new connection, currently in state closed
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  Using postgres connection "list_dbtsales_public_stg"
[0m13:50:17  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m13:50:17  SQL status: SELECT 0 in 0.0 seconds
[0m13:50:17  On list_dbtsales_public_stg: ROLLBACK
[0m13:50:17  On list_dbtsales_public_stg: Close
[0m13:50:17  Using postgres connection "master"
[0m13:50:17  On master: BEGIN
[0m13:50:17  Opening a new connection, currently in state init
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  Using postgres connection "master"
[0m13:50:17  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m13:50:17  SQL status: SELECT 6 in 0.0 seconds
[0m13:50:17  On master: ROLLBACK
[0m13:50:17  Using postgres connection "master"
[0m13:50:17  On master: BEGIN
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  On master: COMMIT
[0m13:50:17  Using postgres connection "master"
[0m13:50:17  On master: COMMIT
[0m13:50:17  SQL status: COMMIT in 0.0 seconds
[0m13:50:17  On master: Close
[0m13:50:17  Concurrency: 1 threads (target='dev')
[0m13:50:17  
[0m13:50:17  Began running node model.jaffle_shop.stg_customers
[0m13:50:17  1 of 6 START sql view model public_stg.stg_customers ........................... [RUN]
[0m13:50:17  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m13:50:17  Began compiling node model.jaffle_shop.stg_customers
[0m13:50:17  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m13:50:17  Timing info for model.jaffle_shop.stg_customers (compile): 15:50:17.462938 => 15:50:17.469939
[0m13:50:17  Began executing node model.jaffle_shop.stg_customers
[0m13:50:17  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_customers"
[0m13:50:17  On model.jaffle_shop.stg_customers: BEGIN
[0m13:50:17  Opening a new connection, currently in state init
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_customers"
[0m13:50:17  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m13:50:17  SQL status: CREATE VIEW in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_customers"
[0m13:50:17  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m13:50:17  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:17  On model.jaffle_shop.stg_customers: COMMIT
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_customers"
[0m13:50:17  On model.jaffle_shop.stg_customers: COMMIT
[0m13:50:17  SQL status: COMMIT in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_customers"
[0m13:50:17  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m13:50:17  SQL status: DROP VIEW in 0.0 seconds
[0m13:50:17  Timing info for model.jaffle_shop.stg_customers (execute): 15:50:17.472936 => 15:50:17.652083
[0m13:50:17  On model.jaffle_shop.stg_customers: Close
[0m13:50:17  1 of 6 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.20s]
[0m13:50:17  Finished running node model.jaffle_shop.stg_customers
[0m13:50:17  Began running node model.jaffle_shop.stg_orders
[0m13:50:17  2 of 6 START sql table model public.stg_orders ................................. [RUN]
[0m13:50:17  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m13:50:17  Began compiling node model.jaffle_shop.stg_orders
[0m13:50:17  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m13:50:17  Timing info for model.jaffle_shop.stg_orders (compile): 15:50:17.665662 => 15:50:17.674169
[0m13:50:17  Began executing node model.jaffle_shop.stg_orders
[0m13:50:17  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_orders"
[0m13:50:17  On model.jaffle_shop.stg_orders: BEGIN
[0m13:50:17  Opening a new connection, currently in state closed
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_orders"
[0m13:50:17  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m13:50:17  SQL status: SELECT 99 in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_orders"
[0m13:50:17  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m13:50:17  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_orders"
[0m13:50:17  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m13:50:17  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:17  On model.jaffle_shop.stg_orders: COMMIT
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_orders"
[0m13:50:17  On model.jaffle_shop.stg_orders: COMMIT
[0m13:50:17  SQL status: COMMIT in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_orders"
[0m13:50:17  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m13:50:17  SQL status: DROP TABLE in 0.0 seconds
[0m13:50:17  Timing info for model.jaffle_shop.stg_orders (execute): 15:50:17.677037 => 15:50:17.832525
[0m13:50:17  On model.jaffle_shop.stg_orders: Close
[0m13:50:17  2 of 6 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.17s]
[0m13:50:17  Finished running node model.jaffle_shop.stg_orders
[0m13:50:17  Began running node model.jaffle_shop.stg_payments
[0m13:50:17  3 of 6 START sql view model public_stg.stg_payments ............................ [RUN]
[0m13:50:17  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m13:50:17  Began compiling node model.jaffle_shop.stg_payments
[0m13:50:17  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m13:50:17  Timing info for model.jaffle_shop.stg_payments (compile): 15:50:17.846500 => 15:50:17.855055
[0m13:50:17  Began executing node model.jaffle_shop.stg_payments
[0m13:50:17  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_payments"
[0m13:50:17  On model.jaffle_shop.stg_payments: BEGIN
[0m13:50:17  Opening a new connection, currently in state closed
[0m13:50:17  SQL status: BEGIN in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_payments"
[0m13:50:17  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "dbtsales"."public_stg"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m13:50:17  SQL status: CREATE VIEW in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_payments"
[0m13:50:17  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public_stg"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m13:50:17  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:17  On model.jaffle_shop.stg_payments: COMMIT
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_payments"
[0m13:50:17  On model.jaffle_shop.stg_payments: COMMIT
[0m13:50:17  SQL status: COMMIT in 0.0 seconds
[0m13:50:17  Using postgres connection "model.jaffle_shop.stg_payments"
[0m13:50:17  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "dbtsales"."public_stg"."stg_payments__dbt_backup" cascade
[0m13:50:17  SQL status: DROP VIEW in 0.0 seconds
[0m13:50:17  Timing info for model.jaffle_shop.stg_payments (execute): 15:50:17.858566 => 15:50:17.954296
[0m13:50:17  On model.jaffle_shop.stg_payments: Close
[0m13:50:17  3 of 6 OK created sql view model public_stg.stg_payments ....................... [[32mCREATE VIEW[0m in 0.11s]
[0m13:50:17  Finished running node model.jaffle_shop.stg_payments
[0m13:50:17  Began running node model.jaffle_shop.v_staging_orders
[0m13:50:17  4 of 6 START sql view model public_stg.v_staging_orders ........................ [RUN]
[0m13:50:17  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.v_staging_orders)
[0m13:50:17  Began compiling node model.jaffle_shop.v_staging_orders
[0m13:50:17  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m13:50:17  On model.jaffle_shop.v_staging_orders: BEGIN
[0m13:50:17  Opening a new connection, currently in state closed
[0m13:50:18  SQL status: BEGIN in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m13:50:18  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m13:50:18  SQL status: SELECT 4 in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m13:50:18  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m13:50:18  SQL status: SELECT 4 in 0.0 seconds
[0m13:50:18  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m13:50:18  Timing info for model.jaffle_shop.v_staging_orders (compile): 15:50:17.970557 => 15:50:18.077170
[0m13:50:18  Began executing node model.jaffle_shop.v_staging_orders
[0m13:50:18  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m13:50:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m13:50:18  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "dbtsales"."public_stg"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "dbtsales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m13:50:18  SQL status: CREATE VIEW in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m13:50:18  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "dbtsales"."public_stg"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m13:50:18  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:18  On model.jaffle_shop.v_staging_orders: COMMIT
[0m13:50:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m13:50:18  On model.jaffle_shop.v_staging_orders: COMMIT
[0m13:50:18  SQL status: COMMIT in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m13:50:18  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "dbtsales"."public_stg"."v_staging_orders__dbt_backup" cascade
[0m13:50:18  SQL status: DROP VIEW in 0.0 seconds
[0m13:50:18  Timing info for model.jaffle_shop.v_staging_orders (execute): 15:50:18.081601 => 15:50:18.157854
[0m13:50:18  On model.jaffle_shop.v_staging_orders: Close
[0m13:50:18  4 of 6 OK created sql view model public_stg.v_staging_orders ................... [[32mCREATE VIEW[0m in 0.20s]
[0m13:50:18  Finished running node model.jaffle_shop.v_staging_orders
[0m13:50:18  Began running node model.jaffle_shop.customers
[0m13:50:18  5 of 6 START sql view model public.customers ................................... [RUN]
[0m13:50:18  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m13:50:18  Began compiling node model.jaffle_shop.customers
[0m13:50:18  Writing injected SQL for node "model.jaffle_shop.customers"
[0m13:50:18  Timing info for model.jaffle_shop.customers (compile): 15:50:18.175568 => 15:50:18.187749
[0m13:50:18  Began executing node model.jaffle_shop.customers
[0m13:50:18  Writing runtime sql for node "model.jaffle_shop.customers"
[0m13:50:18  Using postgres connection "model.jaffle_shop.customers"
[0m13:50:18  On model.jaffle_shop.customers: BEGIN
[0m13:50:18  Opening a new connection, currently in state closed
[0m13:50:18  SQL status: BEGIN in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.customers"
[0m13:50:18  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),

orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public_stg"."stg_payments"

),



customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
[0m13:50:18  SQL status: CREATE VIEW in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.customers"
[0m13:50:18  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m13:50:18  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:18  On model.jaffle_shop.customers: COMMIT
[0m13:50:18  Using postgres connection "model.jaffle_shop.customers"
[0m13:50:18  On model.jaffle_shop.customers: COMMIT
[0m13:50:18  SQL status: COMMIT in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.customers"
[0m13:50:18  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m13:50:18  SQL status: DROP VIEW in 0.0 seconds
[0m13:50:18  Timing info for model.jaffle_shop.customers (execute): 15:50:18.190748 => 15:50:18.284517
[0m13:50:18  On model.jaffle_shop.customers: Close
[0m13:50:18  5 of 6 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.12s]
[0m13:50:18  Finished running node model.jaffle_shop.customers
[0m13:50:18  Began running node model.jaffle_shop.orders
[0m13:50:18  6 of 6 START sql table model public.orders ..................................... [RUN]
[0m13:50:18  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m13:50:18  Began compiling node model.jaffle_shop.orders
[0m13:50:18  Using postgres connection "model.jaffle_shop.orders"
[0m13:50:18  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

    
    select distinct
    payment_method
    from "dbtsales"."public"."raw_payments"
    order by 1

  
[0m13:50:18  Opening a new connection, currently in state closed
[0m13:50:18  SQL status: SELECT 4 in 0.0 seconds
[0m13:50:18  Writing injected SQL for node "model.jaffle_shop.orders"
[0m13:50:18  Timing info for model.jaffle_shop.orders (compile): 15:50:18.296625 => 15:50:18.333634
[0m13:50:18  Began executing node model.jaffle_shop.orders
[0m13:50:18  Writing runtime sql for node "model.jaffle_shop.orders"
[0m13:50:18  Using postgres connection "model.jaffle_shop.orders"
[0m13:50:18  On model.jaffle_shop.orders: BEGIN
[0m13:50:18  SQL status: BEGIN in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.orders"
[0m13:50:18  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "dbtsales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    --Set the payment methods in a variable to use later in a for loop


with orders as (

    select * from "dbtsales"."public"."stg_orders"

),

payments as (

    select * from "dbtsales"."public_stg"."stg_payments"

),

order_payments as (

    select
        order_id,

        --use the variable specified at the top of this model
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        
        --remove trailling , that may cause double comma errors,--end for loop
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        
        --remove trailling , that may cause double comma errors--end for loop
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.bank_transfer_amount,

        order_payments.coupon_amount,

        order_payments.credit_card_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m13:50:18  SQL status: SELECT 99 in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.orders"
[0m13:50:18  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "dbtsales"."public"."orders" rename to "orders__dbt_backup"
[0m13:50:18  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.orders"
[0m13:50:18  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "dbtsales"."public"."orders__dbt_tmp" rename to "orders"
[0m13:50:18  SQL status: ALTER TABLE in 0.0 seconds
[0m13:50:18  On model.jaffle_shop.orders: COMMIT
[0m13:50:18  Using postgres connection "model.jaffle_shop.orders"
[0m13:50:18  On model.jaffle_shop.orders: COMMIT
[0m13:50:18  SQL status: COMMIT in 0.0 seconds
[0m13:50:18  Using postgres connection "model.jaffle_shop.orders"
[0m13:50:18  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "dbtsales"."public"."orders__dbt_backup" cascade
[0m13:50:18  SQL status: DROP TABLE in 0.0 seconds
[0m13:50:18  Timing info for model.jaffle_shop.orders (execute): 15:50:18.336626 => 15:50:18.454151
[0m13:50:18  On model.jaffle_shop.orders: Close
[0m13:50:18  6 of 6 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.16s]
[0m13:50:18  Finished running node model.jaffle_shop.orders
[0m13:50:18  Using postgres connection "master"
[0m13:50:18  On master: BEGIN
[0m13:50:18  Opening a new connection, currently in state closed
[0m13:50:18  SQL status: BEGIN in 0.0 seconds
[0m13:50:18  On master: COMMIT
[0m13:50:18  Using postgres connection "master"
[0m13:50:18  On master: COMMIT
[0m13:50:18  SQL status: COMMIT in 0.0 seconds
[0m13:50:18  On master: Close
[0m13:50:18  Connection 'master' was properly closed.
[0m13:50:18  Connection 'create_dbtsales_public_stg' was properly closed.
[0m13:50:18  Connection 'list_dbtsales_public_stg' was properly closed.
[0m13:50:18  Connection 'model.jaffle_shop.orders' was properly closed.
[0m13:50:18  
[0m13:50:18  Finished running 4 view models, 2 table models in 0 hours 0 minutes and 1.52 seconds (1.52s).
[0m13:50:18  Command end result
[0m13:50:18  
[0m13:50:18  [32mCompleted successfully[0m
[0m13:50:18  
[0m13:50:18  Done. PASS=6 WARN=0 ERROR=0 SKIP=0 TOTAL=6
[0m13:50:18  Command `dbt run` succeeded at 15:50:18.527517 after 5.91 seconds
[0m13:50:18  Flushing usage events
[0m17:09:06  Running with dbt=1.5.4
[0m17:09:06  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:09:06  Registered adapter: postgres=1.5.4
[0m17:09:06  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:09:06  Partial parsing enabled: 0 files deleted, 1 files added, 1 files changed.
[0m17:09:06  Partial parsing: added file: jaffle_shop://models\source\raw_sales.sql
[0m17:09:06  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:09:06  1699: static parser successfully parsed source\raw_sales.sql
[0m17:09:06  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:09:06  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:09:06  
[0m17:09:06  Acquiring new postgres connection 'master'
[0m17:09:06  Acquiring new postgres connection 'list_dbtsales'
[0m17:09:06  Using postgres connection "list_dbtsales"
[0m17:09:06  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:09:06  Opening a new connection, currently in state init
[0m17:09:06  SQL status: SELECT 5 in 0.0 seconds
[0m17:09:06  On list_dbtsales: Close
[0m17:09:06  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:09:06  Using postgres connection "list_dbtsales_public"
[0m17:09:06  On list_dbtsales_public: BEGIN
[0m17:09:06  Opening a new connection, currently in state init
[0m17:09:06  SQL status: BEGIN in 0.0 seconds
[0m17:09:06  Using postgres connection "list_dbtsales_public"
[0m17:09:06  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:09:06  SQL status: SELECT 9 in 0.0 seconds
[0m17:09:06  On list_dbtsales_public: ROLLBACK
[0m17:09:06  On list_dbtsales_public: Close
[0m17:09:06  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:09:06  Using postgres connection "list_dbtsales_public_stg"
[0m17:09:06  On list_dbtsales_public_stg: BEGIN
[0m17:09:06  Opening a new connection, currently in state closed
[0m17:09:06  SQL status: BEGIN in 0.0 seconds
[0m17:09:06  Using postgres connection "list_dbtsales_public_stg"
[0m17:09:06  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:09:06  SQL status: SELECT 3 in 0.0 seconds
[0m17:09:06  On list_dbtsales_public_stg: ROLLBACK
[0m17:09:06  On list_dbtsales_public_stg: Close
[0m17:09:06  Using postgres connection "master"
[0m17:09:06  On master: BEGIN
[0m17:09:06  Opening a new connection, currently in state init
[0m17:09:06  SQL status: BEGIN in 0.0 seconds
[0m17:09:06  Using postgres connection "master"
[0m17:09:06  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:09:06  SQL status: SELECT 8 in 0.0 seconds
[0m17:09:06  On master: ROLLBACK
[0m17:09:06  Using postgres connection "master"
[0m17:09:06  On master: BEGIN
[0m17:09:06  SQL status: BEGIN in 0.0 seconds
[0m17:09:06  On master: COMMIT
[0m17:09:06  Using postgres connection "master"
[0m17:09:06  On master: COMMIT
[0m17:09:06  SQL status: COMMIT in 0.0 seconds
[0m17:09:06  On master: Close
[0m17:09:06  Concurrency: 1 threads (target='dev')
[0m17:09:06  
[0m17:09:06  Began running node model.jaffle_shop.raw_sales
[0m17:09:06  1 of 1 START sql table model public.raw_sales .................................. [RUN]
[0m17:09:06  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m17:09:06  Began compiling node model.jaffle_shop.raw_sales
[0m17:09:06  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m17:09:06  Timing info for model.jaffle_shop.raw_sales (compile): 19:09:06.899089 => 19:09:06.904597
[0m17:09:06  Began executing node model.jaffle_shop.raw_sales
[0m17:09:06  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m17:09:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:09:06  On model.jaffle_shop.raw_sales: BEGIN
[0m17:09:06  Opening a new connection, currently in state init
[0m17:09:06  SQL status: BEGIN in 0.0 seconds
[0m17:09:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:09:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from stgsales
  );
  
[0m17:09:07  SQL status: SELECT 2823 in 0.0 seconds
[0m17:09:07  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:09:07  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m17:09:07  SQL status: ALTER TABLE in 0.0 seconds
[0m17:09:07  On model.jaffle_shop.raw_sales: COMMIT
[0m17:09:07  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:09:07  On model.jaffle_shop.raw_sales: COMMIT
[0m17:09:07  SQL status: COMMIT in 0.0 seconds
[0m17:09:07  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:09:07  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m17:09:07  SQL status: DROP TABLE in 0.0 seconds
[0m17:09:07  Timing info for model.jaffle_shop.raw_sales (execute): 19:09:06.908615 => 19:09:07.124515
[0m17:09:07  On model.jaffle_shop.raw_sales: Close
[0m17:09:07  1 of 1 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.23s]
[0m17:09:07  Finished running node model.jaffle_shop.raw_sales
[0m17:09:07  Using postgres connection "master"
[0m17:09:07  On master: BEGIN
[0m17:09:07  Opening a new connection, currently in state closed
[0m17:09:07  SQL status: BEGIN in 0.0 seconds
[0m17:09:07  On master: COMMIT
[0m17:09:07  Using postgres connection "master"
[0m17:09:07  On master: COMMIT
[0m17:09:07  SQL status: COMMIT in 0.0 seconds
[0m17:09:07  On master: Close
[0m17:09:07  Connection 'master' was properly closed.
[0m17:09:07  Connection 'list_dbtsales' was properly closed.
[0m17:09:07  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:09:07  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m17:09:07  
[0m17:09:07  Finished running 1 table model in 0 hours 0 minutes and 0.56 seconds (0.56s).
[0m17:09:07  Command end result
[0m17:09:07  
[0m17:09:07  [32mCompleted successfully[0m
[0m17:09:07  
[0m17:09:07  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m17:09:07  Command `dbt run` succeeded at 19:09:07.256024 after 1.21 seconds
[0m17:09:07  Flushing usage events
[0m17:11:26  Running with dbt=1.5.4
[0m17:11:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:11:26  Registered adapter: postgres=1.5.4
[0m17:11:26  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:11:26  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m17:11:26  Partial parsing enabled, no changes found, skipping parsing
[0m17:11:26  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:11:26  
[0m17:11:26  Acquiring new postgres connection 'master'
[0m17:11:26  Acquiring new postgres connection 'list_dbtsales'
[0m17:11:26  Using postgres connection "list_dbtsales"
[0m17:11:26  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:11:26  Opening a new connection, currently in state init
[0m17:11:26  SQL status: SELECT 5 in 0.0 seconds
[0m17:11:26  On list_dbtsales: Close
[0m17:11:26  Using postgres connection "list_dbtsales"
[0m17:11:26  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:11:26  Opening a new connection, currently in state closed
[0m17:11:26  SQL status: SELECT 5 in 0.0 seconds
[0m17:11:26  On list_dbtsales: Close
[0m17:11:26  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:11:26  Using postgres connection "list_dbtsales_public"
[0m17:11:26  On list_dbtsales_public: BEGIN
[0m17:11:26  Opening a new connection, currently in state init
[0m17:11:26  SQL status: BEGIN in 0.0 seconds
[0m17:11:26  Using postgres connection "list_dbtsales_public"
[0m17:11:26  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:11:26  SQL status: SELECT 10 in 0.0 seconds
[0m17:11:26  On list_dbtsales_public: ROLLBACK
[0m17:11:26  On list_dbtsales_public: Close
[0m17:11:26  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:11:26  Using postgres connection "list_dbtsales_public_stg"
[0m17:11:26  On list_dbtsales_public_stg: BEGIN
[0m17:11:26  Opening a new connection, currently in state closed
[0m17:11:26  SQL status: BEGIN in 0.0 seconds
[0m17:11:26  Using postgres connection "list_dbtsales_public_stg"
[0m17:11:26  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:11:26  SQL status: SELECT 3 in 0.0 seconds
[0m17:11:26  On list_dbtsales_public_stg: ROLLBACK
[0m17:11:26  On list_dbtsales_public_stg: Close
[0m17:11:26  Using postgres connection "master"
[0m17:11:26  On master: BEGIN
[0m17:11:26  Opening a new connection, currently in state init
[0m17:11:26  SQL status: BEGIN in 0.0 seconds
[0m17:11:26  Using postgres connection "master"
[0m17:11:26  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:11:26  SQL status: SELECT 8 in 0.0 seconds
[0m17:11:26  On master: ROLLBACK
[0m17:11:26  Using postgres connection "master"
[0m17:11:26  On master: BEGIN
[0m17:11:26  SQL status: BEGIN in 0.0 seconds
[0m17:11:26  On master: COMMIT
[0m17:11:26  Using postgres connection "master"
[0m17:11:26  On master: COMMIT
[0m17:11:26  SQL status: COMMIT in 0.0 seconds
[0m17:11:26  On master: Close
[0m17:11:26  Concurrency: 1 threads (target='dev')
[0m17:11:26  
[0m17:11:26  Began running node model.jaffle_shop.raw_sales
[0m17:11:26  1 of 7 START sql table model public.raw_sales .................................. [RUN]
[0m17:11:26  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m17:11:26  Began compiling node model.jaffle_shop.raw_sales
[0m17:11:26  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m17:11:26  Timing info for model.jaffle_shop.raw_sales (compile): 19:11:26.898950 => 19:11:26.905950
[0m17:11:26  Began executing node model.jaffle_shop.raw_sales
[0m17:11:26  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m17:11:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:11:26  On model.jaffle_shop.raw_sales: BEGIN
[0m17:11:26  Opening a new connection, currently in state init
[0m17:11:26  SQL status: BEGIN in 0.0 seconds
[0m17:11:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:11:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from stgsales
  );
  
[0m17:11:26  SQL status: SELECT 2823 in 0.0 seconds
[0m17:11:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:11:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m17:11:27  SQL status: ALTER TABLE in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:11:27  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m17:11:27  SQL status: ALTER TABLE in 0.0 seconds
[0m17:11:27  On model.jaffle_shop.raw_sales: COMMIT
[0m17:11:27  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:11:27  On model.jaffle_shop.raw_sales: COMMIT
[0m17:11:27  SQL status: COMMIT in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:11:27  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m17:11:27  SQL status: DROP TABLE in 0.0 seconds
[0m17:11:27  Timing info for model.jaffle_shop.raw_sales (execute): 19:11:26.907956 => 19:11:27.083009
[0m17:11:27  On model.jaffle_shop.raw_sales: Close
[0m17:11:27  1 of 7 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.19s]
[0m17:11:27  Finished running node model.jaffle_shop.raw_sales
[0m17:11:27  Began running node model.jaffle_shop.stg_orders
[0m17:11:27  2 of 7 START sql table model public.stg_orders ................................. [RUN]
[0m17:11:27  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_orders)
[0m17:11:27  Began compiling node model.jaffle_shop.stg_orders
[0m17:11:27  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m17:11:27  Timing info for model.jaffle_shop.stg_orders (compile): 19:11:27.095983 => 19:11:27.101985
[0m17:11:27  Began executing node model.jaffle_shop.stg_orders
[0m17:11:27  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:11:27  On model.jaffle_shop.stg_orders: BEGIN
[0m17:11:27  Opening a new connection, currently in state closed
[0m17:11:27  SQL status: BEGIN in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:11:27  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m17:11:27  SQL status: SELECT 99 in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:11:27  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m17:11:27  SQL status: ALTER TABLE in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:11:27  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m17:11:27  SQL status: ALTER TABLE in 0.0 seconds
[0m17:11:27  On model.jaffle_shop.stg_orders: COMMIT
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:11:27  On model.jaffle_shop.stg_orders: COMMIT
[0m17:11:27  SQL status: COMMIT in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:11:27  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m17:11:27  SQL status: DROP TABLE in 0.0 seconds
[0m17:11:27  Timing info for model.jaffle_shop.stg_orders (execute): 19:11:27.105981 => 19:11:27.202972
[0m17:11:27  On model.jaffle_shop.stg_orders: Close
[0m17:11:27  2 of 7 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.11s]
[0m17:11:27  Finished running node model.jaffle_shop.stg_orders
[0m17:11:27  Began running node model.jaffle_shop.stg_payments
[0m17:11:27  3 of 7 START sql view model public_stg.stg_payments ............................ [RUN]
[0m17:11:27  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m17:11:27  Began compiling node model.jaffle_shop.stg_payments
[0m17:11:27  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m17:11:27  Timing info for model.jaffle_shop.stg_payments (compile): 19:11:27.217883 => 19:11:27.226523
[0m17:11:27  Began executing node model.jaffle_shop.stg_payments
[0m17:11:27  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:11:27  On model.jaffle_shop.stg_payments: BEGIN
[0m17:11:27  Opening a new connection, currently in state closed
[0m17:11:27  SQL status: BEGIN in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:11:27  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "dbtsales"."public_stg"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "dbtsales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m17:11:27  SQL status: CREATE VIEW in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:11:27  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public_stg"."stg_payments" rename to "stg_payments__dbt_backup"
[0m17:11:27  SQL status: ALTER TABLE in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:11:27  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "dbtsales"."public_stg"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m17:11:27  SQL status: ALTER TABLE in 0.0 seconds
[0m17:11:27  On model.jaffle_shop.stg_payments: COMMIT
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:11:27  On model.jaffle_shop.stg_payments: COMMIT
[0m17:11:27  SQL status: COMMIT in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:11:27  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "dbtsales"."public_stg"."stg_payments__dbt_backup" cascade
[0m17:11:27  SQL status: DROP VIEW in 0.0 seconds
[0m17:11:27  Timing info for model.jaffle_shop.stg_payments (execute): 19:11:27.229711 => 19:11:27.327899
[0m17:11:27  On model.jaffle_shop.stg_payments: Close
[0m17:11:27  3 of 7 OK created sql view model public_stg.stg_payments ....................... [[32mCREATE VIEW[0m in 0.12s]
[0m17:11:27  Finished running node model.jaffle_shop.stg_payments
[0m17:11:27  Began running node model.jaffle_shop.stg_customers
[0m17:11:27  4 of 7 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:11:27  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.stg_customers)
[0m17:11:27  Began compiling node model.jaffle_shop.stg_customers
[0m17:11:27  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:11:27  Timing info for model.jaffle_shop.stg_customers (compile): 19:11:27.340898 => 19:11:27.387934
[0m17:11:27  Began executing node model.jaffle_shop.stg_customers
[0m17:11:27  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:11:27  On model.jaffle_shop.stg_customers: BEGIN
[0m17:11:27  Opening a new connection, currently in state closed
[0m17:11:27  SQL status: BEGIN in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:11:27  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    -- select * from "dbtsales"."public"."raw_customers"
    select * from"dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m17:11:27  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m17:11:27  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:11:27  Timing info for model.jaffle_shop.stg_customers (execute): 19:11:27.389933 => 19:11:27.427934
[0m17:11:27  On model.jaffle_shop.stg_customers: Close
[0m17:11:27  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:11:27  4 of 7 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.13s]
[0m17:11:27  Finished running node model.jaffle_shop.stg_customers
[0m17:11:27  Began running node model.jaffle_shop.v_staging_orders
[0m17:11:27  5 of 7 START sql view model public_stg.v_staging_orders ........................ [RUN]
[0m17:11:27  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:11:27  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.v_staging_orders)
[0m17:11:27  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m17:11:27  Began compiling node model.jaffle_shop.v_staging_orders
[0m17:11:27  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:11:27  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:11:27  On model.jaffle_shop.v_staging_orders: BEGIN
[0m17:11:27  Opening a new connection, currently in state closed
[0m17:11:27  SQL status: BEGIN in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:11:27  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m17:11:27  SQL status: SELECT 4 in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:11:27  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m17:11:27  SQL status: SELECT 4 in 0.0 seconds
[0m17:11:27  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m17:11:27  Timing info for model.jaffle_shop.v_staging_orders (compile): 19:11:27.479312 => 19:11:27.648234
[0m17:11:27  Began executing node model.jaffle_shop.v_staging_orders
[0m17:11:27  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m17:11:27  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:11:27  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "dbtsales"."public_stg"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "dbtsales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m17:11:27  SQL status: CREATE VIEW in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:11:27  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "dbtsales"."public_stg"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m17:11:27  SQL status: ALTER TABLE in 0.0 seconds
[0m17:11:27  On model.jaffle_shop.v_staging_orders: COMMIT
[0m17:11:27  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:11:27  On model.jaffle_shop.v_staging_orders: COMMIT
[0m17:11:27  SQL status: COMMIT in 0.0 seconds
[0m17:11:27  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:11:27  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "dbtsales"."public_stg"."v_staging_orders__dbt_backup" cascade
[0m17:11:27  SQL status: DROP VIEW in 0.0 seconds
[0m17:11:27  Timing info for model.jaffle_shop.v_staging_orders (execute): 19:11:27.650361 => 19:11:27.697384
[0m17:11:27  On model.jaffle_shop.v_staging_orders: Close
[0m17:11:27  5 of 7 OK created sql view model public_stg.v_staging_orders ................... [[32mCREATE VIEW[0m in 0.22s]
[0m17:11:27  Finished running node model.jaffle_shop.v_staging_orders
[0m17:11:27  
[0m17:11:27  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:11:27    column "customerid" does not exist
[0m17:11:27    LINE 16:         CustomerID as customer_id,
[0m17:11:27                     ^
[0m17:11:27    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m17:11:27    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:11:27  Connection 'master' was properly closed.
[0m17:11:27  Connection 'list_dbtsales' was properly closed.
[0m17:11:27  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:11:27  Connection 'model.jaffle_shop.v_staging_orders' was properly closed.
[0m17:11:27  
[0m17:11:27  Finished running 2 table models, 2 view models in 0 hours 0 minutes and 1.08 seconds (1.08s).
[0m17:11:27  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:11:27  Command `dbt run` failed at 19:11:27.758627 after 1.38 seconds
[0m17:11:27  Flushing usage events
[0m17:22:31  Running with dbt=1.5.4
[0m17:22:31  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:22:31  Registered adapter: postgres=1.5.4
[0m17:22:31  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:22:32  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m17:22:32  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:22:32  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:22:32  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:22:32  
[0m17:22:32  Acquiring new postgres connection 'master'
[0m17:22:32  Acquiring new postgres connection 'list_dbtsales'
[0m17:22:32  Using postgres connection "list_dbtsales"
[0m17:22:32  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:22:32  Opening a new connection, currently in state init
[0m17:22:32  SQL status: SELECT 5 in 0.0 seconds
[0m17:22:32  On list_dbtsales: Close
[0m17:22:32  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m17:22:32  Using postgres connection "list_dbtsales_public_stg"
[0m17:22:32  On list_dbtsales_public_stg: BEGIN
[0m17:22:32  Opening a new connection, currently in state init
[0m17:22:32  SQL status: BEGIN in 0.0 seconds
[0m17:22:32  Using postgres connection "list_dbtsales_public_stg"
[0m17:22:32  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:22:32  SQL status: SELECT 3 in 0.0 seconds
[0m17:22:32  On list_dbtsales_public_stg: ROLLBACK
[0m17:22:32  On list_dbtsales_public_stg: Close
[0m17:22:32  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m17:22:32  Using postgres connection "list_dbtsales_public"
[0m17:22:32  On list_dbtsales_public: BEGIN
[0m17:22:32  Opening a new connection, currently in state closed
[0m17:22:32  SQL status: BEGIN in 0.0 seconds
[0m17:22:32  Using postgres connection "list_dbtsales_public"
[0m17:22:32  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:22:32  SQL status: SELECT 9 in 0.0 seconds
[0m17:22:32  On list_dbtsales_public: ROLLBACK
[0m17:22:32  On list_dbtsales_public: Close
[0m17:22:32  Using postgres connection "master"
[0m17:22:32  On master: BEGIN
[0m17:22:32  Opening a new connection, currently in state init
[0m17:22:32  SQL status: BEGIN in 0.0 seconds
[0m17:22:32  Using postgres connection "master"
[0m17:22:32  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:22:32  SQL status: SELECT 5 in 0.0 seconds
[0m17:22:32  On master: ROLLBACK
[0m17:22:32  Using postgres connection "master"
[0m17:22:32  On master: BEGIN
[0m17:22:32  SQL status: BEGIN in 0.0 seconds
[0m17:22:32  On master: COMMIT
[0m17:22:32  Using postgres connection "master"
[0m17:22:32  On master: COMMIT
[0m17:22:32  SQL status: COMMIT in 0.0 seconds
[0m17:22:32  On master: Close
[0m17:22:32  Concurrency: 1 threads (target='dev')
[0m17:22:32  
[0m17:22:32  Began running node model.jaffle_shop.stg_customers
[0m17:22:32  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:22:32  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:22:32  Began compiling node model.jaffle_shop.stg_customers
[0m17:22:32  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:22:32  Timing info for model.jaffle_shop.stg_customers (compile): 19:22:32.508817 => 19:22:32.513819
[0m17:22:32  Began executing node model.jaffle_shop.stg_customers
[0m17:22:32  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:22:32  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:22:32  On model.jaffle_shop.stg_customers: BEGIN
[0m17:22:32  Opening a new connection, currently in state init
[0m17:22:32  SQL status: BEGIN in 0.0 seconds
[0m17:22:32  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:22:32  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    -- select * from "dbtsales"."public"."raw_customers"
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m17:22:32  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m17:22:32  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:22:32  Timing info for model.jaffle_shop.stg_customers (execute): 19:22:32.518817 => 19:22:32.602345
[0m17:22:32  On model.jaffle_shop.stg_customers: Close
[0m17:22:32  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:22:32  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.11s]
[0m17:22:32  Finished running node model.jaffle_shop.stg_customers
[0m17:22:32  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:22:32  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m17:22:32  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:22:32  
[0m17:22:32  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:22:32    column "customerid" does not exist
[0m17:22:32    LINE 16:         CustomerID as customer_id,
[0m17:22:32                     ^
[0m17:22:32    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m17:22:32    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:22:32  Connection 'master' was properly closed.
[0m17:22:32  Connection 'list_dbtsales' was properly closed.
[0m17:22:32  Connection 'list_dbtsales_public' was properly closed.
[0m17:22:32  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:22:32  
[0m17:22:32  Finished running 1 view model in 0 hours 0 minutes and 0.45 seconds (0.45s).
[0m17:22:32  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:22:32  Command `dbt run` failed at 19:22:32.638666 after 0.81 seconds
[0m17:22:32  Flushing usage events
[0m17:24:09  Running with dbt=1.5.4
[0m17:24:09  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:24:09  Registered adapter: postgres=1.5.4
[0m17:24:09  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:24:10  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m17:24:10  Partial parsing: updated file: jaffle_shop://models\staging\stg_payments.sql
[0m17:24:10  1699: static parser successfully parsed staging\stg_payments.sql
[0m17:24:10  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:24:10  
[0m17:24:10  Acquiring new postgres connection 'master'
[0m17:24:10  Acquiring new postgres connection 'list_dbtsales'
[0m17:24:10  Using postgres connection "list_dbtsales"
[0m17:24:10  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:24:10  Opening a new connection, currently in state init
[0m17:24:10  SQL status: SELECT 5 in 0.0 seconds
[0m17:24:10  On list_dbtsales: Close
[0m17:24:10  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m17:24:10  Using postgres connection "list_dbtsales_public_stg"
[0m17:24:10  On list_dbtsales_public_stg: BEGIN
[0m17:24:10  Opening a new connection, currently in state init
[0m17:24:10  SQL status: BEGIN in 0.0 seconds
[0m17:24:10  Using postgres connection "list_dbtsales_public_stg"
[0m17:24:10  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:24:10  SQL status: SELECT 3 in 0.0 seconds
[0m17:24:10  On list_dbtsales_public_stg: ROLLBACK
[0m17:24:10  On list_dbtsales_public_stg: Close
[0m17:24:10  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m17:24:10  Using postgres connection "list_dbtsales_public"
[0m17:24:10  On list_dbtsales_public: BEGIN
[0m17:24:10  Opening a new connection, currently in state closed
[0m17:24:10  SQL status: BEGIN in 0.0 seconds
[0m17:24:10  Using postgres connection "list_dbtsales_public"
[0m17:24:10  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:24:10  SQL status: SELECT 9 in 0.0 seconds
[0m17:24:10  On list_dbtsales_public: ROLLBACK
[0m17:24:10  On list_dbtsales_public: Close
[0m17:24:10  Using postgres connection "master"
[0m17:24:10  On master: BEGIN
[0m17:24:10  Opening a new connection, currently in state init
[0m17:24:10  SQL status: BEGIN in 0.0 seconds
[0m17:24:10  Using postgres connection "master"
[0m17:24:10  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:24:10  SQL status: SELECT 5 in 0.0 seconds
[0m17:24:10  On master: ROLLBACK
[0m17:24:10  Using postgres connection "master"
[0m17:24:10  On master: BEGIN
[0m17:24:10  SQL status: BEGIN in 0.0 seconds
[0m17:24:10  On master: COMMIT
[0m17:24:10  Using postgres connection "master"
[0m17:24:10  On master: COMMIT
[0m17:24:10  SQL status: COMMIT in 0.0 seconds
[0m17:24:10  On master: Close
[0m17:24:10  Concurrency: 1 threads (target='dev')
[0m17:24:10  
[0m17:24:10  Began running node model.jaffle_shop.stg_customers
[0m17:24:10  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:24:10  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:24:10  Began compiling node model.jaffle_shop.stg_customers
[0m17:24:10  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:24:10  Timing info for model.jaffle_shop.stg_customers (compile): 19:24:10.348479 => 19:24:10.354477
[0m17:24:10  Began executing node model.jaffle_shop.stg_customers
[0m17:24:10  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:24:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:24:10  On model.jaffle_shop.stg_customers: BEGIN
[0m17:24:10  Opening a new connection, currently in state init
[0m17:24:10  SQL status: BEGIN in 0.0 seconds
[0m17:24:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:24:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    -- select * from "dbtsales"."public"."raw_customers"
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m17:24:10  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m17:24:10  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:24:10  Timing info for model.jaffle_shop.stg_customers (execute): 19:24:10.356477 => 19:24:10.441037
[0m17:24:10  On model.jaffle_shop.stg_customers: Close
[0m17:24:10  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:24:10  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.11s]
[0m17:24:10  Finished running node model.jaffle_shop.stg_customers
[0m17:24:10  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:24:10  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m17:24:10  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:24:10  
[0m17:24:10  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:24:10    column "customerid" does not exist
[0m17:24:10    LINE 16:         CustomerID as customer_id,
[0m17:24:10                     ^
[0m17:24:10    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m17:24:10    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:24:10  Connection 'master' was properly closed.
[0m17:24:10  Connection 'list_dbtsales' was properly closed.
[0m17:24:10  Connection 'list_dbtsales_public' was properly closed.
[0m17:24:10  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:24:10  
[0m17:24:10  Finished running 1 view model in 0 hours 0 minutes and 0.34 seconds (0.34s).
[0m17:24:10  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:24:10  Command `dbt run` failed at 19:24:10.484198 after 0.76 seconds
[0m17:24:10  Flushing usage events
[0m17:28:45  Running with dbt=1.5.4
[0m17:28:45  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:28:45  Registered adapter: postgres=1.5.4
[0m17:28:45  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:28:45  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m17:28:45  Partial parsing enabled, no changes found, skipping parsing
[0m17:28:45  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:28:45  
[0m17:28:45  Acquiring new postgres connection 'master'
[0m17:28:45  Acquiring new postgres connection 'list_dbtsales'
[0m17:28:45  Using postgres connection "list_dbtsales"
[0m17:28:45  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:28:45  Opening a new connection, currently in state init
[0m17:28:45  SQL status: SELECT 5 in 0.0 seconds
[0m17:28:45  On list_dbtsales: Close
[0m17:28:45  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:28:45  Using postgres connection "list_dbtsales_public"
[0m17:28:45  On list_dbtsales_public: BEGIN
[0m17:28:45  Opening a new connection, currently in state init
[0m17:28:45  SQL status: BEGIN in 0.0 seconds
[0m17:28:45  Using postgres connection "list_dbtsales_public"
[0m17:28:45  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:28:45  SQL status: SELECT 9 in 0.0 seconds
[0m17:28:45  On list_dbtsales_public: ROLLBACK
[0m17:28:45  On list_dbtsales_public: Close
[0m17:28:45  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:28:45  Using postgres connection "list_dbtsales_public_stg"
[0m17:28:45  On list_dbtsales_public_stg: BEGIN
[0m17:28:45  Opening a new connection, currently in state closed
[0m17:28:45  SQL status: BEGIN in 0.0 seconds
[0m17:28:45  Using postgres connection "list_dbtsales_public_stg"
[0m17:28:45  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:28:45  SQL status: SELECT 3 in 0.0 seconds
[0m17:28:45  On list_dbtsales_public_stg: ROLLBACK
[0m17:28:45  On list_dbtsales_public_stg: Close
[0m17:28:45  Using postgres connection "master"
[0m17:28:45  On master: BEGIN
[0m17:28:45  Opening a new connection, currently in state init
[0m17:28:45  SQL status: BEGIN in 0.0 seconds
[0m17:28:45  Using postgres connection "master"
[0m17:28:45  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:28:45  SQL status: SELECT 5 in 0.0 seconds
[0m17:28:45  On master: ROLLBACK
[0m17:28:45  Using postgres connection "master"
[0m17:28:45  On master: BEGIN
[0m17:28:45  SQL status: BEGIN in 0.0 seconds
[0m17:28:45  On master: COMMIT
[0m17:28:45  Using postgres connection "master"
[0m17:28:45  On master: COMMIT
[0m17:28:45  SQL status: COMMIT in 0.0 seconds
[0m17:28:45  On master: Close
[0m17:28:45  Concurrency: 1 threads (target='dev')
[0m17:28:45  
[0m17:28:45  Began running node model.jaffle_shop.raw_sales
[0m17:28:45  1 of 1 START sql table model public.raw_sales .................................. [RUN]
[0m17:28:45  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m17:28:45  Began compiling node model.jaffle_shop.raw_sales
[0m17:28:45  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m17:28:45  Timing info for model.jaffle_shop.raw_sales (compile): 19:28:45.594116 => 19:28:45.598106
[0m17:28:45  Began executing node model.jaffle_shop.raw_sales
[0m17:28:45  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m17:28:45  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:28:45  On model.jaffle_shop.raw_sales: BEGIN
[0m17:28:45  Opening a new connection, currently in state init
[0m17:28:45  SQL status: BEGIN in 0.0 seconds
[0m17:28:45  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:28:45  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from stgsales
  );
  
[0m17:28:45  SQL status: SELECT 2823 in 0.0 seconds
[0m17:28:45  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:28:45  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m17:28:45  SQL status: ALTER TABLE in 0.0 seconds
[0m17:28:45  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:28:45  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m17:28:45  SQL status: ALTER TABLE in 0.0 seconds
[0m17:28:45  On model.jaffle_shop.raw_sales: COMMIT
[0m17:28:45  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:28:45  On model.jaffle_shop.raw_sales: COMMIT
[0m17:28:45  SQL status: COMMIT in 0.0 seconds
[0m17:28:45  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:28:45  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m17:28:45  SQL status: DROP TABLE in 0.0 seconds
[0m17:28:45  Timing info for model.jaffle_shop.raw_sales (execute): 19:28:45.600107 => 19:28:45.790034
[0m17:28:45  On model.jaffle_shop.raw_sales: Close
[0m17:28:45  1 of 1 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.21s]
[0m17:28:45  Finished running node model.jaffle_shop.raw_sales
[0m17:28:45  Using postgres connection "master"
[0m17:28:45  On master: BEGIN
[0m17:28:45  Opening a new connection, currently in state closed
[0m17:28:45  SQL status: BEGIN in 0.0 seconds
[0m17:28:45  On master: COMMIT
[0m17:28:45  Using postgres connection "master"
[0m17:28:45  On master: COMMIT
[0m17:28:45  SQL status: COMMIT in 0.0 seconds
[0m17:28:45  On master: Close
[0m17:28:45  Connection 'master' was properly closed.
[0m17:28:45  Connection 'list_dbtsales' was properly closed.
[0m17:28:45  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:28:45  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m17:28:45  
[0m17:28:45  Finished running 1 table model in 0 hours 0 minutes and 0.47 seconds (0.47s).
[0m17:28:45  Command end result
[0m17:28:45  
[0m17:28:45  [32mCompleted successfully[0m
[0m17:28:45  
[0m17:28:45  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m17:28:45  Command `dbt run` succeeded at 19:28:45.873973 after 0.86 seconds
[0m17:28:45  Flushing usage events
[0m17:29:13  Running with dbt=1.5.4
[0m17:29:13  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:29:13  Registered adapter: postgres=1.5.4
[0m17:29:13  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:29:13  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m17:29:13  Partial parsing enabled, no changes found, skipping parsing
[0m17:29:13  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:29:13  
[0m17:29:13  Acquiring new postgres connection 'master'
[0m17:29:13  Acquiring new postgres connection 'list_dbtsales'
[0m17:29:13  Using postgres connection "list_dbtsales"
[0m17:29:13  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:29:13  Opening a new connection, currently in state init
[0m17:29:13  SQL status: SELECT 5 in 0.0 seconds
[0m17:29:13  On list_dbtsales: Close
[0m17:29:13  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m17:29:13  Using postgres connection "list_dbtsales_public_stg"
[0m17:29:13  On list_dbtsales_public_stg: BEGIN
[0m17:29:13  Opening a new connection, currently in state init
[0m17:29:13  SQL status: BEGIN in 0.0 seconds
[0m17:29:13  Using postgres connection "list_dbtsales_public_stg"
[0m17:29:13  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:29:13  SQL status: SELECT 3 in 0.0 seconds
[0m17:29:13  On list_dbtsales_public_stg: ROLLBACK
[0m17:29:13  On list_dbtsales_public_stg: Close
[0m17:29:13  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m17:29:13  Using postgres connection "list_dbtsales_public"
[0m17:29:13  On list_dbtsales_public: BEGIN
[0m17:29:13  Opening a new connection, currently in state closed
[0m17:29:13  SQL status: BEGIN in 0.0 seconds
[0m17:29:13  Using postgres connection "list_dbtsales_public"
[0m17:29:13  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:29:13  SQL status: SELECT 9 in 0.0 seconds
[0m17:29:13  On list_dbtsales_public: ROLLBACK
[0m17:29:13  On list_dbtsales_public: Close
[0m17:29:13  Using postgres connection "master"
[0m17:29:13  On master: BEGIN
[0m17:29:13  Opening a new connection, currently in state init
[0m17:29:13  SQL status: BEGIN in 0.0 seconds
[0m17:29:13  Using postgres connection "master"
[0m17:29:13  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:29:13  SQL status: SELECT 5 in 0.0 seconds
[0m17:29:13  On master: ROLLBACK
[0m17:29:13  Using postgres connection "master"
[0m17:29:13  On master: BEGIN
[0m17:29:13  SQL status: BEGIN in 0.0 seconds
[0m17:29:13  On master: COMMIT
[0m17:29:13  Using postgres connection "master"
[0m17:29:13  On master: COMMIT
[0m17:29:13  SQL status: COMMIT in 0.0 seconds
[0m17:29:13  On master: Close
[0m17:29:13  Concurrency: 1 threads (target='dev')
[0m17:29:13  
[0m17:29:13  Began running node model.jaffle_shop.stg_customers
[0m17:29:13  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:29:13  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:29:13  Began compiling node model.jaffle_shop.stg_customers
[0m17:29:13  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:29:13  Timing info for model.jaffle_shop.stg_customers (compile): 19:29:13.744151 => 19:29:13.751152
[0m17:29:13  Began executing node model.jaffle_shop.stg_customers
[0m17:29:13  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:29:13  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:29:13  On model.jaffle_shop.stg_customers: BEGIN
[0m17:29:13  Opening a new connection, currently in state init
[0m17:29:13  SQL status: BEGIN in 0.0 seconds
[0m17:29:13  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:29:13  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    -- select * from "dbtsales"."public"."raw_customers"
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m17:29:13  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m17:29:13  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:29:13  Timing info for model.jaffle_shop.stg_customers (execute): 19:29:13.753263 => 19:29:13.834564
[0m17:29:13  On model.jaffle_shop.stg_customers: Close
[0m17:29:13  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:29:13  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.10s]
[0m17:29:13  Finished running node model.jaffle_shop.stg_customers
[0m17:29:13  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:29:13  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m17:29:13  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:29:13  
[0m17:29:13  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:29:13    column "customerid" does not exist
[0m17:29:13    LINE 16:         CustomerID as customer_id,
[0m17:29:13                     ^
[0m17:29:13    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m17:29:13    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:29:13  Connection 'master' was properly closed.
[0m17:29:13  Connection 'list_dbtsales' was properly closed.
[0m17:29:13  Connection 'list_dbtsales_public' was properly closed.
[0m17:29:13  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:29:13  
[0m17:29:13  Finished running 1 view model in 0 hours 0 minutes and 0.36 seconds (0.36s).
[0m17:29:13  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:29:13  Command `dbt run` failed at 19:29:13.875087 after 0.63 seconds
[0m17:29:13  Flushing usage events
[0m17:29:49  Running with dbt=1.5.4
[0m17:29:49  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:29:49  Registered adapter: postgres=1.5.4
[0m17:29:49  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:29:50  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m17:29:50  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:29:50  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:29:50  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:29:50  
[0m17:29:50  Acquiring new postgres connection 'master'
[0m17:29:50  Acquiring new postgres connection 'list_dbtsales'
[0m17:29:50  Using postgres connection "list_dbtsales"
[0m17:29:50  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:29:50  Opening a new connection, currently in state init
[0m17:29:50  SQL status: SELECT 5 in 0.0 seconds
[0m17:29:50  On list_dbtsales: Close
[0m17:29:50  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m17:29:50  Using postgres connection "list_dbtsales_public_stg"
[0m17:29:50  On list_dbtsales_public_stg: BEGIN
[0m17:29:50  Opening a new connection, currently in state init
[0m17:29:50  SQL status: BEGIN in 0.0 seconds
[0m17:29:50  Using postgres connection "list_dbtsales_public_stg"
[0m17:29:50  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:29:50  SQL status: SELECT 3 in 0.0 seconds
[0m17:29:50  On list_dbtsales_public_stg: ROLLBACK
[0m17:29:50  On list_dbtsales_public_stg: Close
[0m17:29:50  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m17:29:50  Using postgres connection "list_dbtsales_public"
[0m17:29:50  On list_dbtsales_public: BEGIN
[0m17:29:50  Opening a new connection, currently in state closed
[0m17:29:50  SQL status: BEGIN in 0.0 seconds
[0m17:29:50  Using postgres connection "list_dbtsales_public"
[0m17:29:50  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:29:50  SQL status: SELECT 9 in 0.0 seconds
[0m17:29:50  On list_dbtsales_public: ROLLBACK
[0m17:29:50  On list_dbtsales_public: Close
[0m17:29:50  Using postgres connection "master"
[0m17:29:50  On master: BEGIN
[0m17:29:50  Opening a new connection, currently in state init
[0m17:29:50  SQL status: BEGIN in 0.0 seconds
[0m17:29:50  Using postgres connection "master"
[0m17:29:50  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:29:50  SQL status: SELECT 5 in 0.0 seconds
[0m17:29:50  On master: ROLLBACK
[0m17:29:50  Using postgres connection "master"
[0m17:29:50  On master: BEGIN
[0m17:29:50  SQL status: BEGIN in 0.0 seconds
[0m17:29:50  On master: COMMIT
[0m17:29:50  Using postgres connection "master"
[0m17:29:50  On master: COMMIT
[0m17:29:50  SQL status: COMMIT in 0.0 seconds
[0m17:29:50  On master: Close
[0m17:29:50  Concurrency: 1 threads (target='dev')
[0m17:29:50  
[0m17:29:50  Began running node model.jaffle_shop.stg_customers
[0m17:29:50  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:29:50  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:29:50  Began compiling node model.jaffle_shop.stg_customers
[0m17:29:50  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:29:50  Timing info for model.jaffle_shop.stg_customers (compile): 19:29:50.355620 => 19:29:50.359620
[0m17:29:50  Began executing node model.jaffle_shop.stg_customers
[0m17:29:50  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:29:50  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:29:50  On model.jaffle_shop.stg_customers: BEGIN
[0m17:29:50  Opening a new connection, currently in state init
[0m17:29:50  SQL status: BEGIN in 0.0 seconds
[0m17:29:50  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:29:50  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    -- select * from "dbtsales"."public"."raw_customers"
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        source.CustomerID as customer_id,
        source.CUSTOMERNAME as customer_name,
        source.CONTACTFIRSTNAME as first_name,
        source.CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m17:29:50  Postgres adapter: Postgres error: column source.customerid does not exist
LINE 16:         source.CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m17:29:50  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:29:50  Timing info for model.jaffle_shop.stg_customers (execute): 19:29:50.362621 => 19:29:50.446165
[0m17:29:50  On model.jaffle_shop.stg_customers: Close
[0m17:29:50  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column source.customerid does not exist
  LINE 16:         source.CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:29:50  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.10s]
[0m17:29:50  Finished running node model.jaffle_shop.stg_customers
[0m17:29:50  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:29:50  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m17:29:50  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:29:50  
[0m17:29:50  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:29:50    column source.customerid does not exist
[0m17:29:50    LINE 16:         source.CustomerID as customer_id,
[0m17:29:50                     ^
[0m17:29:50    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m17:29:50    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:29:50  Connection 'master' was properly closed.
[0m17:29:50  Connection 'list_dbtsales' was properly closed.
[0m17:29:50  Connection 'list_dbtsales_public' was properly closed.
[0m17:29:50  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:29:50  
[0m17:29:50  Finished running 1 view model in 0 hours 0 minutes and 0.35 seconds (0.35s).
[0m17:29:50  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:29:50  Command `dbt run` failed at 19:29:50.480213 after 0.78 seconds
[0m17:29:50  Flushing usage events
[0m17:31:38  Running with dbt=1.5.4
[0m17:31:38  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:31:38  dbt version: 1.5.4
[0m17:31:38  python version: 3.10.11
[0m17:31:38  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m17:31:38  os info: Windows-10-10.0.22621-SP0
[0m17:31:38  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m17:31:38  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m17:31:38  Configuration:
[0m17:31:38    profiles.yml file [[32mOK found and valid[0m]
[0m17:31:38    dbt_project.yml file [[32mOK found and valid[0m]
[0m17:31:38  Required dependencies:
[0m17:31:38  Executing "git --help"
[0m17:31:38  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m17:31:38  STDERR: "b''"
[0m17:31:38   - git [[32mOK found[0m]

[0m17:31:38  Connection:
[0m17:31:38    host: localhost
[0m17:31:38    port: 5432
[0m17:31:38    user: postgres
[0m17:31:38    database: dbtsales
[0m17:31:38    schema: public
[0m17:31:38    search_path: None
[0m17:31:38    keepalives_idle: 0
[0m17:31:38    sslmode: None
[0m17:31:38  Registered adapter: postgres=1.5.4
[0m17:31:38  Acquiring new postgres connection 'debug'
[0m17:31:38  Using postgres connection "debug"
[0m17:31:38  On debug: select 1 as id
[0m17:31:38  Opening a new connection, currently in state init
[0m17:31:38  SQL status: SELECT 1 in 0.0 seconds
[0m17:31:38  On debug: Close
[0m17:31:38    Connection test: [[32mOK connection ok[0m]

[0m17:31:38  [32mAll checks passed![0m
[0m17:31:38  Command `dbt debug` succeeded at 19:31:38.492364 after 0.23 seconds
[0m17:31:38  Connection 'debug' was properly closed.
[0m17:31:38  Flushing usage events
[0m17:32:17  Running with dbt=1.5.4
[0m17:32:17  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:32:17  Registered adapter: postgres=1.5.4
[0m17:32:17  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:32:18  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m17:32:18  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:32:18  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:32:18  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m17:32:18  
[0m17:32:18  Acquiring new postgres connection 'master'
[0m17:32:18  Acquiring new postgres connection 'list_dbtsales'
[0m17:32:18  Using postgres connection "list_dbtsales"
[0m17:32:18  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:32:18  Opening a new connection, currently in state init
[0m17:32:18  SQL status: SELECT 5 in 0.0 seconds
[0m17:32:18  On list_dbtsales: Close
[0m17:32:18  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:32:18  Using postgres connection "list_dbtsales_public"
[0m17:32:18  On list_dbtsales_public: BEGIN
[0m17:32:18  Opening a new connection, currently in state init
[0m17:32:18  SQL status: BEGIN in 0.0 seconds
[0m17:32:18  Using postgres connection "list_dbtsales_public"
[0m17:32:18  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:32:18  SQL status: SELECT 9 in 0.0 seconds
[0m17:32:18  On list_dbtsales_public: ROLLBACK
[0m17:32:18  On list_dbtsales_public: Close
[0m17:32:18  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:32:18  Using postgres connection "list_dbtsales_public_stg"
[0m17:32:18  On list_dbtsales_public_stg: BEGIN
[0m17:32:18  Opening a new connection, currently in state closed
[0m17:32:18  SQL status: BEGIN in 0.0 seconds
[0m17:32:18  Using postgres connection "list_dbtsales_public_stg"
[0m17:32:18  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:32:18  SQL status: SELECT 3 in 0.0 seconds
[0m17:32:18  On list_dbtsales_public_stg: ROLLBACK
[0m17:32:18  On list_dbtsales_public_stg: Close
[0m17:32:18  Using postgres connection "master"
[0m17:32:18  On master: BEGIN
[0m17:32:18  Opening a new connection, currently in state init
[0m17:32:18  SQL status: BEGIN in 0.0 seconds
[0m17:32:18  Using postgres connection "master"
[0m17:32:18  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:32:18  SQL status: SELECT 5 in 0.0 seconds
[0m17:32:18  On master: ROLLBACK
[0m17:32:18  Using postgres connection "master"
[0m17:32:18  On master: BEGIN
[0m17:32:18  SQL status: BEGIN in 0.0 seconds
[0m17:32:18  On master: COMMIT
[0m17:32:18  Using postgres connection "master"
[0m17:32:18  On master: COMMIT
[0m17:32:18  SQL status: COMMIT in 0.0 seconds
[0m17:32:18  On master: Close
[0m17:32:18  Concurrency: 1 threads (target='dev')
[0m17:32:18  
[0m17:32:18  Began running node model.jaffle_shop.stg_customers
[0m17:32:18  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:32:18  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:32:18  Began compiling node model.jaffle_shop.stg_customers
[0m17:32:18  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:32:18  Timing info for model.jaffle_shop.stg_customers (compile): 19:32:18.437627 => 19:32:18.442630
[0m17:32:18  Began executing node model.jaffle_shop.stg_customers
[0m17:32:18  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:32:18  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:32:18  On model.jaffle_shop.stg_customers: BEGIN
[0m17:32:18  Opening a new connection, currently in state init
[0m17:32:18  SQL status: BEGIN in 0.0 seconds
[0m17:32:18  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:32:18  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
   
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m17:32:18  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m17:32:18  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:32:18  Timing info for model.jaffle_shop.stg_customers (execute): 19:32:18.445630 => 19:32:18.528670
[0m17:32:18  On model.jaffle_shop.stg_customers: Close
[0m17:32:18  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:32:18  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.11s]
[0m17:32:18  Finished running node model.jaffle_shop.stg_customers
[0m17:32:18  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:32:18  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m17:32:18  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:32:18  
[0m17:32:18  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:32:18    column "customerid" does not exist
[0m17:32:18    LINE 16:         CustomerID as customer_id,
[0m17:32:18                     ^
[0m17:32:18    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m17:32:18    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:32:18  Connection 'master' was properly closed.
[0m17:32:18  Connection 'list_dbtsales' was properly closed.
[0m17:32:18  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:32:18  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:32:18  
[0m17:32:18  Finished running 1 view model in 0 hours 0 minutes and 0.37 seconds (0.37s).
[0m17:32:18  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:32:18  Command `dbt run` failed at 19:32:18.568670 after 0.74 seconds
[0m17:32:18  Flushing usage events
[0m17:43:08  Running with dbt=1.5.4
[0m17:43:08  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:43:08  Registered adapter: postgres=1.5.4
[0m17:43:08  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:43:08  Partial parsing enabled: 0 files deleted, 1 files added, 1 files changed.
[0m17:43:08  Partial parsing: added file: jaffle_shop://models\sources.yml
[0m17:43:08  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:43:09  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:43:09  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m17:43:09  
[0m17:43:09  Acquiring new postgres connection 'master'
[0m17:43:09  Acquiring new postgres connection 'list_dbtsales'
[0m17:43:09  Using postgres connection "list_dbtsales"
[0m17:43:09  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:43:09  Opening a new connection, currently in state init
[0m17:43:09  SQL status: SELECT 5 in 0.0 seconds
[0m17:43:09  On list_dbtsales: Close
[0m17:43:09  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:43:09  Using postgres connection "list_dbtsales_public"
[0m17:43:09  On list_dbtsales_public: BEGIN
[0m17:43:09  Opening a new connection, currently in state init
[0m17:43:09  SQL status: BEGIN in 0.0 seconds
[0m17:43:09  Using postgres connection "list_dbtsales_public"
[0m17:43:09  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:43:09  SQL status: SELECT 9 in 0.0 seconds
[0m17:43:09  On list_dbtsales_public: ROLLBACK
[0m17:43:09  On list_dbtsales_public: Close
[0m17:43:09  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:43:09  Using postgres connection "list_dbtsales_public_stg"
[0m17:43:09  On list_dbtsales_public_stg: BEGIN
[0m17:43:09  Opening a new connection, currently in state closed
[0m17:43:09  SQL status: BEGIN in 0.0 seconds
[0m17:43:09  Using postgres connection "list_dbtsales_public_stg"
[0m17:43:09  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:43:09  SQL status: SELECT 3 in 0.0 seconds
[0m17:43:09  On list_dbtsales_public_stg: ROLLBACK
[0m17:43:09  On list_dbtsales_public_stg: Close
[0m17:43:09  Using postgres connection "master"
[0m17:43:09  On master: BEGIN
[0m17:43:09  Opening a new connection, currently in state init
[0m17:43:09  SQL status: BEGIN in 0.0 seconds
[0m17:43:09  Using postgres connection "master"
[0m17:43:09  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:43:09  SQL status: SELECT 5 in 0.0 seconds
[0m17:43:09  On master: ROLLBACK
[0m17:43:09  Using postgres connection "master"
[0m17:43:09  On master: BEGIN
[0m17:43:09  SQL status: BEGIN in 0.0 seconds
[0m17:43:09  On master: COMMIT
[0m17:43:09  Using postgres connection "master"
[0m17:43:09  On master: COMMIT
[0m17:43:09  SQL status: COMMIT in 0.0 seconds
[0m17:43:09  On master: Close
[0m17:43:09  Concurrency: 1 threads (target='dev')
[0m17:43:09  
[0m17:43:09  Began running node model.jaffle_shop.stg_customers
[0m17:43:09  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:43:09  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:43:09  Began compiling node model.jaffle_shop.stg_customers
[0m17:43:09  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:43:09  Timing info for model.jaffle_shop.stg_customers (compile): 19:43:09.389779 => 19:43:09.399789
[0m17:43:09  Began executing node model.jaffle_shop.stg_customers
[0m17:43:09  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:43:09  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:43:09  On model.jaffle_shop.stg_customers: BEGIN
[0m17:43:09  Opening a new connection, currently in state init
[0m17:43:09  SQL status: BEGIN in 0.0 seconds
[0m17:43:09  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:43:09  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
   
    select * from "dbtsales"."public"."stgsales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m17:43:09  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m17:43:09  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:43:09  Timing info for model.jaffle_shop.stg_customers (execute): 19:43:09.402778 => 19:43:09.477803
[0m17:43:09  On model.jaffle_shop.stg_customers: Close
[0m17:43:09  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:43:09  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.10s]
[0m17:43:09  Finished running node model.jaffle_shop.stg_customers
[0m17:43:09  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:43:09  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m17:43:09  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:43:09  
[0m17:43:09  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:43:09    column "customerid" does not exist
[0m17:43:09    LINE 16:         CustomerID as customer_id,
[0m17:43:09                     ^
[0m17:43:09    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m17:43:09    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:43:09  Connection 'master' was properly closed.
[0m17:43:09  Connection 'list_dbtsales' was properly closed.
[0m17:43:09  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:43:09  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:43:09  
[0m17:43:09  Finished running 1 view model in 0 hours 0 minutes and 0.42 seconds (0.42s).
[0m17:43:09  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:43:09  Command `dbt run` failed at 19:43:09.511803 after 0.89 seconds
[0m17:43:09  Flushing usage events
[0m17:45:35  Running with dbt=1.5.4
[0m17:45:35  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:45:35  Registered adapter: postgres=1.5.4
[0m17:45:35  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:45:35  Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m17:45:35  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:45:35  Partial parsing: updated file: jaffle_shop://models\source\raw_sales.sql
[0m17:45:35  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:45:35  1699: static parser successfully parsed source\raw_sales.sql
[0m17:45:35  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m17:45:35  
[0m17:45:35  Acquiring new postgres connection 'master'
[0m17:45:35  Acquiring new postgres connection 'list_dbtsales'
[0m17:45:35  Using postgres connection "list_dbtsales"
[0m17:45:35  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:45:35  Opening a new connection, currently in state init
[0m17:45:35  SQL status: SELECT 5 in 0.0 seconds
[0m17:45:35  On list_dbtsales: Close
[0m17:45:35  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m17:45:35  Using postgres connection "list_dbtsales_public_stg"
[0m17:45:35  On list_dbtsales_public_stg: BEGIN
[0m17:45:35  Opening a new connection, currently in state init
[0m17:45:35  SQL status: BEGIN in 0.0 seconds
[0m17:45:35  Using postgres connection "list_dbtsales_public_stg"
[0m17:45:35  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:45:35  SQL status: SELECT 3 in 0.0 seconds
[0m17:45:35  On list_dbtsales_public_stg: ROLLBACK
[0m17:45:35  On list_dbtsales_public_stg: Close
[0m17:45:35  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m17:45:35  Using postgres connection "list_dbtsales_public"
[0m17:45:35  On list_dbtsales_public: BEGIN
[0m17:45:35  Opening a new connection, currently in state closed
[0m17:45:35  SQL status: BEGIN in 0.0 seconds
[0m17:45:35  Using postgres connection "list_dbtsales_public"
[0m17:45:35  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:45:35  SQL status: SELECT 9 in 0.0 seconds
[0m17:45:35  On list_dbtsales_public: ROLLBACK
[0m17:45:35  On list_dbtsales_public: Close
[0m17:45:35  Using postgres connection "master"
[0m17:45:35  On master: BEGIN
[0m17:45:35  Opening a new connection, currently in state init
[0m17:45:35  SQL status: BEGIN in 0.0 seconds
[0m17:45:35  Using postgres connection "master"
[0m17:45:35  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:45:35  SQL status: SELECT 5 in 0.0 seconds
[0m17:45:35  On master: ROLLBACK
[0m17:45:35  Using postgres connection "master"
[0m17:45:35  On master: BEGIN
[0m17:45:35  SQL status: BEGIN in 0.0 seconds
[0m17:45:35  On master: COMMIT
[0m17:45:35  Using postgres connection "master"
[0m17:45:35  On master: COMMIT
[0m17:45:35  SQL status: COMMIT in 0.0 seconds
[0m17:45:35  On master: Close
[0m17:45:35  Concurrency: 1 threads (target='dev')
[0m17:45:35  
[0m17:45:35  Began running node model.jaffle_shop.raw_sales
[0m17:45:35  1 of 1 START sql table model public.raw_sales .................................. [RUN]
[0m17:45:35  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m17:45:35  Began compiling node model.jaffle_shop.raw_sales
[0m17:45:35  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m17:45:35  Timing info for model.jaffle_shop.raw_sales (compile): 19:45:35.590600 => 19:45:35.599050
[0m17:45:35  Began executing node model.jaffle_shop.raw_sales
[0m17:45:35  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m17:45:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:45:35  On model.jaffle_shop.raw_sales: BEGIN
[0m17:45:35  Opening a new connection, currently in state init
[0m17:45:35  SQL status: BEGIN in 0.0 seconds
[0m17:45:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:45:35  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m17:45:35  SQL status: SELECT 2823 in 0.0 seconds
[0m17:45:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:45:35  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m17:45:35  SQL status: ALTER TABLE in 0.0 seconds
[0m17:45:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:45:35  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m17:45:35  SQL status: ALTER TABLE in 0.0 seconds
[0m17:45:35  On model.jaffle_shop.raw_sales: COMMIT
[0m17:45:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:45:35  On model.jaffle_shop.raw_sales: COMMIT
[0m17:45:35  SQL status: COMMIT in 0.0 seconds
[0m17:45:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:45:35  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m17:45:35  SQL status: DROP TABLE in 0.0 seconds
[0m17:45:35  Timing info for model.jaffle_shop.raw_sales (execute): 19:45:35.601072 => 19:45:35.826140
[0m17:45:35  On model.jaffle_shop.raw_sales: Close
[0m17:45:35  1 of 1 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.24s]
[0m17:45:35  Finished running node model.jaffle_shop.raw_sales
[0m17:45:35  Using postgres connection "master"
[0m17:45:35  On master: BEGIN
[0m17:45:35  Opening a new connection, currently in state closed
[0m17:45:35  SQL status: BEGIN in 0.0 seconds
[0m17:45:35  On master: COMMIT
[0m17:45:35  Using postgres connection "master"
[0m17:45:35  On master: COMMIT
[0m17:45:35  SQL status: COMMIT in 0.0 seconds
[0m17:45:35  On master: Close
[0m17:45:35  Connection 'master' was properly closed.
[0m17:45:35  Connection 'list_dbtsales' was properly closed.
[0m17:45:35  Connection 'list_dbtsales_public' was properly closed.
[0m17:45:35  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m17:45:35  
[0m17:45:35  Finished running 1 table model in 0 hours 0 minutes and 0.51 seconds (0.51s).
[0m17:45:35  Command end result
[0m17:45:35  
[0m17:45:35  [32mCompleted successfully[0m
[0m17:45:35  
[0m17:45:35  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m17:45:35  Command `dbt run` succeeded at 19:45:35.953337 after 0.97 seconds
[0m17:45:35  Flushing usage events
[0m17:48:14  Running with dbt=1.5.4
[0m17:48:14  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:48:14  Registered adapter: postgres=1.5.4
[0m17:48:14  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:48:14  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m17:48:14  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:48:14  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:48:14  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m17:48:14  
[0m17:48:14  Acquiring new postgres connection 'master'
[0m17:48:14  Acquiring new postgres connection 'list_dbtsales'
[0m17:48:14  Using postgres connection "list_dbtsales"
[0m17:48:14  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:48:14  Opening a new connection, currently in state init
[0m17:48:15  SQL status: SELECT 5 in 0.0 seconds
[0m17:48:15  On list_dbtsales: Close
[0m17:48:15  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:48:15  Using postgres connection "list_dbtsales_public"
[0m17:48:15  On list_dbtsales_public: BEGIN
[0m17:48:15  Opening a new connection, currently in state init
[0m17:48:15  SQL status: BEGIN in 0.0 seconds
[0m17:48:15  Using postgres connection "list_dbtsales_public"
[0m17:48:15  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:48:15  SQL status: SELECT 9 in 0.0 seconds
[0m17:48:15  On list_dbtsales_public: ROLLBACK
[0m17:48:15  On list_dbtsales_public: Close
[0m17:48:15  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:48:15  Using postgres connection "list_dbtsales_public_stg"
[0m17:48:15  On list_dbtsales_public_stg: BEGIN
[0m17:48:15  Opening a new connection, currently in state closed
[0m17:48:15  SQL status: BEGIN in 0.0 seconds
[0m17:48:15  Using postgres connection "list_dbtsales_public_stg"
[0m17:48:15  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:48:15  SQL status: SELECT 3 in 0.0 seconds
[0m17:48:15  On list_dbtsales_public_stg: ROLLBACK
[0m17:48:15  On list_dbtsales_public_stg: Close
[0m17:48:15  Using postgres connection "master"
[0m17:48:15  On master: BEGIN
[0m17:48:15  Opening a new connection, currently in state init
[0m17:48:15  SQL status: BEGIN in 0.0 seconds
[0m17:48:15  Using postgres connection "master"
[0m17:48:15  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:48:15  SQL status: SELECT 5 in 0.0 seconds
[0m17:48:15  On master: ROLLBACK
[0m17:48:15  Using postgres connection "master"
[0m17:48:15  On master: BEGIN
[0m17:48:15  SQL status: BEGIN in 0.0 seconds
[0m17:48:15  On master: COMMIT
[0m17:48:15  Using postgres connection "master"
[0m17:48:15  On master: COMMIT
[0m17:48:15  SQL status: COMMIT in 0.0 seconds
[0m17:48:15  On master: Close
[0m17:48:15  Concurrency: 1 threads (target='dev')
[0m17:48:15  
[0m17:48:15  Began running node model.jaffle_shop.stg_customers
[0m17:48:15  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:48:15  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:48:15  Began compiling node model.jaffle_shop.stg_customers
[0m17:48:15  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:48:15  Timing info for model.jaffle_shop.stg_customers (compile): 19:48:15.237335 => 19:48:15.244335
[0m17:48:15  Began executing node model.jaffle_shop.stg_customers
[0m17:48:15  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:48:15  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:15  On model.jaffle_shop.stg_customers: BEGIN
[0m17:48:15  Opening a new connection, currently in state init
[0m17:48:15  SQL status: BEGIN in 0.0 seconds
[0m17:48:15  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:15  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select CustomerID as customer_id, customer_name from "dbtsales"."public"."raw_sales"
  );
[0m17:48:15  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 30: select CustomerID as customer_id, customer_name from "dbtsal...
                ^
HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".

[0m17:48:15  On model.jaffle_shop.stg_customers: ROLLBACK
[0m17:48:15  Timing info for model.jaffle_shop.stg_customers (execute): 19:48:15.246333 => 19:48:15.320498
[0m17:48:15  On model.jaffle_shop.stg_customers: Close
[0m17:48:15  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 30: select CustomerID as customer_id, customer_name from "dbtsal...
                  ^
  HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:48:15  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.10s]
[0m17:48:15  Finished running node model.jaffle_shop.stg_customers
[0m17:48:15  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:48:15  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m17:48:15  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m17:48:15  
[0m17:48:15  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m17:48:15    column "customerid" does not exist
[0m17:48:15    LINE 30: select CustomerID as customer_id, customer_name from "dbtsal...
[0m17:48:15                    ^
[0m17:48:15    HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".
[0m17:48:15    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m17:48:15  Connection 'master' was properly closed.
[0m17:48:15  Connection 'list_dbtsales' was properly closed.
[0m17:48:15  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:48:15  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:48:15  
[0m17:48:15  Finished running 1 view model in 0 hours 0 minutes and 0.38 seconds (0.38s).
[0m17:48:15  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m17:48:15  Command `dbt run` failed at 19:48:15.354192 after 0.77 seconds
[0m17:48:15  Flushing usage events
[0m17:48:37  Running with dbt=1.5.4
[0m17:48:37  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:48:37  Registered adapter: postgres=1.5.4
[0m17:48:37  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:48:37  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m17:48:37  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m17:48:38  1699: static parser successfully parsed staging\stg_customers.sql
[0m17:48:38  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m17:48:38  
[0m17:48:38  Acquiring new postgres connection 'master'
[0m17:48:38  Acquiring new postgres connection 'list_dbtsales'
[0m17:48:38  Using postgres connection "list_dbtsales"
[0m17:48:38  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:48:38  Opening a new connection, currently in state init
[0m17:48:38  SQL status: SELECT 5 in 0.0 seconds
[0m17:48:38  On list_dbtsales: Close
[0m17:48:38  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:48:38  Using postgres connection "list_dbtsales_public"
[0m17:48:38  On list_dbtsales_public: BEGIN
[0m17:48:38  Opening a new connection, currently in state init
[0m17:48:38  SQL status: BEGIN in 0.0 seconds
[0m17:48:38  Using postgres connection "list_dbtsales_public"
[0m17:48:38  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:48:38  SQL status: SELECT 9 in 0.0 seconds
[0m17:48:38  On list_dbtsales_public: ROLLBACK
[0m17:48:38  On list_dbtsales_public: Close
[0m17:48:38  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:48:38  Using postgres connection "list_dbtsales_public_stg"
[0m17:48:38  On list_dbtsales_public_stg: BEGIN
[0m17:48:38  Opening a new connection, currently in state closed
[0m17:48:38  SQL status: BEGIN in 0.0 seconds
[0m17:48:38  Using postgres connection "list_dbtsales_public_stg"
[0m17:48:38  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:48:38  SQL status: SELECT 3 in 0.0 seconds
[0m17:48:38  On list_dbtsales_public_stg: ROLLBACK
[0m17:48:38  On list_dbtsales_public_stg: Close
[0m17:48:38  Using postgres connection "master"
[0m17:48:38  On master: BEGIN
[0m17:48:38  Opening a new connection, currently in state init
[0m17:48:38  SQL status: BEGIN in 0.0 seconds
[0m17:48:38  Using postgres connection "master"
[0m17:48:38  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:48:38  SQL status: SELECT 5 in 0.0 seconds
[0m17:48:38  On master: ROLLBACK
[0m17:48:38  Using postgres connection "master"
[0m17:48:38  On master: BEGIN
[0m17:48:38  SQL status: BEGIN in 0.0 seconds
[0m17:48:38  On master: COMMIT
[0m17:48:38  Using postgres connection "master"
[0m17:48:38  On master: COMMIT
[0m17:48:38  SQL status: COMMIT in 0.0 seconds
[0m17:48:38  On master: Close
[0m17:48:38  Concurrency: 1 threads (target='dev')
[0m17:48:38  
[0m17:48:38  Began running node model.jaffle_shop.stg_customers
[0m17:48:38  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:48:38  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m17:48:38  Began compiling node model.jaffle_shop.stg_customers
[0m17:48:38  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:48:38  Timing info for model.jaffle_shop.stg_customers (compile): 19:48:38.425347 => 19:48:38.434363
[0m17:48:38  Began executing node model.jaffle_shop.stg_customers
[0m17:48:38  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:48:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:38  On model.jaffle_shop.stg_customers: BEGIN
[0m17:48:38  Opening a new connection, currently in state init
[0m17:48:38  SQL status: BEGIN in 0.0 seconds
[0m17:48:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:38  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select * from "dbtsales"."public"."raw_sales"
  );
[0m17:48:38  SQL status: CREATE VIEW in 0.0 seconds
[0m17:48:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:38  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m17:48:38  SQL status: ALTER TABLE in 0.0 seconds
[0m17:48:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:38  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m17:48:38  SQL status: ALTER TABLE in 0.0 seconds
[0m17:48:38  On model.jaffle_shop.stg_customers: COMMIT
[0m17:48:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:38  On model.jaffle_shop.stg_customers: COMMIT
[0m17:48:38  SQL status: COMMIT in 0.0 seconds
[0m17:48:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:48:38  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m17:48:38  SQL status: DROP VIEW in 0.0 seconds
[0m17:48:38  Timing info for model.jaffle_shop.stg_customers (execute): 19:48:38.437792 => 19:48:38.642956
[0m17:48:38  On model.jaffle_shop.stg_customers: Close
[0m17:48:38  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.22s]
[0m17:48:38  Finished running node model.jaffle_shop.stg_customers
[0m17:48:38  Using postgres connection "master"
[0m17:48:38  On master: BEGIN
[0m17:48:38  Opening a new connection, currently in state closed
[0m17:48:38  SQL status: BEGIN in 0.0 seconds
[0m17:48:38  On master: COMMIT
[0m17:48:38  Using postgres connection "master"
[0m17:48:38  On master: COMMIT
[0m17:48:38  SQL status: COMMIT in 0.0 seconds
[0m17:48:38  On master: Close
[0m17:48:38  Connection 'master' was properly closed.
[0m17:48:38  Connection 'list_dbtsales' was properly closed.
[0m17:48:38  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:48:38  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:48:38  
[0m17:48:38  Finished running 1 view model in 0 hours 0 minutes and 0.57 seconds (0.57s).
[0m17:48:38  Command end result
[0m17:48:38  
[0m17:48:38  [32mCompleted successfully[0m
[0m17:48:38  
[0m17:48:38  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m17:48:38  Command `dbt run` succeeded at 19:48:38.805759 after 1.20 seconds
[0m17:48:38  Flushing usage events
[0m17:51:41  Running with dbt=1.5.4
[0m17:51:41  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:51:41  Registered adapter: postgres=1.5.4
[0m17:51:41  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:51:41  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m17:51:41  Partial parsing enabled, no changes found, skipping parsing
[0m17:51:41  Found 7 models, 20 tests, 0 snapshots, 0 analyses, 646 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m17:51:41  
[0m17:51:41  Acquiring new postgres connection 'master'
[0m17:51:41  Acquiring new postgres connection 'list_dbtsales'
[0m17:51:41  Using postgres connection "list_dbtsales"
[0m17:51:41  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:51:41  Opening a new connection, currently in state init
[0m17:51:41  SQL status: SELECT 5 in 0.0 seconds
[0m17:51:41  On list_dbtsales: Close
[0m17:51:41  Using postgres connection "list_dbtsales"
[0m17:51:41  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:51:41  Opening a new connection, currently in state closed
[0m17:51:41  SQL status: SELECT 5 in 0.0 seconds
[0m17:51:41  On list_dbtsales: Close
[0m17:51:41  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:51:41  Using postgres connection "list_dbtsales_public"
[0m17:51:41  On list_dbtsales_public: BEGIN
[0m17:51:42  Opening a new connection, currently in state init
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  Using postgres connection "list_dbtsales_public"
[0m17:51:42  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:51:42  SQL status: SELECT 9 in 0.0 seconds
[0m17:51:42  On list_dbtsales_public: ROLLBACK
[0m17:51:42  On list_dbtsales_public: Close
[0m17:51:42  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:51:42  Using postgres connection "list_dbtsales_public_stg"
[0m17:51:42  On list_dbtsales_public_stg: BEGIN
[0m17:51:42  Opening a new connection, currently in state closed
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  Using postgres connection "list_dbtsales_public_stg"
[0m17:51:42  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:51:42  SQL status: SELECT 3 in 0.0 seconds
[0m17:51:42  On list_dbtsales_public_stg: ROLLBACK
[0m17:51:42  On list_dbtsales_public_stg: Close
[0m17:51:42  Using postgres connection "master"
[0m17:51:42  On master: BEGIN
[0m17:51:42  Opening a new connection, currently in state init
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  Using postgres connection "master"
[0m17:51:42  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:51:42  SQL status: SELECT 5 in 0.0 seconds
[0m17:51:42  On master: ROLLBACK
[0m17:51:42  Using postgres connection "master"
[0m17:51:42  On master: BEGIN
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  On master: COMMIT
[0m17:51:42  Using postgres connection "master"
[0m17:51:42  On master: COMMIT
[0m17:51:42  SQL status: COMMIT in 0.0 seconds
[0m17:51:42  On master: Close
[0m17:51:42  Concurrency: 1 threads (target='dev')
[0m17:51:42  
[0m17:51:42  Began running node model.jaffle_shop.raw_sales
[0m17:51:42  1 of 7 START sql table model public.raw_sales .................................. [RUN]
[0m17:51:42  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m17:51:42  Began compiling node model.jaffle_shop.raw_sales
[0m17:51:42  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m17:51:42  Timing info for model.jaffle_shop.raw_sales (compile): 19:51:42.150927 => 19:51:42.155927
[0m17:51:42  Began executing node model.jaffle_shop.raw_sales
[0m17:51:42  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m17:51:42  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:51:42  On model.jaffle_shop.raw_sales: BEGIN
[0m17:51:42  Opening a new connection, currently in state init
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:51:42  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m17:51:42  SQL status: SELECT 2823 in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:51:42  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m17:51:42  SQL status: ALTER TABLE in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:51:42  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m17:51:42  SQL status: ALTER TABLE in 0.0 seconds
[0m17:51:42  On model.jaffle_shop.raw_sales: COMMIT
[0m17:51:42  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:51:42  On model.jaffle_shop.raw_sales: COMMIT
[0m17:51:42  SQL status: COMMIT in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:51:42  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m17:51:42  SQL status: DROP TABLE in 0.0 seconds
[0m17:51:42  Timing info for model.jaffle_shop.raw_sales (execute): 19:51:42.158930 => 19:51:42.372977
[0m17:51:42  On model.jaffle_shop.raw_sales: Close
[0m17:51:42  1 of 7 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.23s]
[0m17:51:42  Finished running node model.jaffle_shop.raw_sales
[0m17:51:42  Began running node model.jaffle_shop.stg_orders
[0m17:51:42  2 of 7 START sql table model public.stg_orders ................................. [RUN]
[0m17:51:42  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_orders)
[0m17:51:42  Began compiling node model.jaffle_shop.stg_orders
[0m17:51:42  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m17:51:42  Timing info for model.jaffle_shop.stg_orders (compile): 19:51:42.389187 => 19:51:42.396186
[0m17:51:42  Began executing node model.jaffle_shop.stg_orders
[0m17:51:42  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:51:42  On model.jaffle_shop.stg_orders: BEGIN
[0m17:51:42  Opening a new connection, currently in state closed
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:51:42  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m17:51:42  SQL status: SELECT 99 in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:51:42  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m17:51:42  SQL status: ALTER TABLE in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:51:42  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m17:51:42  SQL status: ALTER TABLE in 0.0 seconds
[0m17:51:42  On model.jaffle_shop.stg_orders: COMMIT
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:51:42  On model.jaffle_shop.stg_orders: COMMIT
[0m17:51:42  SQL status: COMMIT in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:51:42  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m17:51:42  SQL status: DROP TABLE in 0.0 seconds
[0m17:51:42  Timing info for model.jaffle_shop.stg_orders (execute): 19:51:42.399836 => 19:51:42.504249
[0m17:51:42  On model.jaffle_shop.stg_orders: Close
[0m17:51:42  2 of 7 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.12s]
[0m17:51:42  Finished running node model.jaffle_shop.stg_orders
[0m17:51:42  Began running node model.jaffle_shop.stg_payments
[0m17:51:42  3 of 7 START sql view model public_stg.stg_payments ............................ [RUN]
[0m17:51:42  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m17:51:42  Began compiling node model.jaffle_shop.stg_payments
[0m17:51:42  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m17:51:42  Timing info for model.jaffle_shop.stg_payments (compile): 19:51:42.518263 => 19:51:42.523266
[0m17:51:42  Began executing node model.jaffle_shop.stg_payments
[0m17:51:42  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:51:42  On model.jaffle_shop.stg_payments: BEGIN
[0m17:51:42  Opening a new connection, currently in state closed
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_payments"
[0m17:51:42  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "dbtsales"."public_stg"."stg_payments__dbt_tmp"
    
    
  as (
    clearwith source as (
    select * from "dbtsales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m17:51:42  Postgres adapter: Postgres error: syntax error at or near "clearwith"
LINE 7:     clearwith source as (
            ^

[0m17:51:42  On model.jaffle_shop.stg_payments: ROLLBACK
[0m17:51:42  Timing info for model.jaffle_shop.stg_payments (execute): 19:51:42.526267 => 19:51:42.583785
[0m17:51:42  On model.jaffle_shop.stg_payments: Close
[0m17:51:42  Database Error in model stg_payments (models\staging\stg_payments.sql)
  syntax error at or near "clearwith"
  LINE 7:     clearwith source as (
              ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_payments.sql
[0m17:51:42  3 of 7 ERROR creating sql view model public_stg.stg_payments ................... [[31mERROR[0m in 0.08s]
[0m17:51:42  Finished running node model.jaffle_shop.stg_payments
[0m17:51:42  Began running node model.jaffle_shop.stg_customers
[0m17:51:42  4 of 7 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:51:42  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:51:42  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.stg_customers)
[0m17:51:42  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m17:51:42  Began compiling node model.jaffle_shop.stg_customers
[0m17:51:42  CANCEL query model.jaffle_shop.stg_payments .................................... [[31mCANCEL[0m]
[0m17:51:42  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:51:42  Timing info for model.jaffle_shop.stg_customers (compile): 19:51:42.603785 => 19:51:42.609783
[0m17:51:42  Began executing node model.jaffle_shop.stg_customers
[0m17:51:42  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:51:42  On model.jaffle_shop.stg_customers: BEGIN
[0m17:51:42  Opening a new connection, currently in state closed
[0m17:51:42  SQL status: BEGIN in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:51:42  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select * from "dbtsales"."public"."raw_sales"
  );
[0m17:51:42  SQL status: CREATE VIEW in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:51:42  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m17:51:42  SQL status: ALTER TABLE in 0.0 seconds
[0m17:51:42  On model.jaffle_shop.stg_customers: COMMIT
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:51:42  On model.jaffle_shop.stg_customers: COMMIT
[0m17:51:42  SQL status: COMMIT in 0.0 seconds
[0m17:51:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:51:42  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m17:51:42  SQL status: DROP VIEW in 0.0 seconds
[0m17:51:42  Timing info for model.jaffle_shop.stg_customers (execute): 19:51:42.611786 => 19:51:42.762359
[0m17:51:42  On model.jaffle_shop.stg_customers: Close
[0m17:51:42  4 of 7 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.17s]
[0m17:51:42  Finished running node model.jaffle_shop.stg_customers
[0m17:51:42  
[0m17:51:42  [33mDatabase Error in model stg_payments (models\staging\stg_payments.sql)[0m
[0m17:51:42    syntax error at or near "clearwith"
[0m17:51:42    LINE 7:     clearwith source as (
[0m17:51:42                ^
[0m17:51:42    compiled Code at target\run\jaffle_shop\models\staging\stg_payments.sql
[0m17:51:42  Connection 'master' was properly closed.
[0m17:51:42  Connection 'list_dbtsales' was properly closed.
[0m17:51:42  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:51:42  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m17:51:42  
[0m17:51:42  Finished running 2 table models, 1 view model in 0 hours 0 minutes and 0.88 seconds (0.88s).
[0m17:51:42  Encountered an error:
FailFast Error in model stg_payments (models\staging\stg_payments.sql)
  Failing early due to test failure or runtime error
[0m17:51:42  Command `dbt run` failed at 19:51:42.787995 after 1.21 seconds
[0m17:51:42  Flushing usage events
[0m17:58:00  Running with dbt=1.5.4
[0m17:58:00  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:58:00  Registered adapter: postgres=1.5.4
[0m17:58:00  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:58:00  Partial parsing enabled: 3 files deleted, 0 files added, 1 files changed.
[0m17:58:00  Partial parsing: deleted file: jaffle_shop://models\orders.sql
[0m17:58:00  Partial parsing: deleted file: jaffle_shop://macros\get_payment_method.sql
[0m17:58:00  Partial parsing: deleted file: jaffle_shop://models\staging\stg_payments.sql
[0m17:58:00  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m17:58:00  1699: static parser successfully parsed customers.sql
[0m17:58:00  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Did not find matching node for patch with name 'orders' in the 'models' section of file 'models\schema.yml'
[0m17:58:00  Command `dbt run` failed at 19:58:00.940874 after 0.33 seconds
[0m17:58:00  Flushing usage events
[0m17:58:37  Running with dbt=1.5.4
[0m17:58:37  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:58:37  Registered adapter: postgres=1.5.4
[0m17:58:37  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:58:37  Partial parsing enabled: 3 files deleted, 0 files added, 2 files changed.
[0m17:58:37  Partial parsing: updated file: jaffle_shop://models\schema.yml
[0m17:58:37  Partial parsing: deleted file: jaffle_shop://models\staging\stg_payments.sql
[0m17:58:37  Partial parsing: deleted file: jaffle_shop://macros\get_payment_method.sql
[0m17:58:37  Partial parsing: deleted file: jaffle_shop://models\orders.sql
[0m17:58:37  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m17:58:37  1699: static parser successfully parsed customers.sql
[0m17:58:37  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Did not find matching node for patch with name 'stg_payments' in the 'models' section of file 'models\staging\schema.yml'
[0m17:58:37  Command `dbt run` failed at 19:58:37.679220 after 0.48 seconds
[0m17:58:37  Flushing usage events
[0m17:59:12  Running with dbt=1.5.4
[0m17:59:12  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:59:12  Registered adapter: postgres=1.5.4
[0m17:59:12  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:59:12  Partial parsing enabled: 3 files deleted, 0 files added, 3 files changed.
[0m17:59:12  Partial parsing: updated file: jaffle_shop://models\schema.yml
[0m17:59:12  Partial parsing: updated file: jaffle_shop://models\staging\schema.yml
[0m17:59:12  Partial parsing: deleted file: jaffle_shop://models\orders.sql
[0m17:59:12  Partial parsing: deleted file: jaffle_shop://macros\get_payment_method.sql
[0m17:59:12  Partial parsing: deleted file: jaffle_shop://models\staging\stg_payments.sql
[0m17:59:12  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m17:59:12  1699: static parser successfully parsed customers.sql
[0m17:59:12  Found 5 models, 7 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m17:59:12  
[0m17:59:12  Acquiring new postgres connection 'master'
[0m17:59:12  Acquiring new postgres connection 'list_dbtsales'
[0m17:59:12  Using postgres connection "list_dbtsales"
[0m17:59:12  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:59:12  Opening a new connection, currently in state init
[0m17:59:12  SQL status: SELECT 5 in 0.0 seconds
[0m17:59:12  On list_dbtsales: Close
[0m17:59:12  Using postgres connection "list_dbtsales"
[0m17:59:12  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:59:12  Opening a new connection, currently in state closed
[0m17:59:12  SQL status: SELECT 5 in 0.0 seconds
[0m17:59:12  On list_dbtsales: Close
[0m17:59:12  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m17:59:12  Using postgres connection "list_dbtsales_public_stg"
[0m17:59:12  On list_dbtsales_public_stg: BEGIN
[0m17:59:12  Opening a new connection, currently in state init
[0m17:59:12  SQL status: BEGIN in 0.0 seconds
[0m17:59:12  Using postgres connection "list_dbtsales_public_stg"
[0m17:59:12  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:59:12  SQL status: SELECT 2 in 0.0 seconds
[0m17:59:12  On list_dbtsales_public_stg: ROLLBACK
[0m17:59:12  On list_dbtsales_public_stg: Close
[0m17:59:12  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m17:59:12  Using postgres connection "list_dbtsales_public"
[0m17:59:12  On list_dbtsales_public: BEGIN
[0m17:59:12  Opening a new connection, currently in state closed
[0m17:59:12  SQL status: BEGIN in 0.0 seconds
[0m17:59:12  Using postgres connection "list_dbtsales_public"
[0m17:59:12  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:59:12  SQL status: SELECT 9 in 0.0 seconds
[0m17:59:12  On list_dbtsales_public: ROLLBACK
[0m17:59:12  On list_dbtsales_public: Close
[0m17:59:12  Using postgres connection "master"
[0m17:59:12  On master: BEGIN
[0m17:59:12  Opening a new connection, currently in state init
[0m17:59:12  SQL status: BEGIN in 0.0 seconds
[0m17:59:12  Using postgres connection "master"
[0m17:59:12  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:59:12  SQL status: SELECT 4 in 0.0 seconds
[0m17:59:12  On master: ROLLBACK
[0m17:59:12  Using postgres connection "master"
[0m17:59:12  On master: BEGIN
[0m17:59:12  SQL status: BEGIN in 0.0 seconds
[0m17:59:12  On master: COMMIT
[0m17:59:12  Using postgres connection "master"
[0m17:59:12  On master: COMMIT
[0m17:59:12  SQL status: COMMIT in 0.0 seconds
[0m17:59:12  On master: Close
[0m17:59:12  Concurrency: 1 threads (target='dev')
[0m17:59:12  
[0m17:59:12  Began running node model.jaffle_shop.raw_sales
[0m17:59:12  1 of 5 START sql table model public.raw_sales .................................. [RUN]
[0m17:59:12  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m17:59:12  Began compiling node model.jaffle_shop.raw_sales
[0m17:59:12  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m17:59:12  Timing info for model.jaffle_shop.raw_sales (compile): 19:59:12.827191 => 19:59:12.833189
[0m17:59:12  Began executing node model.jaffle_shop.raw_sales
[0m17:59:12  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m17:59:12  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:59:12  On model.jaffle_shop.raw_sales: BEGIN
[0m17:59:12  Opening a new connection, currently in state init
[0m17:59:12  SQL status: BEGIN in 0.0 seconds
[0m17:59:12  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:59:12  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m17:59:12  SQL status: SELECT 2823 in 0.0 seconds
[0m17:59:12  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:59:12  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m17:59:12  SQL status: ALTER TABLE in 0.0 seconds
[0m17:59:12  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:59:12  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m17:59:12  SQL status: ALTER TABLE in 0.0 seconds
[0m17:59:12  On model.jaffle_shop.raw_sales: COMMIT
[0m17:59:12  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:59:12  On model.jaffle_shop.raw_sales: COMMIT
[0m17:59:13  SQL status: COMMIT in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:59:13  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m17:59:13  SQL status: DROP TABLE in 0.0 seconds
[0m17:59:13  Timing info for model.jaffle_shop.raw_sales (execute): 19:59:12.836122 => 19:59:13.047646
[0m17:59:13  On model.jaffle_shop.raw_sales: Close
[0m17:59:13  1 of 5 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.23s]
[0m17:59:13  Finished running node model.jaffle_shop.raw_sales
[0m17:59:13  Began running node model.jaffle_shop.stg_orders
[0m17:59:13  2 of 5 START sql table model public.stg_orders ................................. [RUN]
[0m17:59:13  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_orders)
[0m17:59:13  Began compiling node model.jaffle_shop.stg_orders
[0m17:59:13  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m17:59:13  Timing info for model.jaffle_shop.stg_orders (compile): 19:59:13.062979 => 19:59:13.116570
[0m17:59:13  Began executing node model.jaffle_shop.stg_orders
[0m17:59:13  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:59:13  On model.jaffle_shop.stg_orders: BEGIN
[0m17:59:13  Opening a new connection, currently in state closed
[0m17:59:13  SQL status: BEGIN in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:59:13  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m17:59:13  SQL status: SELECT 99 in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:59:13  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m17:59:13  SQL status: ALTER TABLE in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:59:13  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m17:59:13  SQL status: ALTER TABLE in 0.0 seconds
[0m17:59:13  On model.jaffle_shop.stg_orders: COMMIT
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:59:13  On model.jaffle_shop.stg_orders: COMMIT
[0m17:59:13  SQL status: COMMIT in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_orders"
[0m17:59:13  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m17:59:13  SQL status: DROP TABLE in 0.0 seconds
[0m17:59:13  Timing info for model.jaffle_shop.stg_orders (execute): 19:59:13.121569 => 19:59:13.222679
[0m17:59:13  On model.jaffle_shop.stg_orders: Close
[0m17:59:13  2 of 5 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.17s]
[0m17:59:13  Finished running node model.jaffle_shop.stg_orders
[0m17:59:13  Began running node model.jaffle_shop.stg_customers
[0m17:59:13  3 of 5 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:59:13  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_customers)
[0m17:59:13  Began compiling node model.jaffle_shop.stg_customers
[0m17:59:13  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:59:13  Timing info for model.jaffle_shop.stg_customers (compile): 19:59:13.237532 => 19:59:13.245531
[0m17:59:13  Began executing node model.jaffle_shop.stg_customers
[0m17:59:13  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:59:13  On model.jaffle_shop.stg_customers: BEGIN
[0m17:59:13  Opening a new connection, currently in state closed
[0m17:59:13  SQL status: BEGIN in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:59:13  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select * from "dbtsales"."public"."raw_sales"
  );
[0m17:59:13  SQL status: CREATE VIEW in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:59:13  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m17:59:13  SQL status: ALTER TABLE in 0.0 seconds
[0m17:59:13  On model.jaffle_shop.stg_customers: COMMIT
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:59:13  On model.jaffle_shop.stg_customers: COMMIT
[0m17:59:13  SQL status: COMMIT in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:59:13  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m17:59:13  SQL status: DROP VIEW in 0.0 seconds
[0m17:59:13  Timing info for model.jaffle_shop.stg_customers (execute): 19:59:13.247532 => 19:59:13.347073
[0m17:59:13  On model.jaffle_shop.stg_customers: Close
[0m17:59:13  3 of 5 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.12s]
[0m17:59:13  Finished running node model.jaffle_shop.stg_customers
[0m17:59:13  Began running node model.jaffle_shop.v_staging_orders
[0m17:59:13  4 of 5 START sql view model public_stg.v_staging_orders ........................ [RUN]
[0m17:59:13  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.v_staging_orders)
[0m17:59:13  Began compiling node model.jaffle_shop.v_staging_orders
[0m17:59:13  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:59:13  On model.jaffle_shop.v_staging_orders: BEGIN
[0m17:59:13  Opening a new connection, currently in state closed
[0m17:59:13  SQL status: BEGIN in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:59:13  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m17:59:13  SQL status: SELECT 4 in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:59:13  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m17:59:13  SQL status: SELECT 4 in 0.0 seconds
[0m17:59:13  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m17:59:13  Timing info for model.jaffle_shop.v_staging_orders (compile): 19:59:13.362836 => 19:59:13.577260
[0m17:59:13  Began executing node model.jaffle_shop.v_staging_orders
[0m17:59:13  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m17:59:13  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:59:13  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "dbtsales"."public_stg"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "dbtsales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m17:59:13  SQL status: CREATE VIEW in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:59:13  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "dbtsales"."public_stg"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m17:59:13  SQL status: ALTER TABLE in 0.0 seconds
[0m17:59:13  On model.jaffle_shop.v_staging_orders: COMMIT
[0m17:59:13  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:59:13  On model.jaffle_shop.v_staging_orders: COMMIT
[0m17:59:13  SQL status: COMMIT in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m17:59:13  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "dbtsales"."public_stg"."v_staging_orders__dbt_backup" cascade
[0m17:59:13  SQL status: DROP VIEW in 0.0 seconds
[0m17:59:13  Timing info for model.jaffle_shop.v_staging_orders (execute): 19:59:13.581247 => 19:59:13.649392
[0m17:59:13  On model.jaffle_shop.v_staging_orders: Close
[0m17:59:13  4 of 5 OK created sql view model public_stg.v_staging_orders ................... [[32mCREATE VIEW[0m in 0.30s]
[0m17:59:13  Finished running node model.jaffle_shop.v_staging_orders
[0m17:59:13  Began running node model.jaffle_shop.customers
[0m17:59:13  5 of 5 START sql view model public.customers ................................... [RUN]
[0m17:59:13  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m17:59:13  Began compiling node model.jaffle_shop.customers
[0m17:59:13  Writing injected SQL for node "model.jaffle_shop.customers"
[0m17:59:13  Timing info for model.jaffle_shop.customers (compile): 19:59:13.665950 => 19:59:13.675464
[0m17:59:13  Began executing node model.jaffle_shop.customers
[0m17:59:13  Writing runtime sql for node "model.jaffle_shop.customers"
[0m17:59:13  Using postgres connection "model.jaffle_shop.customers"
[0m17:59:13  On model.jaffle_shop.customers: BEGIN
[0m17:59:13  Opening a new connection, currently in state closed
[0m17:59:13  SQL status: BEGIN in 0.0 seconds
[0m17:59:13  Using postgres connection "model.jaffle_shop.customers"
[0m17:59:13  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),


final as (

    select
        customers.customerid,
        customers.CUSTOMERNAME

    from customers

)

select * from final
  );
[0m17:59:13  Postgres adapter: Postgres error: column customers.customerid does not exist
LINE 19:         customers.customerid,
                 ^
HINT:  Perhaps you meant to reference the column "customers.CustomerID".

[0m17:59:13  On model.jaffle_shop.customers: ROLLBACK
[0m17:59:13  Timing info for model.jaffle_shop.customers (execute): 19:59:13.678503 => 19:59:13.730376
[0m17:59:13  On model.jaffle_shop.customers: Close
[0m17:59:13  Database Error in model customers (models\customers.sql)
  column customers.customerid does not exist
  LINE 19:         customers.customerid,
                   ^
  HINT:  Perhaps you meant to reference the column "customers.CustomerID".
  compiled Code at target\run\jaffle_shop\models\customers.sql
[0m17:59:13  5 of 5 ERROR creating sql view model public.customers .......................... [[31mERROR[0m in 0.08s]
[0m17:59:13  Finished running node model.jaffle_shop.customers
[0m17:59:13  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m17:59:13  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m17:59:13  CANCEL query model.jaffle_shop.customers ....................................... [[31mCANCEL[0m]
[0m17:59:13  
[0m17:59:13  [33mDatabase Error in model customers (models\customers.sql)[0m
[0m17:59:13    column customers.customerid does not exist
[0m17:59:13    LINE 19:         customers.customerid,
[0m17:59:13                     ^
[0m17:59:13    HINT:  Perhaps you meant to reference the column "customers.CustomerID".
[0m17:59:13    compiled Code at target\run\jaffle_shop\models\customers.sql
[0m17:59:13  Connection 'master' was properly closed.
[0m17:59:13  Connection 'list_dbtsales' was properly closed.
[0m17:59:13  Connection 'list_dbtsales_public' was properly closed.
[0m17:59:13  Connection 'model.jaffle_shop.customers' was properly closed.
[0m17:59:13  
[0m17:59:13  Finished running 2 table models, 3 view models in 0 hours 0 minutes and 1.19 seconds (1.19s).
[0m17:59:13  Encountered an error:
FailFast Error in model customers (models\customers.sql)
  Failing early due to test failure or runtime error
[0m17:59:13  Command `dbt run` failed at 19:59:13.771828 after 1.65 seconds
[0m17:59:13  Flushing usage events
[0m18:00:46  Running with dbt=1.5.4
[0m18:00:46  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:00:46  Registered adapter: postgres=1.5.4
[0m18:00:46  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:00:46  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:00:46  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m18:00:46  1699: static parser successfully parsed customers.sql
[0m18:00:46  Found 5 models, 7 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:00:46  
[0m18:00:46  Acquiring new postgres connection 'master'
[0m18:00:46  Acquiring new postgres connection 'list_dbtsales'
[0m18:00:46  Using postgres connection "list_dbtsales"
[0m18:00:46  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:00:46  Opening a new connection, currently in state init
[0m18:00:46  SQL status: SELECT 5 in 0.0 seconds
[0m18:00:46  On list_dbtsales: Close
[0m18:00:46  Using postgres connection "list_dbtsales"
[0m18:00:46  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:00:46  Opening a new connection, currently in state closed
[0m18:00:46  SQL status: SELECT 5 in 0.0 seconds
[0m18:00:46  On list_dbtsales: Close
[0m18:00:46  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:00:46  Using postgres connection "list_dbtsales_public"
[0m18:00:46  On list_dbtsales_public: BEGIN
[0m18:00:46  Opening a new connection, currently in state init
[0m18:00:46  SQL status: BEGIN in 0.0 seconds
[0m18:00:46  Using postgres connection "list_dbtsales_public"
[0m18:00:46  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:00:46  SQL status: SELECT 9 in 0.0 seconds
[0m18:00:46  On list_dbtsales_public: ROLLBACK
[0m18:00:46  On list_dbtsales_public: Close
[0m18:00:46  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:00:46  Using postgres connection "list_dbtsales_public_stg"
[0m18:00:46  On list_dbtsales_public_stg: BEGIN
[0m18:00:46  Opening a new connection, currently in state closed
[0m18:00:46  SQL status: BEGIN in 0.0 seconds
[0m18:00:46  Using postgres connection "list_dbtsales_public_stg"
[0m18:00:46  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:00:46  SQL status: SELECT 3 in 0.0 seconds
[0m18:00:46  On list_dbtsales_public_stg: ROLLBACK
[0m18:00:46  On list_dbtsales_public_stg: Close
[0m18:00:46  Using postgres connection "master"
[0m18:00:46  On master: BEGIN
[0m18:00:46  Opening a new connection, currently in state init
[0m18:00:46  SQL status: BEGIN in 0.0 seconds
[0m18:00:46  Using postgres connection "master"
[0m18:00:46  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:00:46  SQL status: SELECT 5 in 0.0 seconds
[0m18:00:46  On master: ROLLBACK
[0m18:00:46  Using postgres connection "master"
[0m18:00:46  On master: BEGIN
[0m18:00:46  SQL status: BEGIN in 0.0 seconds
[0m18:00:46  On master: COMMIT
[0m18:00:46  Using postgres connection "master"
[0m18:00:46  On master: COMMIT
[0m18:00:46  SQL status: COMMIT in 0.0 seconds
[0m18:00:46  On master: Close
[0m18:00:46  Concurrency: 1 threads (target='dev')
[0m18:00:46  
[0m18:00:46  Began running node model.jaffle_shop.raw_sales
[0m18:00:46  1 of 5 START sql table model public.raw_sales .................................. [RUN]
[0m18:00:46  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:00:46  Began compiling node model.jaffle_shop.raw_sales
[0m18:00:46  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:00:46  Timing info for model.jaffle_shop.raw_sales (compile): 20:00:46.737502 => 20:00:46.743810
[0m18:00:46  Began executing node model.jaffle_shop.raw_sales
[0m18:00:46  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:00:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:00:46  On model.jaffle_shop.raw_sales: BEGIN
[0m18:00:46  Opening a new connection, currently in state init
[0m18:00:46  SQL status: BEGIN in 0.0 seconds
[0m18:00:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:00:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:00:46  SQL status: SELECT 2823 in 0.0 seconds
[0m18:00:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:00:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:00:46  SQL status: ALTER TABLE in 0.0 seconds
[0m18:00:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:00:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:00:46  SQL status: ALTER TABLE in 0.0 seconds
[0m18:00:46  On model.jaffle_shop.raw_sales: COMMIT
[0m18:00:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:00:46  On model.jaffle_shop.raw_sales: COMMIT
[0m18:00:46  SQL status: COMMIT in 0.0 seconds
[0m18:00:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:00:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:00:46  SQL status: DROP TABLE in 0.0 seconds
[0m18:00:46  Timing info for model.jaffle_shop.raw_sales (execute): 20:00:46.745804 => 20:00:46.940094
[0m18:00:46  On model.jaffle_shop.raw_sales: Close
[0m18:00:46  1 of 5 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.21s]
[0m18:00:46  Finished running node model.jaffle_shop.raw_sales
[0m18:00:46  Began running node model.jaffle_shop.stg_orders
[0m18:00:46  2 of 5 START sql table model public.stg_orders ................................. [RUN]
[0m18:00:46  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_orders)
[0m18:00:46  Began compiling node model.jaffle_shop.stg_orders
[0m18:00:46  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m18:00:46  Timing info for model.jaffle_shop.stg_orders (compile): 20:00:46.954729 => 20:00:46.962095
[0m18:00:46  Began executing node model.jaffle_shop.stg_orders
[0m18:00:47  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:00:47  On model.jaffle_shop.stg_orders: BEGIN
[0m18:00:47  Opening a new connection, currently in state closed
[0m18:00:47  SQL status: BEGIN in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:00:47  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m18:00:47  SQL status: SELECT 99 in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:00:47  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m18:00:47  SQL status: ALTER TABLE in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:00:47  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "dbtsales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m18:00:47  SQL status: ALTER TABLE in 0.0 seconds
[0m18:00:47  On model.jaffle_shop.stg_orders: COMMIT
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:00:47  On model.jaffle_shop.stg_orders: COMMIT
[0m18:00:47  SQL status: COMMIT in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:00:47  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop table if exists "dbtsales"."public"."stg_orders__dbt_backup" cascade
[0m18:00:47  SQL status: DROP TABLE in 0.0 seconds
[0m18:00:47  Timing info for model.jaffle_shop.stg_orders (execute): 20:00:46.964090 => 20:00:47.085975
[0m18:00:47  On model.jaffle_shop.stg_orders: Close
[0m18:00:47  2 of 5 OK created sql table model public.stg_orders ............................ [[32mSELECT 99[0m in 0.14s]
[0m18:00:47  Finished running node model.jaffle_shop.stg_orders
[0m18:00:47  Began running node model.jaffle_shop.stg_customers
[0m18:00:47  3 of 5 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:00:47  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_customers)
[0m18:00:47  Began compiling node model.jaffle_shop.stg_customers
[0m18:00:47  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:00:47  Timing info for model.jaffle_shop.stg_customers (compile): 20:00:47.098971 => 20:00:47.102971
[0m18:00:47  Began executing node model.jaffle_shop.stg_customers
[0m18:00:47  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:00:47  On model.jaffle_shop.stg_customers: BEGIN
[0m18:00:47  Opening a new connection, currently in state closed
[0m18:00:47  SQL status: BEGIN in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:00:47  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select * from "dbtsales"."public"."raw_sales"
  );
[0m18:00:47  SQL status: CREATE VIEW in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:00:47  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:00:47  SQL status: ALTER TABLE in 0.0 seconds
[0m18:00:47  On model.jaffle_shop.stg_customers: COMMIT
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:00:47  On model.jaffle_shop.stg_customers: COMMIT
[0m18:00:47  SQL status: COMMIT in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:00:47  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:00:47  SQL status: DROP VIEW in 0.0 seconds
[0m18:00:47  Timing info for model.jaffle_shop.stg_customers (execute): 20:00:47.105974 => 20:00:47.186022
[0m18:00:47  On model.jaffle_shop.stg_customers: Close
[0m18:00:47  3 of 5 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.09s]
[0m18:00:47  Finished running node model.jaffle_shop.stg_customers
[0m18:00:47  Began running node model.jaffle_shop.v_staging_orders
[0m18:00:47  4 of 5 START sql view model public_stg.v_staging_orders ........................ [RUN]
[0m18:00:47  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.v_staging_orders)
[0m18:00:47  Began compiling node model.jaffle_shop.v_staging_orders
[0m18:00:47  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m18:00:47  On model.jaffle_shop.v_staging_orders: BEGIN
[0m18:00:47  Opening a new connection, currently in state closed
[0m18:00:47  SQL status: BEGIN in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m18:00:47  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m18:00:47  SQL status: SELECT 4 in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m18:00:47  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'stg_orders'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m18:00:47  SQL status: SELECT 4 in 0.0 seconds
[0m18:00:47  Writing injected SQL for node "model.jaffle_shop.v_staging_orders"
[0m18:00:47  Timing info for model.jaffle_shop.v_staging_orders (compile): 20:00:47.199023 => 20:00:47.347068
[0m18:00:47  Began executing node model.jaffle_shop.v_staging_orders
[0m18:00:47  Writing runtime sql for node "model.jaffle_shop.v_staging_orders"
[0m18:00:47  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m18:00:47  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */

  create view "dbtsales"."public_stg"."v_staging_orders__dbt_tmp"
    
    
  as (
    --AutomateDV code to generate a staging table in DV model



-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status

    FROM "dbtsales"."public"."stg_orders"
),

derived_columns AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    '1' AS SOURCE,
    28/05/2023 AS LOAD_DATETIME,
    ORDER_DATE AS EFFECTIVE_FROM,
    ORDER_DATE AS START_DATE,
    TO_DATE('99991231','YYYYMMDD') AS END_DATE

    FROM source_data
),

columns_to_select AS (

    SELECT

    order_id,
    customer_id,
    order_date,
    status,
    SOURCE,
    LOAD_DATETIME,
    EFFECTIVE_FROM,
    START_DATE,
    END_DATE

    FROM derived_columns
)

SELECT * FROM columns_to_select
  );
[0m18:00:47  SQL status: CREATE VIEW in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m18:00:47  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
alter table "dbtsales"."public_stg"."v_staging_orders__dbt_tmp" rename to "v_staging_orders"
[0m18:00:47  SQL status: ALTER TABLE in 0.0 seconds
[0m18:00:47  On model.jaffle_shop.v_staging_orders: COMMIT
[0m18:00:47  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m18:00:47  On model.jaffle_shop.v_staging_orders: COMMIT
[0m18:00:47  SQL status: COMMIT in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.v_staging_orders"
[0m18:00:47  On model.jaffle_shop.v_staging_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.v_staging_orders"} */
drop view if exists "dbtsales"."public_stg"."v_staging_orders__dbt_backup" cascade
[0m18:00:47  SQL status: DROP VIEW in 0.0 seconds
[0m18:00:47  Timing info for model.jaffle_shop.v_staging_orders (execute): 20:00:47.349064 => 20:00:47.398715
[0m18:00:47  On model.jaffle_shop.v_staging_orders: Close
[0m18:00:47  4 of 5 OK created sql view model public_stg.v_staging_orders ................... [[32mCREATE VIEW[0m in 0.20s]
[0m18:00:47  Finished running node model.jaffle_shop.v_staging_orders
[0m18:00:47  Began running node model.jaffle_shop.customers
[0m18:00:47  5 of 5 START sql view model public.customers ................................... [RUN]
[0m18:00:47  Re-using an available connection from the pool (formerly model.jaffle_shop.v_staging_orders, now model.jaffle_shop.customers)
[0m18:00:47  Began compiling node model.jaffle_shop.customers
[0m18:00:47  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:00:47  Timing info for model.jaffle_shop.customers (compile): 20:00:47.413136 => 20:00:47.418294
[0m18:00:47  Began executing node model.jaffle_shop.customers
[0m18:00:47  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:00:47  Using postgres connection "model.jaffle_shop.customers"
[0m18:00:47  On model.jaffle_shop.customers: BEGIN
[0m18:00:47  Opening a new connection, currently in state closed
[0m18:00:47  SQL status: BEGIN in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.customers"
[0m18:00:47  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

-- with customers as (

--     select * from "dbtsales"."public_stg"."stg_customers"

-- ),


-- final as (

--     select
--         customerid,
--         CUSTOMERNAME
--     from customers

-- )

select * from "dbtsales"."public_stg"."stg_customers"
  );
[0m18:00:47  SQL status: CREATE VIEW in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.customers"
[0m18:00:47  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m18:00:47  SQL status: ALTER TABLE in 0.0 seconds
[0m18:00:47  On model.jaffle_shop.customers: COMMIT
[0m18:00:47  Using postgres connection "model.jaffle_shop.customers"
[0m18:00:47  On model.jaffle_shop.customers: COMMIT
[0m18:00:47  SQL status: COMMIT in 0.0 seconds
[0m18:00:47  Using postgres connection "model.jaffle_shop.customers"
[0m18:00:47  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m18:00:47  SQL status: DROP VIEW in 0.0 seconds
[0m18:00:47  Timing info for model.jaffle_shop.customers (execute): 20:00:47.421237 => 20:00:47.497613
[0m18:00:47  On model.jaffle_shop.customers: Close
[0m18:00:47  5 of 5 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.09s]
[0m18:00:47  Finished running node model.jaffle_shop.customers
[0m18:00:47  Using postgres connection "master"
[0m18:00:47  On master: BEGIN
[0m18:00:47  Opening a new connection, currently in state closed
[0m18:00:47  SQL status: BEGIN in 0.0 seconds
[0m18:00:47  On master: COMMIT
[0m18:00:47  Using postgres connection "master"
[0m18:00:47  On master: COMMIT
[0m18:00:47  SQL status: COMMIT in 0.0 seconds
[0m18:00:47  On master: Close
[0m18:00:47  Connection 'master' was properly closed.
[0m18:00:47  Connection 'list_dbtsales' was properly closed.
[0m18:00:47  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:00:47  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:00:47  
[0m18:00:47  Finished running 2 table models, 3 view models in 0 hours 0 minutes and 1.05 seconds (1.05s).
[0m18:00:47  Command end result
[0m18:00:47  
[0m18:00:47  [32mCompleted successfully[0m
[0m18:00:47  
[0m18:00:47  Done. PASS=5 WARN=0 ERROR=0 SKIP=0 TOTAL=5
[0m18:00:47  Command `dbt run` succeeded at 20:00:47.564067 after 1.49 seconds
[0m18:00:47  Flushing usage events
[0m18:02:25  Running with dbt=1.5.4
[0m18:02:25  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:02:25  Registered adapter: postgres=1.5.4
[0m18:02:25  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:02:25  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m18:02:25  Partial parsing enabled, no changes found, skipping parsing
[0m18:02:26  Found 5 models, 7 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:02:26  
[0m18:02:26  Acquiring new postgres connection 'master'
[0m18:02:26  Acquiring new postgres connection 'list_dbtsales'
[0m18:02:26  Using postgres connection "list_dbtsales"
[0m18:02:26  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:02:26  Opening a new connection, currently in state init
[0m18:02:26  SQL status: SELECT 5 in 0.0 seconds
[0m18:02:26  On list_dbtsales: Close
[0m18:02:26  Using postgres connection "list_dbtsales"
[0m18:02:26  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:02:26  Opening a new connection, currently in state closed
[0m18:02:26  SQL status: SELECT 5 in 0.0 seconds
[0m18:02:26  On list_dbtsales: Close
[0m18:02:26  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:02:26  Using postgres connection "list_dbtsales_public_stg"
[0m18:02:26  On list_dbtsales_public_stg: BEGIN
[0m18:02:26  Opening a new connection, currently in state init
[0m18:02:26  SQL status: BEGIN in 0.0 seconds
[0m18:02:26  Using postgres connection "list_dbtsales_public_stg"
[0m18:02:26  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:02:26  SQL status: SELECT 0 in 0.0 seconds
[0m18:02:26  On list_dbtsales_public_stg: ROLLBACK
[0m18:02:26  On list_dbtsales_public_stg: Close
[0m18:02:26  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:02:26  Using postgres connection "list_dbtsales_public"
[0m18:02:26  On list_dbtsales_public: BEGIN
[0m18:02:26  Opening a new connection, currently in state closed
[0m18:02:26  SQL status: BEGIN in 0.0 seconds
[0m18:02:26  Using postgres connection "list_dbtsales_public"
[0m18:02:26  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:02:26  SQL status: SELECT 1 in 0.0 seconds
[0m18:02:26  On list_dbtsales_public: ROLLBACK
[0m18:02:26  On list_dbtsales_public: Close
[0m18:02:26  Using postgres connection "master"
[0m18:02:26  On master: BEGIN
[0m18:02:26  Opening a new connection, currently in state init
[0m18:02:26  SQL status: BEGIN in 0.0 seconds
[0m18:02:26  Using postgres connection "master"
[0m18:02:26  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:02:26  SQL status: SELECT 0 in 0.0 seconds
[0m18:02:26  On master: ROLLBACK
[0m18:02:26  Using postgres connection "master"
[0m18:02:26  On master: BEGIN
[0m18:02:26  SQL status: BEGIN in 0.0 seconds
[0m18:02:26  On master: COMMIT
[0m18:02:26  Using postgres connection "master"
[0m18:02:26  On master: COMMIT
[0m18:02:26  SQL status: COMMIT in 0.0 seconds
[0m18:02:26  On master: Close
[0m18:02:26  Concurrency: 1 threads (target='dev')
[0m18:02:26  
[0m18:02:26  Began running node model.jaffle_shop.raw_sales
[0m18:02:26  1 of 5 START sql table model public.raw_sales .................................. [RUN]
[0m18:02:26  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:02:26  Began compiling node model.jaffle_shop.raw_sales
[0m18:02:26  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:02:26  Timing info for model.jaffle_shop.raw_sales (compile): 20:02:26.258399 => 20:02:26.265214
[0m18:02:26  Began executing node model.jaffle_shop.raw_sales
[0m18:02:26  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:02:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:02:26  On model.jaffle_shop.raw_sales: BEGIN
[0m18:02:26  Opening a new connection, currently in state init
[0m18:02:26  SQL status: BEGIN in 0.0 seconds
[0m18:02:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:02:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:02:26  SQL status: SELECT 2823 in 0.0 seconds
[0m18:02:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:02:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:02:26  SQL status: ALTER TABLE in 0.0 seconds
[0m18:02:26  On model.jaffle_shop.raw_sales: COMMIT
[0m18:02:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:02:26  On model.jaffle_shop.raw_sales: COMMIT
[0m18:02:26  SQL status: COMMIT in 0.0 seconds
[0m18:02:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:02:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:02:26  SQL status: DROP TABLE in 0.0 seconds
[0m18:02:26  Timing info for model.jaffle_shop.raw_sales (execute): 20:02:26.268216 => 20:02:26.458662
[0m18:02:26  On model.jaffle_shop.raw_sales: Close
[0m18:02:26  1 of 5 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.21s]
[0m18:02:26  Finished running node model.jaffle_shop.raw_sales
[0m18:02:26  Began running node model.jaffle_shop.stg_orders
[0m18:02:26  2 of 5 START sql table model public.stg_orders ................................. [RUN]
[0m18:02:26  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_orders)
[0m18:02:26  Began compiling node model.jaffle_shop.stg_orders
[0m18:02:26  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m18:02:26  Timing info for model.jaffle_shop.stg_orders (compile): 20:02:26.473994 => 20:02:26.482993
[0m18:02:26  Began executing node model.jaffle_shop.stg_orders
[0m18:02:26  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m18:02:26  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:02:26  On model.jaffle_shop.stg_orders: BEGIN
[0m18:02:26  Opening a new connection, currently in state closed
[0m18:02:26  SQL status: BEGIN in 0.0 seconds
[0m18:02:26  Using postgres connection "model.jaffle_shop.stg_orders"
[0m18:02:26  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  
    

  create  table "dbtsales"."public"."stg_orders__dbt_tmp"
  
  
    as
  
  (
    with source as (
    select * from "dbtsales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
  
[0m18:02:26  Postgres adapter: Postgres error: relation "public.raw_orders" does not exist
LINE 13:     select * from "dbtsales"."public"."raw_orders"
                           ^

[0m18:02:26  On model.jaffle_shop.stg_orders: ROLLBACK
[0m18:02:26  Timing info for model.jaffle_shop.stg_orders (execute): 20:02:26.484997 => 20:02:26.523995
[0m18:02:26  On model.jaffle_shop.stg_orders: Close
[0m18:02:26  Database Error in model stg_orders (models\raw_stage\stg_orders.sql)
  relation "public.raw_orders" does not exist
  LINE 13:     select * from "dbtsales"."public"."raw_orders"
                             ^
  compiled Code at target\run\jaffle_shop\models\raw_stage\stg_orders.sql
[0m18:02:26  2 of 5 ERROR creating sql table model public.stg_orders ........................ [[31mERROR[0m in 0.06s]
[0m18:02:26  Finished running node model.jaffle_shop.stg_orders
[0m18:02:26  Began running node model.jaffle_shop.stg_customers
[0m18:02:26  3 of 5 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:02:26  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:02:26  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_customers)
[0m18:02:26  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:02:26  Began compiling node model.jaffle_shop.stg_customers
[0m18:02:26  CANCEL query model.jaffle_shop.stg_orders ...................................... [[31mCANCEL[0m]
[0m18:02:26  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:02:26  Timing info for model.jaffle_shop.stg_customers (compile): 20:02:26.542996 => 20:02:26.549026
[0m18:02:26  Began executing node model.jaffle_shop.stg_customers
[0m18:02:26  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:02:26  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:02:26  On model.jaffle_shop.stg_customers: BEGIN
[0m18:02:26  Opening a new connection, currently in state closed
[0m18:02:26  SQL status: BEGIN in 0.0 seconds
[0m18:02:26  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:02:26  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select * from "dbtsales"."public"."raw_sales"
  );
[0m18:02:26  SQL status: CREATE VIEW in 0.0 seconds
[0m18:02:26  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:02:26  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:02:26  SQL status: ALTER TABLE in 0.0 seconds
[0m18:02:26  On model.jaffle_shop.stg_customers: COMMIT
[0m18:02:26  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:02:26  On model.jaffle_shop.stg_customers: COMMIT
[0m18:02:26  SQL status: COMMIT in 0.0 seconds
[0m18:02:26  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:02:26  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:02:26  SQL status: DROP VIEW in 0.0 seconds
[0m18:02:26  Timing info for model.jaffle_shop.stg_customers (execute): 20:02:26.551024 => 20:02:26.636535
[0m18:02:26  On model.jaffle_shop.stg_customers: Close
[0m18:02:26  3 of 5 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.10s]
[0m18:02:26  Finished running node model.jaffle_shop.stg_customers
[0m18:02:26  
[0m18:02:26  [33mDatabase Error in model stg_orders (models\raw_stage\stg_orders.sql)[0m
[0m18:02:26    relation "public.raw_orders" does not exist
[0m18:02:26    LINE 13:     select * from "dbtsales"."public"."raw_orders"
[0m18:02:26                               ^
[0m18:02:26    compiled Code at target\run\jaffle_shop\models\raw_stage\stg_orders.sql
[0m18:02:26  Connection 'master' was properly closed.
[0m18:02:26  Connection 'list_dbtsales' was properly closed.
[0m18:02:26  Connection 'list_dbtsales_public' was properly closed.
[0m18:02:26  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:02:26  
[0m18:02:26  Finished running 2 table models in 0 hours 0 minutes and 0.63 seconds (0.63s).
[0m18:02:26  Encountered an error:
FailFast Error in model stg_orders (models\raw_stage\stg_orders.sql)
  Failing early due to test failure or runtime error
[0m18:02:26  Command `dbt run` failed at 20:02:26.654545 after 0.98 seconds
[0m18:02:26  Flushing usage events
[0m18:05:52  Running with dbt=1.5.4
[0m18:05:52  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:05:52  Registered adapter: postgres=1.5.4
[0m18:05:52  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:05:52  Partial parsing enabled: 2 files deleted, 0 files added, 0 files changed.
[0m18:05:52  Partial parsing: deleted file: jaffle_shop://models\raw_stage\stg_orders.sql
[0m18:05:52  Partial parsing: deleted file: jaffle_shop://models\staging\v_staging_orders.sql
[0m18:05:52  Encountered an error:
Compilation Error
  [[33mWARNING[0m]: Did not find matching node for patch with name 'stg_orders' in the 'models' section of file 'models\staging\schema.yml'
[0m18:05:52  Command `dbt run` failed at 20:05:52.735344 after 0.38 seconds
[0m18:05:52  Flushing usage events
[0m18:06:13  Running with dbt=1.5.4
[0m18:06:13  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:06:13  Registered adapter: postgres=1.5.4
[0m18:06:13  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:06:13  Partial parsing enabled: 2 files deleted, 0 files added, 1 files changed.
[0m18:06:13  Partial parsing: updated file: jaffle_shop://models\staging\schema.yml
[0m18:06:13  Partial parsing: deleted file: jaffle_shop://models\staging\v_staging_orders.sql
[0m18:06:13  Partial parsing: deleted file: jaffle_shop://models\raw_stage\stg_orders.sql
[0m18:06:13  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:06:13  
[0m18:06:13  Acquiring new postgres connection 'master'
[0m18:06:13  Acquiring new postgres connection 'list_dbtsales'
[0m18:06:13  Using postgres connection "list_dbtsales"
[0m18:06:13  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:06:13  Opening a new connection, currently in state init
[0m18:06:13  SQL status: SELECT 5 in 0.0 seconds
[0m18:06:13  On list_dbtsales: Close
[0m18:06:13  Using postgres connection "list_dbtsales"
[0m18:06:13  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:06:13  Opening a new connection, currently in state closed
[0m18:06:14  SQL status: SELECT 5 in 0.0 seconds
[0m18:06:14  On list_dbtsales: Close
[0m18:06:14  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:06:14  Using postgres connection "list_dbtsales_public"
[0m18:06:14  On list_dbtsales_public: BEGIN
[0m18:06:14  Opening a new connection, currently in state init
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  Using postgres connection "list_dbtsales_public"
[0m18:06:14  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:06:14  SQL status: SELECT 2 in 0.0 seconds
[0m18:06:14  On list_dbtsales_public: ROLLBACK
[0m18:06:14  On list_dbtsales_public: Close
[0m18:06:14  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:06:14  Using postgres connection "list_dbtsales_public_stg"
[0m18:06:14  On list_dbtsales_public_stg: BEGIN
[0m18:06:14  Opening a new connection, currently in state closed
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  Using postgres connection "list_dbtsales_public_stg"
[0m18:06:14  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:06:14  SQL status: SELECT 1 in 0.0 seconds
[0m18:06:14  On list_dbtsales_public_stg: ROLLBACK
[0m18:06:14  On list_dbtsales_public_stg: Close
[0m18:06:14  Using postgres connection "master"
[0m18:06:14  On master: BEGIN
[0m18:06:14  Opening a new connection, currently in state init
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  Using postgres connection "master"
[0m18:06:14  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:06:14  SQL status: SELECT 1 in 0.0 seconds
[0m18:06:14  On master: ROLLBACK
[0m18:06:14  Using postgres connection "master"
[0m18:06:14  On master: BEGIN
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  On master: COMMIT
[0m18:06:14  Using postgres connection "master"
[0m18:06:14  On master: COMMIT
[0m18:06:14  SQL status: COMMIT in 0.0 seconds
[0m18:06:14  On master: Close
[0m18:06:14  Concurrency: 1 threads (target='dev')
[0m18:06:14  
[0m18:06:14  Began running node model.jaffle_shop.raw_sales
[0m18:06:14  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:06:14  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:06:14  Began compiling node model.jaffle_shop.raw_sales
[0m18:06:14  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:06:14  Timing info for model.jaffle_shop.raw_sales (compile): 20:06:14.179234 => 20:06:14.188237
[0m18:06:14  Began executing node model.jaffle_shop.raw_sales
[0m18:06:14  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:06:14  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:06:14  On model.jaffle_shop.raw_sales: BEGIN
[0m18:06:14  Opening a new connection, currently in state init
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:06:14  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:06:14  SQL status: SELECT 2823 in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:06:14  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:06:14  SQL status: ALTER TABLE in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:06:14  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:06:14  SQL status: ALTER TABLE in 0.0 seconds
[0m18:06:14  On model.jaffle_shop.raw_sales: COMMIT
[0m18:06:14  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:06:14  On model.jaffle_shop.raw_sales: COMMIT
[0m18:06:14  SQL status: COMMIT in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:06:14  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:06:14  SQL status: DROP TABLE in 0.0 seconds
[0m18:06:14  Timing info for model.jaffle_shop.raw_sales (execute): 20:06:14.190233 => 20:06:14.398342
[0m18:06:14  On model.jaffle_shop.raw_sales: Close
[0m18:06:14  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.23s]
[0m18:06:14  Finished running node model.jaffle_shop.raw_sales
[0m18:06:14  Began running node model.jaffle_shop.stg_customers
[0m18:06:14  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:06:14  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:06:14  Began compiling node model.jaffle_shop.stg_customers
[0m18:06:14  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:06:14  Timing info for model.jaffle_shop.stg_customers (compile): 20:06:14.410329 => 20:06:14.417333
[0m18:06:14  Began executing node model.jaffle_shop.stg_customers
[0m18:06:14  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:06:14  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:06:14  On model.jaffle_shop.stg_customers: BEGIN
[0m18:06:14  Opening a new connection, currently in state closed
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:06:14  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select * from "dbtsales"."public"."raw_sales"
  );
[0m18:06:14  SQL status: CREATE VIEW in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:06:14  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:06:14  SQL status: ALTER TABLE in 0.0 seconds
[0m18:06:14  On model.jaffle_shop.stg_customers: COMMIT
[0m18:06:14  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:06:14  On model.jaffle_shop.stg_customers: COMMIT
[0m18:06:14  SQL status: COMMIT in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:06:14  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:06:14  SQL status: DROP VIEW in 0.0 seconds
[0m18:06:14  Timing info for model.jaffle_shop.stg_customers (execute): 20:06:14.420329 => 20:06:14.516315
[0m18:06:14  On model.jaffle_shop.stg_customers: Close
[0m18:06:14  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.11s]
[0m18:06:14  Finished running node model.jaffle_shop.stg_customers
[0m18:06:14  Began running node model.jaffle_shop.customers
[0m18:06:14  3 of 3 START sql view model public.customers ................................... [RUN]
[0m18:06:14  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:06:14  Began compiling node model.jaffle_shop.customers
[0m18:06:14  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:06:14  Timing info for model.jaffle_shop.customers (compile): 20:06:14.527598 => 20:06:14.534615
[0m18:06:14  Began executing node model.jaffle_shop.customers
[0m18:06:14  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:06:14  Using postgres connection "model.jaffle_shop.customers"
[0m18:06:14  On model.jaffle_shop.customers: BEGIN
[0m18:06:14  Opening a new connection, currently in state closed
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.customers"
[0m18:06:14  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

-- with customers as (

--     select * from "dbtsales"."public_stg"."stg_customers"

-- ),


-- final as (

--     select
--         customerid,
--         CUSTOMERNAME
--     from customers

-- )

select * from "dbtsales"."public_stg"."stg_customers"
  );
[0m18:06:14  SQL status: CREATE VIEW in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.customers"
[0m18:06:14  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m18:06:14  SQL status: ALTER TABLE in 0.0 seconds
[0m18:06:14  On model.jaffle_shop.customers: COMMIT
[0m18:06:14  Using postgres connection "model.jaffle_shop.customers"
[0m18:06:14  On model.jaffle_shop.customers: COMMIT
[0m18:06:14  SQL status: COMMIT in 0.0 seconds
[0m18:06:14  Using postgres connection "model.jaffle_shop.customers"
[0m18:06:14  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m18:06:14  SQL status: DROP VIEW in 0.0 seconds
[0m18:06:14  Timing info for model.jaffle_shop.customers (execute): 20:06:14.537867 => 20:06:14.659875
[0m18:06:14  On model.jaffle_shop.customers: Close
[0m18:06:14  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.14s]
[0m18:06:14  Finished running node model.jaffle_shop.customers
[0m18:06:14  Using postgres connection "master"
[0m18:06:14  On master: BEGIN
[0m18:06:14  Opening a new connection, currently in state closed
[0m18:06:14  SQL status: BEGIN in 0.0 seconds
[0m18:06:14  On master: COMMIT
[0m18:06:14  Using postgres connection "master"
[0m18:06:14  On master: COMMIT
[0m18:06:14  SQL status: COMMIT in 0.0 seconds
[0m18:06:14  On master: Close
[0m18:06:14  Connection 'master' was properly closed.
[0m18:06:14  Connection 'list_dbtsales' was properly closed.
[0m18:06:14  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:06:14  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:06:14  
[0m18:06:14  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.78 seconds (0.78s).
[0m18:06:14  Command end result
[0m18:06:14  
[0m18:06:14  [32mCompleted successfully[0m
[0m18:06:14  
[0m18:06:14  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m18:06:14  Command `dbt run` succeeded at 20:06:14.732581 after 1.12 seconds
[0m18:06:14  Flushing usage events
[0m18:08:17  Running with dbt=1.5.4
[0m18:08:17  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:08:17  Registered adapter: postgres=1.5.4
[0m18:08:17  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:08:17  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:08:17  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:08:17  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:08:17  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:08:17  
[0m18:08:17  Acquiring new postgres connection 'master'
[0m18:08:17  Acquiring new postgres connection 'list_dbtsales'
[0m18:08:17  Using postgres connection "list_dbtsales"
[0m18:08:17  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:08:17  Opening a new connection, currently in state init
[0m18:08:17  SQL status: SELECT 5 in 0.0 seconds
[0m18:08:17  On list_dbtsales: Close
[0m18:08:17  Using postgres connection "list_dbtsales"
[0m18:08:17  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:08:17  Opening a new connection, currently in state closed
[0m18:08:17  SQL status: SELECT 5 in 0.0 seconds
[0m18:08:17  On list_dbtsales: Close
[0m18:08:17  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:08:17  Using postgres connection "list_dbtsales_public"
[0m18:08:17  On list_dbtsales_public: BEGIN
[0m18:08:17  Opening a new connection, currently in state init
[0m18:08:17  SQL status: BEGIN in 0.0 seconds
[0m18:08:17  Using postgres connection "list_dbtsales_public"
[0m18:08:17  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:08:17  SQL status: SELECT 3 in 0.0 seconds
[0m18:08:17  On list_dbtsales_public: ROLLBACK
[0m18:08:17  On list_dbtsales_public: Close
[0m18:08:17  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:08:17  Using postgres connection "list_dbtsales_public_stg"
[0m18:08:17  On list_dbtsales_public_stg: BEGIN
[0m18:08:17  Opening a new connection, currently in state closed
[0m18:08:17  SQL status: BEGIN in 0.0 seconds
[0m18:08:17  Using postgres connection "list_dbtsales_public_stg"
[0m18:08:17  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:08:17  SQL status: SELECT 1 in 0.0 seconds
[0m18:08:17  On list_dbtsales_public_stg: ROLLBACK
[0m18:08:17  On list_dbtsales_public_stg: Close
[0m18:08:17  Using postgres connection "master"
[0m18:08:17  On master: BEGIN
[0m18:08:17  Opening a new connection, currently in state init
[0m18:08:17  SQL status: BEGIN in 0.0 seconds
[0m18:08:17  Using postgres connection "master"
[0m18:08:17  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:08:17  SQL status: SELECT 2 in 0.0 seconds
[0m18:08:17  On master: ROLLBACK
[0m18:08:17  Using postgres connection "master"
[0m18:08:17  On master: BEGIN
[0m18:08:17  SQL status: BEGIN in 0.0 seconds
[0m18:08:17  On master: COMMIT
[0m18:08:17  Using postgres connection "master"
[0m18:08:17  On master: COMMIT
[0m18:08:17  SQL status: COMMIT in 0.0 seconds
[0m18:08:17  On master: Close
[0m18:08:17  Concurrency: 1 threads (target='dev')
[0m18:08:17  
[0m18:08:17  Began running node model.jaffle_shop.raw_sales
[0m18:08:17  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:08:17  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:08:17  Began compiling node model.jaffle_shop.raw_sales
[0m18:08:17  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:08:17  Timing info for model.jaffle_shop.raw_sales (compile): 20:08:17.784641 => 20:08:17.791639
[0m18:08:17  Began executing node model.jaffle_shop.raw_sales
[0m18:08:17  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:08:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:17  On model.jaffle_shop.raw_sales: BEGIN
[0m18:08:17  Opening a new connection, currently in state init
[0m18:08:17  SQL status: BEGIN in 0.0 seconds
[0m18:08:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:17  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:08:17  SQL status: SELECT 2823 in 0.0 seconds
[0m18:08:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:17  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:08:17  SQL status: ALTER TABLE in 0.0 seconds
[0m18:08:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:17  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:08:17  SQL status: ALTER TABLE in 0.0 seconds
[0m18:08:17  On model.jaffle_shop.raw_sales: COMMIT
[0m18:08:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:17  On model.jaffle_shop.raw_sales: COMMIT
[0m18:08:17  SQL status: COMMIT in 0.0 seconds
[0m18:08:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:17  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:08:17  SQL status: DROP TABLE in 0.0 seconds
[0m18:08:17  Timing info for model.jaffle_shop.raw_sales (execute): 20:08:17.793640 => 20:08:17.984701
[0m18:08:17  On model.jaffle_shop.raw_sales: Close
[0m18:08:17  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.21s]
[0m18:08:17  Finished running node model.jaffle_shop.raw_sales
[0m18:08:17  Began running node model.jaffle_shop.stg_customers
[0m18:08:17  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:08:17  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:08:17  Began compiling node model.jaffle_shop.stg_customers
[0m18:08:18  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:08:18  Timing info for model.jaffle_shop.stg_customers (compile): 20:08:17.997702 => 20:08:18.004705
[0m18:08:18  Began executing node model.jaffle_shop.stg_customers
[0m18:08:18  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:08:18  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:08:18  On model.jaffle_shop.stg_customers: BEGIN
[0m18:08:18  Opening a new connection, currently in state closed
[0m18:08:18  SQL status: BEGIN in 0.0 seconds
[0m18:08:18  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:08:18  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select CustomerID as customerid, CUSTOMERNAME as customer_name, CONTACTFIRSTNAME as first_name, CONTACTLASTNAME as last_name  from "dbtsales"."public"."raw_sales"
  );
[0m18:08:18  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 30: select CustomerID as customerid, CUSTOMERNAME as customer_na...
                ^
HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".

[0m18:08:18  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:08:18  Timing info for model.jaffle_shop.stg_customers (execute): 20:08:18.007702 => 20:08:18.132239
[0m18:08:18  On model.jaffle_shop.stg_customers: Close
[0m18:08:18  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 30: select CustomerID as customerid, CUSTOMERNAME as customer_na...
                  ^
  HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:08:18  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.15s]
[0m18:08:18  Finished running node model.jaffle_shop.stg_customers
[0m18:08:18  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:08:18  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:08:18  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:08:18  
[0m18:08:18  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:08:18    column "customerid" does not exist
[0m18:08:18    LINE 30: select CustomerID as customerid, CUSTOMERNAME as customer_na...
[0m18:08:18                    ^
[0m18:08:18    HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".
[0m18:08:18    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:08:18  Connection 'master' was properly closed.
[0m18:08:18  Connection 'list_dbtsales' was properly closed.
[0m18:08:18  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:08:18  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:08:18  
[0m18:08:18  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.61 seconds (0.61s).
[0m18:08:18  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:08:18  Command `dbt run` failed at 20:08:18.165759 after 1.01 seconds
[0m18:08:18  Flushing usage events
[0m18:08:37  Running with dbt=1.5.4
[0m18:08:37  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:08:37  Registered adapter: postgres=1.5.4
[0m18:08:37  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:08:37  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:08:37  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:08:37  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:08:37  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:08:37  
[0m18:08:37  Acquiring new postgres connection 'master'
[0m18:08:37  Acquiring new postgres connection 'list_dbtsales'
[0m18:08:37  Using postgres connection "list_dbtsales"
[0m18:08:37  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:08:37  Opening a new connection, currently in state init
[0m18:08:37  SQL status: SELECT 5 in 0.0 seconds
[0m18:08:37  On list_dbtsales: Close
[0m18:08:37  Using postgres connection "list_dbtsales"
[0m18:08:37  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:08:37  Opening a new connection, currently in state closed
[0m18:08:37  SQL status: SELECT 5 in 0.0 seconds
[0m18:08:37  On list_dbtsales: Close
[0m18:08:37  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:08:37  Using postgres connection "list_dbtsales_public"
[0m18:08:37  On list_dbtsales_public: BEGIN
[0m18:08:37  Opening a new connection, currently in state init
[0m18:08:37  SQL status: BEGIN in 0.0 seconds
[0m18:08:37  Using postgres connection "list_dbtsales_public"
[0m18:08:37  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:08:37  SQL status: SELECT 2 in 0.0 seconds
[0m18:08:37  On list_dbtsales_public: ROLLBACK
[0m18:08:37  On list_dbtsales_public: Close
[0m18:08:37  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:08:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:08:37  On list_dbtsales_public_stg: BEGIN
[0m18:08:37  Opening a new connection, currently in state closed
[0m18:08:37  SQL status: BEGIN in 0.0 seconds
[0m18:08:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:08:37  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:08:37  SQL status: SELECT 0 in 0.0 seconds
[0m18:08:37  On list_dbtsales_public_stg: ROLLBACK
[0m18:08:37  On list_dbtsales_public_stg: Close
[0m18:08:37  Using postgres connection "master"
[0m18:08:37  On master: BEGIN
[0m18:08:37  Opening a new connection, currently in state init
[0m18:08:37  SQL status: BEGIN in 0.0 seconds
[0m18:08:37  Using postgres connection "master"
[0m18:08:37  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:08:37  SQL status: SELECT 0 in 0.0 seconds
[0m18:08:37  On master: ROLLBACK
[0m18:08:37  Using postgres connection "master"
[0m18:08:37  On master: BEGIN
[0m18:08:37  SQL status: BEGIN in 0.0 seconds
[0m18:08:37  On master: COMMIT
[0m18:08:37  Using postgres connection "master"
[0m18:08:37  On master: COMMIT
[0m18:08:37  SQL status: COMMIT in 0.0 seconds
[0m18:08:37  On master: Close
[0m18:08:37  Concurrency: 1 threads (target='dev')
[0m18:08:37  
[0m18:08:37  Began running node model.jaffle_shop.raw_sales
[0m18:08:37  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:08:37  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:08:37  Began compiling node model.jaffle_shop.raw_sales
[0m18:08:37  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:08:37  Timing info for model.jaffle_shop.raw_sales (compile): 20:08:37.785332 => 20:08:37.791328
[0m18:08:37  Began executing node model.jaffle_shop.raw_sales
[0m18:08:37  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:08:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:37  On model.jaffle_shop.raw_sales: BEGIN
[0m18:08:37  Opening a new connection, currently in state init
[0m18:08:37  SQL status: BEGIN in 0.0 seconds
[0m18:08:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:08:37  SQL status: SELECT 2823 in 0.0 seconds
[0m18:08:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:08:37  SQL status: ALTER TABLE in 0.0 seconds
[0m18:08:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:08:37  SQL status: ALTER TABLE in 0.0 seconds
[0m18:08:37  On model.jaffle_shop.raw_sales: COMMIT
[0m18:08:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:37  On model.jaffle_shop.raw_sales: COMMIT
[0m18:08:37  SQL status: COMMIT in 0.0 seconds
[0m18:08:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:08:37  SQL status: DROP TABLE in 0.0 seconds
[0m18:08:37  Timing info for model.jaffle_shop.raw_sales (execute): 20:08:37.794330 => 20:08:37.992948
[0m18:08:37  On model.jaffle_shop.raw_sales: Close
[0m18:08:37  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.22s]
[0m18:08:37  Finished running node model.jaffle_shop.raw_sales
[0m18:08:38  Began running node model.jaffle_shop.stg_customers
[0m18:08:38  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:08:38  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:08:38  Began compiling node model.jaffle_shop.stg_customers
[0m18:08:38  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:08:38  Timing info for model.jaffle_shop.stg_customers (compile): 20:08:38.009246 => 20:08:38.016244
[0m18:08:38  Began executing node model.jaffle_shop.stg_customers
[0m18:08:38  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:08:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:08:38  On model.jaffle_shop.stg_customers: BEGIN
[0m18:08:38  Opening a new connection, currently in state closed
[0m18:08:38  SQL status: BEGIN in 0.0 seconds
[0m18:08:38  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:08:38  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select CustomerID , CUSTOMERNAME as customer_name, CONTACTFIRSTNAME as first_name, CONTACTLASTNAME as last_name  from "dbtsales"."public"."raw_sales"
  );
[0m18:08:38  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 30: select CustomerID , CUSTOMERNAME as customer_name, CONTACTFI...
                ^
HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".

[0m18:08:38  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:08:38  Timing info for model.jaffle_shop.stg_customers (execute): 20:08:38.020608 => 20:08:38.148826
[0m18:08:38  On model.jaffle_shop.stg_customers: Close
[0m18:08:38  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 30: select CustomerID , CUSTOMERNAME as customer_name, CONTACTFI...
                  ^
  HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:08:38  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.15s]
[0m18:08:38  Finished running node model.jaffle_shop.stg_customers
[0m18:08:38  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:08:38  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:08:38  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:08:38  
[0m18:08:38  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:08:38    column "customerid" does not exist
[0m18:08:38    LINE 30: select CustomerID , CUSTOMERNAME as customer_name, CONTACTFI...
[0m18:08:38                    ^
[0m18:08:38    HINT:  Perhaps you meant to reference the column "raw_sales.CustomerID".
[0m18:08:38    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:08:38  Connection 'master' was properly closed.
[0m18:08:38  Connection 'list_dbtsales' was properly closed.
[0m18:08:38  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:08:38  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:08:38  
[0m18:08:38  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.66 seconds (0.66s).
[0m18:08:38  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:08:38  Command `dbt run` failed at 20:08:38.191077 after 1.09 seconds
[0m18:08:38  Flushing usage events
[0m18:08:49  Running with dbt=1.5.4
[0m18:08:49  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:08:49  Registered adapter: postgres=1.5.4
[0m18:08:49  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:08:49  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:08:49  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:08:49  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:08:49  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:08:49  
[0m18:08:49  Acquiring new postgres connection 'master'
[0m18:08:49  Acquiring new postgres connection 'list_dbtsales'
[0m18:08:49  Using postgres connection "list_dbtsales"
[0m18:08:49  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:08:49  Opening a new connection, currently in state init
[0m18:08:49  SQL status: SELECT 5 in 0.0 seconds
[0m18:08:49  On list_dbtsales: Close
[0m18:08:49  Using postgres connection "list_dbtsales"
[0m18:08:49  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:08:49  Opening a new connection, currently in state closed
[0m18:08:49  SQL status: SELECT 5 in 0.0 seconds
[0m18:08:49  On list_dbtsales: Close
[0m18:08:49  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:08:49  Using postgres connection "list_dbtsales_public"
[0m18:08:49  On list_dbtsales_public: BEGIN
[0m18:08:49  Opening a new connection, currently in state init
[0m18:08:49  SQL status: BEGIN in 0.0 seconds
[0m18:08:49  Using postgres connection "list_dbtsales_public"
[0m18:08:49  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:08:49  SQL status: SELECT 2 in 0.0 seconds
[0m18:08:49  On list_dbtsales_public: ROLLBACK
[0m18:08:49  On list_dbtsales_public: Close
[0m18:08:49  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:08:49  Using postgres connection "list_dbtsales_public_stg"
[0m18:08:49  On list_dbtsales_public_stg: BEGIN
[0m18:08:49  Opening a new connection, currently in state closed
[0m18:08:49  SQL status: BEGIN in 0.0 seconds
[0m18:08:49  Using postgres connection "list_dbtsales_public_stg"
[0m18:08:49  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:08:49  SQL status: SELECT 0 in 0.0 seconds
[0m18:08:49  On list_dbtsales_public_stg: ROLLBACK
[0m18:08:49  On list_dbtsales_public_stg: Close
[0m18:08:49  Using postgres connection "master"
[0m18:08:49  On master: BEGIN
[0m18:08:49  Opening a new connection, currently in state init
[0m18:08:49  SQL status: BEGIN in 0.0 seconds
[0m18:08:49  Using postgres connection "master"
[0m18:08:49  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:08:49  SQL status: SELECT 0 in 0.0 seconds
[0m18:08:49  On master: ROLLBACK
[0m18:08:49  Using postgres connection "master"
[0m18:08:49  On master: BEGIN
[0m18:08:49  SQL status: BEGIN in 0.0 seconds
[0m18:08:49  On master: COMMIT
[0m18:08:49  Using postgres connection "master"
[0m18:08:49  On master: COMMIT
[0m18:08:49  SQL status: COMMIT in 0.0 seconds
[0m18:08:49  On master: Close
[0m18:08:49  Concurrency: 1 threads (target='dev')
[0m18:08:49  
[0m18:08:49  Began running node model.jaffle_shop.raw_sales
[0m18:08:49  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:08:49  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:08:49  Began compiling node model.jaffle_shop.raw_sales
[0m18:08:49  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:08:49  Timing info for model.jaffle_shop.raw_sales (compile): 20:08:49.899994 => 20:08:49.906864
[0m18:08:49  Began executing node model.jaffle_shop.raw_sales
[0m18:08:49  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:08:49  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:49  On model.jaffle_shop.raw_sales: BEGIN
[0m18:08:49  Opening a new connection, currently in state init
[0m18:08:50  SQL status: BEGIN in 0.0 seconds
[0m18:08:50  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:50  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:08:50  SQL status: SELECT 2823 in 0.0 seconds
[0m18:08:50  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:50  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:08:50  SQL status: ALTER TABLE in 0.0 seconds
[0m18:08:50  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:50  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:08:50  SQL status: ALTER TABLE in 0.0 seconds
[0m18:08:50  On model.jaffle_shop.raw_sales: COMMIT
[0m18:08:50  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:50  On model.jaffle_shop.raw_sales: COMMIT
[0m18:08:50  SQL status: COMMIT in 0.0 seconds
[0m18:08:50  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:08:50  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:08:50  SQL status: DROP TABLE in 0.0 seconds
[0m18:08:50  Timing info for model.jaffle_shop.raw_sales (execute): 20:08:49.910015 => 20:08:50.153740
[0m18:08:50  On model.jaffle_shop.raw_sales: Close
[0m18:08:50  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.26s]
[0m18:08:50  Finished running node model.jaffle_shop.raw_sales
[0m18:08:50  Began running node model.jaffle_shop.stg_customers
[0m18:08:50  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:08:50  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:08:50  Began compiling node model.jaffle_shop.stg_customers
[0m18:08:50  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:08:50  Timing info for model.jaffle_shop.stg_customers (compile): 20:08:50.168535 => 20:08:50.173540
[0m18:08:50  Began executing node model.jaffle_shop.stg_customers
[0m18:08:50  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:08:50  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:08:50  On model.jaffle_shop.stg_customers: BEGIN
[0m18:08:50  Opening a new connection, currently in state closed
[0m18:08:50  SQL status: BEGIN in 0.0 seconds
[0m18:08:50  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:08:50  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."stgsales"

-- ),

-- renamed as (

--     select
--         CustomerID as customer_id,
--         CUSTOMERNAME as customer_name,
--         CONTACTFIRSTNAME as first_name,
--         CONTACTLASTNAME as last_name

--     from source

-- )

-- select * from renamed


select CUSTOMERNAME as customer_name, CONTACTFIRSTNAME as first_name, CONTACTLASTNAME as last_name  from "dbtsales"."public"."raw_sales"
  );
[0m18:08:50  Postgres adapter: Postgres error: column "customername" does not exist
LINE 30: select CUSTOMERNAME as customer_name, CONTACTFIRSTNAME as fi...
                ^

[0m18:08:50  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:08:50  Timing info for model.jaffle_shop.stg_customers (execute): 20:08:50.176541 => 20:08:50.302364
[0m18:08:50  On model.jaffle_shop.stg_customers: Close
[0m18:08:50  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customername" does not exist
  LINE 30: select CUSTOMERNAME as customer_name, CONTACTFIRSTNAME as fi...
                  ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:08:50  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.15s]
[0m18:08:50  Finished running node model.jaffle_shop.stg_customers
[0m18:08:50  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:08:50  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:08:50  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:08:50  
[0m18:08:50  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:08:50    column "customername" does not exist
[0m18:08:50    LINE 30: select CUSTOMERNAME as customer_name, CONTACTFIRSTNAME as fi...
[0m18:08:50                    ^
[0m18:08:50    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:08:50  Connection 'master' was properly closed.
[0m18:08:50  Connection 'list_dbtsales' was properly closed.
[0m18:08:50  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:08:50  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:08:50  
[0m18:08:50  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.76 seconds (0.76s).
[0m18:08:50  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:08:50  Command `dbt run` failed at 20:08:50.337118 after 1.22 seconds
[0m18:08:50  Flushing usage events
[0m18:09:37  Running with dbt=1.5.4
[0m18:09:37  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:09:37  Registered adapter: postgres=1.5.4
[0m18:09:37  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:09:37  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:09:37  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:09:37  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:09:37  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 3 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:09:37  
[0m18:09:37  Acquiring new postgres connection 'master'
[0m18:09:37  Acquiring new postgres connection 'list_dbtsales'
[0m18:09:37  Using postgres connection "list_dbtsales"
[0m18:09:37  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:09:37  Opening a new connection, currently in state init
[0m18:09:37  SQL status: SELECT 5 in 0.0 seconds
[0m18:09:37  On list_dbtsales: Close
[0m18:09:37  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:09:37  Using postgres connection "list_dbtsales_public"
[0m18:09:37  On list_dbtsales_public: BEGIN
[0m18:09:37  Opening a new connection, currently in state init
[0m18:09:37  SQL status: BEGIN in 0.0 seconds
[0m18:09:37  Using postgres connection "list_dbtsales_public"
[0m18:09:37  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:09:37  SQL status: SELECT 2 in 0.0 seconds
[0m18:09:37  On list_dbtsales_public: ROLLBACK
[0m18:09:37  On list_dbtsales_public: Close
[0m18:09:37  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:09:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:09:37  On list_dbtsales_public_stg: BEGIN
[0m18:09:37  Opening a new connection, currently in state closed
[0m18:09:37  SQL status: BEGIN in 0.0 seconds
[0m18:09:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:09:37  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:09:37  SQL status: SELECT 0 in 0.0 seconds
[0m18:09:37  On list_dbtsales_public_stg: ROLLBACK
[0m18:09:37  On list_dbtsales_public_stg: Close
[0m18:09:37  Using postgres connection "master"
[0m18:09:37  On master: BEGIN
[0m18:09:37  Opening a new connection, currently in state init
[0m18:09:37  SQL status: BEGIN in 0.0 seconds
[0m18:09:37  Using postgres connection "master"
[0m18:09:37  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:09:37  SQL status: SELECT 0 in 0.0 seconds
[0m18:09:37  On master: ROLLBACK
[0m18:09:37  Using postgres connection "master"
[0m18:09:37  On master: BEGIN
[0m18:09:37  SQL status: BEGIN in 0.0 seconds
[0m18:09:37  On master: COMMIT
[0m18:09:37  Using postgres connection "master"
[0m18:09:37  On master: COMMIT
[0m18:09:37  SQL status: COMMIT in 0.0 seconds
[0m18:09:37  On master: Close
[0m18:09:37  Concurrency: 1 threads (target='dev')
[0m18:09:37  
[0m18:09:37  Began running node model.jaffle_shop.stg_customers
[0m18:09:37  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:09:37  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m18:09:37  Began compiling node model.jaffle_shop.stg_customers
[0m18:09:37  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:09:37  Timing info for model.jaffle_shop.stg_customers (compile): 20:09:37.599544 => 20:09:37.606596
[0m18:09:37  Began executing node model.jaffle_shop.stg_customers
[0m18:09:37  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:09:37  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:09:37  On model.jaffle_shop.stg_customers: BEGIN
[0m18:09:37  Opening a new connection, currently in state init
[0m18:09:37  SQL status: BEGIN in 0.0 seconds
[0m18:09:37  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:09:37  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
   
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m18:09:37  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m18:09:37  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:09:37  Timing info for model.jaffle_shop.stg_customers (execute): 20:09:37.609604 => 20:09:37.682678
[0m18:09:37  On model.jaffle_shop.stg_customers: Close
[0m18:09:37  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:09:37  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.10s]
[0m18:09:37  Finished running node model.jaffle_shop.stg_customers
[0m18:09:37  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:09:37  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:09:37  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:09:37  
[0m18:09:37  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:09:37    column "customerid" does not exist
[0m18:09:37    LINE 16:         CustomerID as customer_id,
[0m18:09:37                     ^
[0m18:09:37    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m18:09:37    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:09:37  Connection 'master' was properly closed.
[0m18:09:37  Connection 'list_dbtsales' was properly closed.
[0m18:09:37  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:09:37  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:09:37  
[0m18:09:37  Finished running 1 view model in 0 hours 0 minutes and 0.31 seconds (0.31s).
[0m18:09:37  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:09:37  Command `dbt run` failed at 20:09:37.717778 after 0.69 seconds
[0m18:09:37  Flushing usage events
[0m18:14:05  Running with dbt=1.5.4
[0m18:14:05  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:14:05  Registered adapter: postgres=1.5.4
[0m18:14:05  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:14:05  Partial parsing enabled: 3 files deleted, 0 files added, 0 files changed.
[0m18:14:05  Partial parsing: deleted file: jaffle_shop://seeds\raw_customers.csv
[0m18:14:05  Partial parsing: deleted file: jaffle_shop://seeds\raw_payments.csv
[0m18:14:05  Partial parsing: deleted file: jaffle_shop://seeds\raw_orders.csv
[0m18:14:05  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:14:05  
[0m18:14:05  Acquiring new postgres connection 'master'
[0m18:14:05  Acquiring new postgres connection 'list_dbtsales'
[0m18:14:05  Using postgres connection "list_dbtsales"
[0m18:14:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:14:05  Opening a new connection, currently in state init
[0m18:14:05  SQL status: SELECT 5 in 0.0 seconds
[0m18:14:05  On list_dbtsales: Close
[0m18:14:05  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:14:05  Using postgres connection "list_dbtsales_public_stg"
[0m18:14:05  On list_dbtsales_public_stg: BEGIN
[0m18:14:05  Opening a new connection, currently in state init
[0m18:14:05  SQL status: BEGIN in 0.0 seconds
[0m18:14:05  Using postgres connection "list_dbtsales_public_stg"
[0m18:14:05  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:14:05  SQL status: SELECT 0 in 0.0 seconds
[0m18:14:05  On list_dbtsales_public_stg: ROLLBACK
[0m18:14:05  On list_dbtsales_public_stg: Close
[0m18:14:05  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:14:05  Using postgres connection "list_dbtsales_public"
[0m18:14:05  On list_dbtsales_public: BEGIN
[0m18:14:05  Opening a new connection, currently in state closed
[0m18:14:05  SQL status: BEGIN in 0.0 seconds
[0m18:14:05  Using postgres connection "list_dbtsales_public"
[0m18:14:05  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:14:05  SQL status: SELECT 2 in 0.0 seconds
[0m18:14:05  On list_dbtsales_public: ROLLBACK
[0m18:14:05  On list_dbtsales_public: Close
[0m18:14:05  Using postgres connection "master"
[0m18:14:05  On master: BEGIN
[0m18:14:05  Opening a new connection, currently in state init
[0m18:14:05  SQL status: BEGIN in 0.0 seconds
[0m18:14:05  Using postgres connection "master"
[0m18:14:05  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:14:05  SQL status: SELECT 0 in 0.0 seconds
[0m18:14:05  On master: ROLLBACK
[0m18:14:05  Using postgres connection "master"
[0m18:14:05  On master: BEGIN
[0m18:14:05  SQL status: BEGIN in 0.0 seconds
[0m18:14:05  On master: COMMIT
[0m18:14:05  Using postgres connection "master"
[0m18:14:05  On master: COMMIT
[0m18:14:05  SQL status: COMMIT in 0.0 seconds
[0m18:14:05  On master: Close
[0m18:14:05  Concurrency: 1 threads (target='dev')
[0m18:14:05  
[0m18:14:05  Began running node model.jaffle_shop.stg_customers
[0m18:14:05  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:14:05  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m18:14:05  Began compiling node model.jaffle_shop.stg_customers
[0m18:14:05  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:14:05  Timing info for model.jaffle_shop.stg_customers (compile): 20:14:05.760723 => 20:14:05.764725
[0m18:14:05  Began executing node model.jaffle_shop.stg_customers
[0m18:14:05  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:14:05  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:05  On model.jaffle_shop.stg_customers: BEGIN
[0m18:14:05  Opening a new connection, currently in state init
[0m18:14:05  SQL status: BEGIN in 0.0 seconds
[0m18:14:05  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:05  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
   
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m18:14:05  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m18:14:05  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:14:05  Timing info for model.jaffle_shop.stg_customers (execute): 20:14:05.766723 => 20:14:05.836407
[0m18:14:05  On model.jaffle_shop.stg_customers: Close
[0m18:14:05  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:14:05  1 of 1 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.09s]
[0m18:14:05  Finished running node model.jaffle_shop.stg_customers
[0m18:14:05  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:14:05  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:14:05  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:14:05  
[0m18:14:05  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:14:05    column "customerid" does not exist
[0m18:14:05    LINE 16:         CustomerID as customer_id,
[0m18:14:05                     ^
[0m18:14:05    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m18:14:05    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:14:05  Connection 'master' was properly closed.
[0m18:14:05  Connection 'list_dbtsales' was properly closed.
[0m18:14:05  Connection 'list_dbtsales_public' was properly closed.
[0m18:14:05  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:14:05  
[0m18:14:05  Finished running 1 view model in 0 hours 0 minutes and 0.32 seconds (0.32s).
[0m18:14:05  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:14:05  Command `dbt run` failed at 20:14:05.867430 after 0.64 seconds
[0m18:14:05  Flushing usage events
[0m18:14:09  Running with dbt=1.5.4
[0m18:14:09  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:14:10  Registered adapter: postgres=1.5.4
[0m18:14:10  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:14:10  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m18:14:10  Partial parsing enabled, no changes found, skipping parsing
[0m18:14:10  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:14:10  
[0m18:14:10  Acquiring new postgres connection 'master'
[0m18:14:10  Acquiring new postgres connection 'list_dbtsales'
[0m18:14:10  Using postgres connection "list_dbtsales"
[0m18:14:10  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:14:10  Opening a new connection, currently in state init
[0m18:14:10  SQL status: SELECT 5 in 0.0 seconds
[0m18:14:10  On list_dbtsales: Close
[0m18:14:10  Using postgres connection "list_dbtsales"
[0m18:14:10  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:14:10  Opening a new connection, currently in state closed
[0m18:14:10  SQL status: SELECT 5 in 0.0 seconds
[0m18:14:10  On list_dbtsales: Close
[0m18:14:10  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:14:10  Using postgres connection "list_dbtsales_public"
[0m18:14:10  On list_dbtsales_public: BEGIN
[0m18:14:10  Opening a new connection, currently in state init
[0m18:14:10  SQL status: BEGIN in 0.0 seconds
[0m18:14:10  Using postgres connection "list_dbtsales_public"
[0m18:14:10  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:14:10  SQL status: SELECT 2 in 0.0 seconds
[0m18:14:10  On list_dbtsales_public: ROLLBACK
[0m18:14:10  On list_dbtsales_public: Close
[0m18:14:10  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:14:10  Using postgres connection "list_dbtsales_public_stg"
[0m18:14:10  On list_dbtsales_public_stg: BEGIN
[0m18:14:10  Opening a new connection, currently in state closed
[0m18:14:10  SQL status: BEGIN in 0.0 seconds
[0m18:14:10  Using postgres connection "list_dbtsales_public_stg"
[0m18:14:10  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:14:10  SQL status: SELECT 0 in 0.0 seconds
[0m18:14:10  On list_dbtsales_public_stg: ROLLBACK
[0m18:14:10  On list_dbtsales_public_stg: Close
[0m18:14:10  Using postgres connection "master"
[0m18:14:10  On master: BEGIN
[0m18:14:10  Opening a new connection, currently in state init
[0m18:14:10  SQL status: BEGIN in 0.0 seconds
[0m18:14:10  Using postgres connection "master"
[0m18:14:10  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:14:10  SQL status: SELECT 0 in 0.0 seconds
[0m18:14:10  On master: ROLLBACK
[0m18:14:10  Using postgres connection "master"
[0m18:14:10  On master: BEGIN
[0m18:14:10  SQL status: BEGIN in 0.0 seconds
[0m18:14:10  On master: COMMIT
[0m18:14:10  Using postgres connection "master"
[0m18:14:10  On master: COMMIT
[0m18:14:10  SQL status: COMMIT in 0.0 seconds
[0m18:14:10  On master: Close
[0m18:14:10  Concurrency: 1 threads (target='dev')
[0m18:14:10  
[0m18:14:10  Began running node model.jaffle_shop.raw_sales
[0m18:14:10  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:14:10  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:14:10  Began compiling node model.jaffle_shop.raw_sales
[0m18:14:10  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:14:10  Timing info for model.jaffle_shop.raw_sales (compile): 20:14:10.545091 => 20:14:10.550091
[0m18:14:10  Began executing node model.jaffle_shop.raw_sales
[0m18:14:10  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:14:10  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:10  On model.jaffle_shop.raw_sales: BEGIN
[0m18:14:10  Opening a new connection, currently in state init
[0m18:14:10  SQL status: BEGIN in 0.0 seconds
[0m18:14:10  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:10  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:14:10  SQL status: SELECT 2823 in 0.0 seconds
[0m18:14:10  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:10  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:14:10  SQL status: ALTER TABLE in 0.0 seconds
[0m18:14:10  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:10  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:14:10  SQL status: ALTER TABLE in 0.0 seconds
[0m18:14:10  On model.jaffle_shop.raw_sales: COMMIT
[0m18:14:10  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:10  On model.jaffle_shop.raw_sales: COMMIT
[0m18:14:10  SQL status: COMMIT in 0.0 seconds
[0m18:14:10  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:10  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:14:10  SQL status: DROP TABLE in 0.0 seconds
[0m18:14:10  Timing info for model.jaffle_shop.raw_sales (execute): 20:14:10.555590 => 20:14:10.776127
[0m18:14:10  On model.jaffle_shop.raw_sales: Close
[0m18:14:10  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.24s]
[0m18:14:10  Finished running node model.jaffle_shop.raw_sales
[0m18:14:10  Began running node model.jaffle_shop.stg_customers
[0m18:14:10  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:14:10  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:14:10  Began compiling node model.jaffle_shop.stg_customers
[0m18:14:10  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:14:10  Timing info for model.jaffle_shop.stg_customers (compile): 20:14:10.792660 => 20:14:10.798612
[0m18:14:10  Began executing node model.jaffle_shop.stg_customers
[0m18:14:10  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:14:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:10  On model.jaffle_shop.stg_customers: BEGIN
[0m18:14:10  Opening a new connection, currently in state closed
[0m18:14:10  SQL status: BEGIN in 0.0 seconds
[0m18:14:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
   
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CustomerID as customer_id,
        CUSTOMERNAME as customer_name,
        CONTACTFIRSTNAME as first_name,
        CONTACTLASTNAME as last_name

    from source

)

select * from renamed
  );
[0m18:14:10  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 16:         CustomerID as customer_id,
                 ^
HINT:  Perhaps you meant to reference the column "source.CustomerID".

[0m18:14:10  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:14:10  Timing info for model.jaffle_shop.stg_customers (execute): 20:14:10.801165 => 20:14:10.875730
[0m18:14:10  On model.jaffle_shop.stg_customers: Close
[0m18:14:10  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customerid" does not exist
  LINE 16:         CustomerID as customer_id,
                   ^
  HINT:  Perhaps you meant to reference the column "source.CustomerID".
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:14:10  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.10s]
[0m18:14:10  Finished running node model.jaffle_shop.stg_customers
[0m18:14:10  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:14:10  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:14:10  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:14:10  
[0m18:14:10  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:14:10    column "customerid" does not exist
[0m18:14:10    LINE 16:         CustomerID as customer_id,
[0m18:14:10                     ^
[0m18:14:10    HINT:  Perhaps you meant to reference the column "source.CustomerID".
[0m18:14:10    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:14:10  Connection 'master' was properly closed.
[0m18:14:10  Connection 'list_dbtsales' was properly closed.
[0m18:14:10  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:14:10  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:14:10  
[0m18:14:10  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.63 seconds (0.63s).
[0m18:14:10  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:14:10  Command `dbt run` failed at 20:14:10.912257 after 1.03 seconds
[0m18:14:10  Flushing usage events
[0m18:14:24  Running with dbt=1.5.4
[0m18:14:24  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:14:24  Registered adapter: postgres=1.5.4
[0m18:14:24  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:14:24  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:14:24  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:14:24  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:14:24  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:14:24  
[0m18:14:24  Acquiring new postgres connection 'master'
[0m18:14:24  Acquiring new postgres connection 'list_dbtsales'
[0m18:14:24  Using postgres connection "list_dbtsales"
[0m18:14:24  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:14:24  Opening a new connection, currently in state init
[0m18:14:24  SQL status: SELECT 5 in 0.0 seconds
[0m18:14:24  On list_dbtsales: Close
[0m18:14:24  Using postgres connection "list_dbtsales"
[0m18:14:24  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:14:24  Opening a new connection, currently in state closed
[0m18:14:24  SQL status: SELECT 5 in 0.0 seconds
[0m18:14:24  On list_dbtsales: Close
[0m18:14:24  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:14:24  Using postgres connection "list_dbtsales_public"
[0m18:14:24  On list_dbtsales_public: BEGIN
[0m18:14:24  Opening a new connection, currently in state init
[0m18:14:24  SQL status: BEGIN in 0.0 seconds
[0m18:14:24  Using postgres connection "list_dbtsales_public"
[0m18:14:24  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:14:24  SQL status: SELECT 2 in 0.0 seconds
[0m18:14:24  On list_dbtsales_public: ROLLBACK
[0m18:14:24  On list_dbtsales_public: Close
[0m18:14:24  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:14:24  Using postgres connection "list_dbtsales_public_stg"
[0m18:14:24  On list_dbtsales_public_stg: BEGIN
[0m18:14:24  Opening a new connection, currently in state closed
[0m18:14:24  SQL status: BEGIN in 0.0 seconds
[0m18:14:24  Using postgres connection "list_dbtsales_public_stg"
[0m18:14:24  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:14:24  SQL status: SELECT 0 in 0.0 seconds
[0m18:14:24  On list_dbtsales_public_stg: ROLLBACK
[0m18:14:24  On list_dbtsales_public_stg: Close
[0m18:14:24  Using postgres connection "master"
[0m18:14:24  On master: BEGIN
[0m18:14:24  Opening a new connection, currently in state init
[0m18:14:24  SQL status: BEGIN in 0.0 seconds
[0m18:14:24  Using postgres connection "master"
[0m18:14:24  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:14:24  SQL status: SELECT 0 in 0.0 seconds
[0m18:14:24  On master: ROLLBACK
[0m18:14:24  Using postgres connection "master"
[0m18:14:24  On master: BEGIN
[0m18:14:24  SQL status: BEGIN in 0.0 seconds
[0m18:14:24  On master: COMMIT
[0m18:14:24  Using postgres connection "master"
[0m18:14:24  On master: COMMIT
[0m18:14:24  SQL status: COMMIT in 0.0 seconds
[0m18:14:24  On master: Close
[0m18:14:24  Concurrency: 1 threads (target='dev')
[0m18:14:24  
[0m18:14:24  Began running node model.jaffle_shop.raw_sales
[0m18:14:24  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:14:24  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:14:24  Began compiling node model.jaffle_shop.raw_sales
[0m18:14:24  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:14:24  Timing info for model.jaffle_shop.raw_sales (compile): 20:14:24.889428 => 20:14:24.895439
[0m18:14:24  Began executing node model.jaffle_shop.raw_sales
[0m18:14:24  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:14:24  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:24  On model.jaffle_shop.raw_sales: BEGIN
[0m18:14:24  Opening a new connection, currently in state init
[0m18:14:24  SQL status: BEGIN in 0.0 seconds
[0m18:14:24  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:24  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:14:24  SQL status: SELECT 2823 in 0.0 seconds
[0m18:14:24  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:24  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:14:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:25  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:14:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:14:25  On model.jaffle_shop.raw_sales: COMMIT
[0m18:14:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:25  On model.jaffle_shop.raw_sales: COMMIT
[0m18:14:25  SQL status: COMMIT in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:14:25  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:14:25  SQL status: DROP TABLE in 0.0 seconds
[0m18:14:25  Timing info for model.jaffle_shop.raw_sales (execute): 20:14:24.897433 => 20:14:25.090581
[0m18:14:25  On model.jaffle_shop.raw_sales: Close
[0m18:14:25  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.21s]
[0m18:14:25  Finished running node model.jaffle_shop.raw_sales
[0m18:14:25  Began running node model.jaffle_shop.stg_customers
[0m18:14:25  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:14:25  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:14:25  Began compiling node model.jaffle_shop.stg_customers
[0m18:14:25  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:14:25  Timing info for model.jaffle_shop.stg_customers (compile): 20:14:25.101586 => 20:14:25.107586
[0m18:14:25  Began executing node model.jaffle_shop.stg_customers
[0m18:14:25  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:14:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:25  On model.jaffle_shop.stg_customers: BEGIN
[0m18:14:25  Opening a new connection, currently in state closed
[0m18:14:25  SQL status: BEGIN in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
   
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        *

    from source

)

select * from renamed
  );
[0m18:14:25  SQL status: CREATE VIEW in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:14:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:14:25  On model.jaffle_shop.stg_customers: COMMIT
[0m18:14:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:25  On model.jaffle_shop.stg_customers: COMMIT
[0m18:14:25  SQL status: COMMIT in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:14:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:14:25  SQL status: DROP VIEW in 0.0 seconds
[0m18:14:25  Timing info for model.jaffle_shop.stg_customers (execute): 20:14:25.110647 => 20:14:25.264335
[0m18:14:25  On model.jaffle_shop.stg_customers: Close
[0m18:14:25  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.17s]
[0m18:14:25  Finished running node model.jaffle_shop.stg_customers
[0m18:14:25  Began running node model.jaffle_shop.customers
[0m18:14:25  3 of 3 START sql view model public.customers ................................... [RUN]
[0m18:14:25  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:14:25  Began compiling node model.jaffle_shop.customers
[0m18:14:25  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:14:25  Timing info for model.jaffle_shop.customers (compile): 20:14:25.280057 => 20:14:25.286067
[0m18:14:25  Began executing node model.jaffle_shop.customers
[0m18:14:25  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:14:25  Using postgres connection "model.jaffle_shop.customers"
[0m18:14:25  On model.jaffle_shop.customers: BEGIN
[0m18:14:25  Opening a new connection, currently in state closed
[0m18:14:25  SQL status: BEGIN in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.customers"
[0m18:14:25  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

-- with customers as (

--     select * from "dbtsales"."public_stg"."stg_customers"

-- ),


-- final as (

--     select
--         customerid,
--         CUSTOMERNAME
--     from customers

-- )

select * from "dbtsales"."public_stg"."stg_customers"
  );
[0m18:14:25  SQL status: CREATE VIEW in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.customers"
[0m18:14:25  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m18:14:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:14:25  On model.jaffle_shop.customers: COMMIT
[0m18:14:25  Using postgres connection "model.jaffle_shop.customers"
[0m18:14:25  On model.jaffle_shop.customers: COMMIT
[0m18:14:25  SQL status: COMMIT in 0.0 seconds
[0m18:14:25  Using postgres connection "model.jaffle_shop.customers"
[0m18:14:25  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m18:14:25  SQL status: DROP VIEW in 0.0 seconds
[0m18:14:25  Timing info for model.jaffle_shop.customers (execute): 20:14:25.291065 => 20:14:25.368030
[0m18:14:25  On model.jaffle_shop.customers: Close
[0m18:14:25  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.10s]
[0m18:14:25  Finished running node model.jaffle_shop.customers
[0m18:14:25  Using postgres connection "master"
[0m18:14:25  On master: BEGIN
[0m18:14:25  Opening a new connection, currently in state closed
[0m18:14:25  SQL status: BEGIN in 0.0 seconds
[0m18:14:25  On master: COMMIT
[0m18:14:25  Using postgres connection "master"
[0m18:14:25  On master: COMMIT
[0m18:14:25  SQL status: COMMIT in 0.0 seconds
[0m18:14:25  On master: Close
[0m18:14:25  Connection 'master' was properly closed.
[0m18:14:25  Connection 'list_dbtsales' was properly closed.
[0m18:14:25  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:14:25  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:14:25  
[0m18:14:25  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.80 seconds (0.80s).
[0m18:14:25  Command end result
[0m18:14:25  
[0m18:14:25  [32mCompleted successfully[0m
[0m18:14:25  
[0m18:14:25  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m18:14:25  Command `dbt run` succeeded at 20:14:25.440186 after 1.25 seconds
[0m18:14:25  Flushing usage events
[0m18:33:18  Running with dbt=1.5.4
[0m18:33:18  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:33:19  Registered adapter: postgres=1.5.4
[0m18:33:19  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:33:19  Encountered an error:
Parsing Error
  Error reading jaffle_shop: sources.yml - Runtime Error
    Syntax error near line 9
    ------------------------------
    6  |     schema: public  
    7  |     tables:
    8  |       - name: stgsales
    9  |       columns:
    10 |         - name: CustomerID
    11 |         - name: CUSTOMERNAME 
    12 |     
    
    Raw Error:
    ------------------------------
    while parsing a block collection
      in "<unicode string>", line 8, column 7
    did not find expected '-' indicator
      in "<unicode string>", line 9, column 7
[0m18:33:19  Command `dbt run` failed at 20:33:19.171856 after 0.28 seconds
[0m18:33:19  Flushing usage events
[0m18:34:19  Running with dbt=1.5.4
[0m18:34:19  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:34:19  Registered adapter: postgres=1.5.4
[0m18:34:20  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:34:20  Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m18:34:20  Partial parsing: updated file: jaffle_shop://models\sources.yml
[0m18:34:20  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:34:20  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:34:20  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:34:20  
[0m18:34:20  Acquiring new postgres connection 'master'
[0m18:34:20  Acquiring new postgres connection 'list_dbtsales'
[0m18:34:20  Using postgres connection "list_dbtsales"
[0m18:34:20  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:34:20  Opening a new connection, currently in state init
[0m18:34:20  SQL status: SELECT 5 in 0.0 seconds
[0m18:34:20  On list_dbtsales: Close
[0m18:34:20  Using postgres connection "list_dbtsales"
[0m18:34:20  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:34:20  Opening a new connection, currently in state closed
[0m18:34:20  SQL status: SELECT 5 in 0.0 seconds
[0m18:34:20  On list_dbtsales: Close
[0m18:34:20  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:34:20  Using postgres connection "list_dbtsales_public_stg"
[0m18:34:20  On list_dbtsales_public_stg: BEGIN
[0m18:34:20  Opening a new connection, currently in state init
[0m18:34:20  SQL status: BEGIN in 0.0 seconds
[0m18:34:20  Using postgres connection "list_dbtsales_public_stg"
[0m18:34:20  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:34:20  SQL status: SELECT 1 in 0.0 seconds
[0m18:34:20  On list_dbtsales_public_stg: ROLLBACK
[0m18:34:20  On list_dbtsales_public_stg: Close
[0m18:34:20  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:34:20  Using postgres connection "list_dbtsales_public"
[0m18:34:20  On list_dbtsales_public: BEGIN
[0m18:34:20  Opening a new connection, currently in state closed
[0m18:34:20  SQL status: BEGIN in 0.0 seconds
[0m18:34:20  Using postgres connection "list_dbtsales_public"
[0m18:34:20  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:34:20  SQL status: SELECT 3 in 0.0 seconds
[0m18:34:20  On list_dbtsales_public: ROLLBACK
[0m18:34:20  On list_dbtsales_public: Close
[0m18:34:20  Using postgres connection "master"
[0m18:34:20  On master: BEGIN
[0m18:34:20  Opening a new connection, currently in state init
[0m18:34:20  SQL status: BEGIN in 0.0 seconds
[0m18:34:20  Using postgres connection "master"
[0m18:34:20  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:34:20  SQL status: SELECT 2 in 0.0 seconds
[0m18:34:20  On master: ROLLBACK
[0m18:34:20  Using postgres connection "master"
[0m18:34:20  On master: BEGIN
[0m18:34:20  SQL status: BEGIN in 0.0 seconds
[0m18:34:20  On master: COMMIT
[0m18:34:20  Using postgres connection "master"
[0m18:34:20  On master: COMMIT
[0m18:34:20  SQL status: COMMIT in 0.0 seconds
[0m18:34:20  On master: Close
[0m18:34:20  Concurrency: 1 threads (target='dev')
[0m18:34:20  
[0m18:34:20  Began running node model.jaffle_shop.raw_sales
[0m18:34:20  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:34:20  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:34:20  Began compiling node model.jaffle_shop.raw_sales
[0m18:34:20  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:34:20  Timing info for model.jaffle_shop.raw_sales (compile): 20:34:20.541421 => 20:34:20.545420
[0m18:34:20  Began executing node model.jaffle_shop.raw_sales
[0m18:34:20  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:34:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:34:20  On model.jaffle_shop.raw_sales: BEGIN
[0m18:34:20  Opening a new connection, currently in state init
[0m18:34:20  SQL status: BEGIN in 0.0 seconds
[0m18:34:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:34:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:34:20  SQL status: SELECT 2823 in 0.0 seconds
[0m18:34:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:34:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:34:20  SQL status: ALTER TABLE in 0.0 seconds
[0m18:34:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:34:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:34:20  SQL status: ALTER TABLE in 0.0 seconds
[0m18:34:20  On model.jaffle_shop.raw_sales: COMMIT
[0m18:34:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:34:20  On model.jaffle_shop.raw_sales: COMMIT
[0m18:34:20  SQL status: COMMIT in 0.0 seconds
[0m18:34:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:34:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:34:20  SQL status: DROP TABLE in 0.0 seconds
[0m18:34:20  Timing info for model.jaffle_shop.raw_sales (execute): 20:34:20.548420 => 20:34:20.751299
[0m18:34:20  On model.jaffle_shop.raw_sales: Close
[0m18:34:20  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.22s]
[0m18:34:20  Finished running node model.jaffle_shop.raw_sales
[0m18:34:20  Began running node model.jaffle_shop.stg_customers
[0m18:34:20  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:34:20  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:34:20  Began compiling node model.jaffle_shop.stg_customers
[0m18:34:20  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:34:20  Timing info for model.jaffle_shop.stg_customers (compile): 20:34:20.765713 => 20:34:20.772232
[0m18:34:20  Began executing node model.jaffle_shop.stg_customers
[0m18:34:20  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:34:20  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:34:20  On model.jaffle_shop.stg_customers: BEGIN
[0m18:34:20  Opening a new connection, currently in state closed
[0m18:34:20  SQL status: BEGIN in 0.0 seconds
[0m18:34:20  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:34:20  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
   
    select * from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        CUSTOMERNAME

    from source

)

select * from renamed
  );
[0m18:34:20  Postgres adapter: Postgres error: column "customername" does not exist
LINE 16:         CUSTOMERNAME
                 ^

[0m18:34:20  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:34:20  Timing info for model.jaffle_shop.stg_customers (execute): 20:34:20.774410 => 20:34:20.904858
[0m18:34:20  On model.jaffle_shop.stg_customers: Close
[0m18:34:20  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customername" does not exist
  LINE 16:         CUSTOMERNAME
                   ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:34:20  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.15s]
[0m18:34:20  Finished running node model.jaffle_shop.stg_customers
[0m18:34:20  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:34:20  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:34:20  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:34:20  
[0m18:34:20  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:34:20    column "customername" does not exist
[0m18:34:20    LINE 16:         CUSTOMERNAME
[0m18:34:20                     ^
[0m18:34:20    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:34:20  Connection 'master' was properly closed.
[0m18:34:20  Connection 'list_dbtsales' was properly closed.
[0m18:34:20  Connection 'list_dbtsales_public' was properly closed.
[0m18:34:20  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:34:20  
[0m18:34:20  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.66 seconds (0.66s).
[0m18:34:20  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:34:20  Command `dbt run` failed at 20:34:20.936857 after 1.07 seconds
[0m18:34:20  Flushing usage events
[0m18:37:34  Running with dbt=1.5.4
[0m18:37:34  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:37:34  Registered adapter: postgres=1.5.4
[0m18:37:34  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:37:34  Partial parsing enabled: 0 files deleted, 0 files added, 4 files changed.
[0m18:37:34  Partial parsing: updated file: jaffle_shop://models\schema.yml
[0m18:37:34  Partial parsing: updated file: jaffle_shop://models\source\raw_sales.sql
[0m18:37:34  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m18:37:34  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:37:34  1699: static parser successfully parsed customers.sql
[0m18:37:34  1699: static parser successfully parsed source\raw_sales.sql
[0m18:37:34  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:37:35  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:37:35  
[0m18:37:35  Acquiring new postgres connection 'master'
[0m18:37:35  Acquiring new postgres connection 'list_dbtsales'
[0m18:37:35  Using postgres connection "list_dbtsales"
[0m18:37:35  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:37:35  Opening a new connection, currently in state init
[0m18:37:35  SQL status: SELECT 5 in 0.0 seconds
[0m18:37:35  On list_dbtsales: Close
[0m18:37:35  Using postgres connection "list_dbtsales"
[0m18:37:35  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:37:35  Opening a new connection, currently in state closed
[0m18:37:35  SQL status: SELECT 5 in 0.0 seconds
[0m18:37:35  On list_dbtsales: Close
[0m18:37:35  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:37:35  Using postgres connection "list_dbtsales_public_stg"
[0m18:37:35  On list_dbtsales_public_stg: BEGIN
[0m18:37:35  Opening a new connection, currently in state init
[0m18:37:35  SQL status: BEGIN in 0.0 seconds
[0m18:37:35  Using postgres connection "list_dbtsales_public_stg"
[0m18:37:35  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:37:35  SQL status: SELECT 0 in 0.0 seconds
[0m18:37:35  On list_dbtsales_public_stg: ROLLBACK
[0m18:37:35  On list_dbtsales_public_stg: Close
[0m18:37:35  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:37:35  Using postgres connection "list_dbtsales_public"
[0m18:37:35  On list_dbtsales_public: BEGIN
[0m18:37:35  Opening a new connection, currently in state closed
[0m18:37:35  SQL status: BEGIN in 0.0 seconds
[0m18:37:35  Using postgres connection "list_dbtsales_public"
[0m18:37:35  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:37:35  SQL status: SELECT 2 in 0.0 seconds
[0m18:37:35  On list_dbtsales_public: ROLLBACK
[0m18:37:35  On list_dbtsales_public: Close
[0m18:37:35  Using postgres connection "master"
[0m18:37:35  On master: BEGIN
[0m18:37:35  Opening a new connection, currently in state init
[0m18:37:35  SQL status: BEGIN in 0.0 seconds
[0m18:37:35  Using postgres connection "master"
[0m18:37:35  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:37:35  SQL status: SELECT 0 in 0.0 seconds
[0m18:37:35  On master: ROLLBACK
[0m18:37:35  Using postgres connection "master"
[0m18:37:35  On master: BEGIN
[0m18:37:35  SQL status: BEGIN in 0.0 seconds
[0m18:37:35  On master: COMMIT
[0m18:37:35  Using postgres connection "master"
[0m18:37:35  On master: COMMIT
[0m18:37:35  SQL status: COMMIT in 0.0 seconds
[0m18:37:35  On master: Close
[0m18:37:35  Concurrency: 1 threads (target='dev')
[0m18:37:35  
[0m18:37:35  Began running node model.jaffle_shop.raw_sales
[0m18:37:35  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:37:35  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:37:35  Began compiling node model.jaffle_shop.raw_sales
[0m18:37:35  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:37:35  Timing info for model.jaffle_shop.raw_sales (compile): 20:37:35.276555 => 20:37:35.282534
[0m18:37:35  Began executing node model.jaffle_shop.raw_sales
[0m18:37:35  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:37:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:37:35  On model.jaffle_shop.raw_sales: BEGIN
[0m18:37:35  Opening a new connection, currently in state init
[0m18:37:35  SQL status: BEGIN in 0.0 seconds
[0m18:37:35  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:37:35  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select CustomerID from "dbtsales"."public"."stgsales"
  );
  
[0m18:37:35  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
                    ^
HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".

[0m18:37:35  On model.jaffle_shop.raw_sales: ROLLBACK
[0m18:37:35  Timing info for model.jaffle_shop.raw_sales (execute): 20:37:35.284538 => 20:37:35.370930
[0m18:37:35  On model.jaffle_shop.raw_sales: Close
[0m18:37:35  Database Error in model raw_sales (models\source\raw_sales.sql)
  column "customerid" does not exist
  LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
                      ^
  HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".
  compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:37:35  1 of 3 ERROR creating sql table model public.raw_sales ......................... [[31mERROR[0m in 0.11s]
[0m18:37:35  Finished running node model.jaffle_shop.raw_sales
[0m18:37:35  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:37:35  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:37:35  CANCEL query model.jaffle_shop.raw_sales ....................................... [[31mCANCEL[0m]
[0m18:37:35  
[0m18:37:35  [33mDatabase Error in model raw_sales (models\source\raw_sales.sql)[0m
[0m18:37:35    column "customerid" does not exist
[0m18:37:35    LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
[0m18:37:35                        ^
[0m18:37:35    HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".
[0m18:37:35    compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:37:35  Connection 'master' was properly closed.
[0m18:37:35  Connection 'list_dbtsales' was properly closed.
[0m18:37:35  Connection 'list_dbtsales_public' was properly closed.
[0m18:37:35  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m18:37:35  
[0m18:37:35  Finished running 1 table model in 0 hours 0 minutes and 0.38 seconds (0.38s).
[0m18:37:35  Encountered an error:
FailFast Error in model raw_sales (models\source\raw_sales.sql)
  Failing early due to test failure or runtime error
[0m18:37:35  Command `dbt run` failed at 20:37:35.404934 after 0.94 seconds
[0m18:37:35  Flushing usage events
[0m18:38:12  Running with dbt=1.5.4
[0m18:38:12  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:38:12  Registered adapter: postgres=1.5.4
[0m18:38:12  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:38:12  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m18:38:12  Partial parsing enabled, no changes found, skipping parsing
[0m18:38:12  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:38:12  
[0m18:38:12  Acquiring new postgres connection 'master'
[0m18:38:12  Acquiring new postgres connection 'list_dbtsales'
[0m18:38:13  Using postgres connection "list_dbtsales"
[0m18:38:13  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:38:13  Opening a new connection, currently in state init
[0m18:38:13  SQL status: SELECT 5 in 0.0 seconds
[0m18:38:13  On list_dbtsales: Close
[0m18:38:13  Using postgres connection "list_dbtsales"
[0m18:38:13  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:38:13  Opening a new connection, currently in state closed
[0m18:38:13  SQL status: SELECT 5 in 0.0 seconds
[0m18:38:13  On list_dbtsales: Close
[0m18:38:13  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:38:13  Using postgres connection "list_dbtsales_public_stg"
[0m18:38:13  On list_dbtsales_public_stg: BEGIN
[0m18:38:13  Opening a new connection, currently in state init
[0m18:38:13  SQL status: BEGIN in 0.0 seconds
[0m18:38:13  Using postgres connection "list_dbtsales_public_stg"
[0m18:38:13  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:38:13  SQL status: SELECT 0 in 0.0 seconds
[0m18:38:13  On list_dbtsales_public_stg: ROLLBACK
[0m18:38:13  On list_dbtsales_public_stg: Close
[0m18:38:13  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:38:13  Using postgres connection "list_dbtsales_public"
[0m18:38:13  On list_dbtsales_public: BEGIN
[0m18:38:13  Opening a new connection, currently in state closed
[0m18:38:13  SQL status: BEGIN in 0.0 seconds
[0m18:38:13  Using postgres connection "list_dbtsales_public"
[0m18:38:13  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:38:13  SQL status: SELECT 1 in 0.0 seconds
[0m18:38:13  On list_dbtsales_public: ROLLBACK
[0m18:38:13  On list_dbtsales_public: Close
[0m18:38:13  Using postgres connection "master"
[0m18:38:13  On master: BEGIN
[0m18:38:13  Opening a new connection, currently in state init
[0m18:38:13  SQL status: BEGIN in 0.0 seconds
[0m18:38:13  Using postgres connection "master"
[0m18:38:13  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:38:13  SQL status: SELECT 0 in 0.0 seconds
[0m18:38:13  On master: ROLLBACK
[0m18:38:13  Using postgres connection "master"
[0m18:38:13  On master: BEGIN
[0m18:38:13  SQL status: BEGIN in 0.0 seconds
[0m18:38:13  On master: COMMIT
[0m18:38:13  Using postgres connection "master"
[0m18:38:13  On master: COMMIT
[0m18:38:13  SQL status: COMMIT in 0.0 seconds
[0m18:38:13  On master: Close
[0m18:38:13  Concurrency: 1 threads (target='dev')
[0m18:38:13  
[0m18:38:13  Began running node model.jaffle_shop.raw_sales
[0m18:38:13  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:38:13  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:38:13  Began compiling node model.jaffle_shop.raw_sales
[0m18:38:13  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:38:13  Timing info for model.jaffle_shop.raw_sales (compile): 20:38:13.259141 => 20:38:13.264405
[0m18:38:13  Began executing node model.jaffle_shop.raw_sales
[0m18:38:13  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:38:13  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:38:13  On model.jaffle_shop.raw_sales: BEGIN
[0m18:38:13  Opening a new connection, currently in state init
[0m18:38:13  SQL status: BEGIN in 0.0 seconds
[0m18:38:13  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:38:13  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select CustomerID from "dbtsales"."public"."stgsales"
  );
  
[0m18:38:13  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
                    ^
HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".

[0m18:38:13  On model.jaffle_shop.raw_sales: ROLLBACK
[0m18:38:13  Timing info for model.jaffle_shop.raw_sales (execute): 20:38:13.267404 => 20:38:13.351223
[0m18:38:13  On model.jaffle_shop.raw_sales: Close
[0m18:38:13  Database Error in model raw_sales (models\source\raw_sales.sql)
  column "customerid" does not exist
  LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
                      ^
  HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".
  compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:38:13  1 of 3 ERROR creating sql table model public.raw_sales ......................... [[31mERROR[0m in 0.11s]
[0m18:38:13  Finished running node model.jaffle_shop.raw_sales
[0m18:38:13  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:38:13  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:38:13  CANCEL query model.jaffle_shop.raw_sales ....................................... [[31mCANCEL[0m]
[0m18:38:13  
[0m18:38:13  [33mDatabase Error in model raw_sales (models\source\raw_sales.sql)[0m
[0m18:38:13    column "customerid" does not exist
[0m18:38:13    LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
[0m18:38:13                        ^
[0m18:38:13    HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".
[0m18:38:13    compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:38:13  Connection 'master' was properly closed.
[0m18:38:13  Connection 'list_dbtsales' was properly closed.
[0m18:38:13  Connection 'list_dbtsales_public' was properly closed.
[0m18:38:13  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m18:38:13  
[0m18:38:13  Finished running 1 table model in 0 hours 0 minutes and 0.39 seconds (0.39s).
[0m18:38:13  Encountered an error:
FailFast Error in model raw_sales (models\source\raw_sales.sql)
  Failing early due to test failure or runtime error
[0m18:38:13  Command `dbt run` failed at 20:38:13.384785 after 0.68 seconds
[0m18:38:13  Flushing usage events
[0m18:39:16  Running with dbt=1.5.4
[0m18:39:16  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:39:16  Registered adapter: postgres=1.5.4
[0m18:39:16  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:39:17  Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m18:39:17  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:39:17  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m18:39:17  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:39:17  1699: static parser successfully parsed customers.sql
[0m18:39:17  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:39:17  
[0m18:39:17  Acquiring new postgres connection 'master'
[0m18:39:17  Acquiring new postgres connection 'list_dbtsales'
[0m18:39:17  Using postgres connection "list_dbtsales"
[0m18:39:17  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:39:17  Opening a new connection, currently in state init
[0m18:39:17  SQL status: SELECT 5 in 0.0 seconds
[0m18:39:17  On list_dbtsales: Close
[0m18:39:17  Using postgres connection "list_dbtsales"
[0m18:39:17  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:39:17  Opening a new connection, currently in state closed
[0m18:39:17  SQL status: SELECT 5 in 0.0 seconds
[0m18:39:17  On list_dbtsales: Close
[0m18:39:17  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:39:17  Using postgres connection "list_dbtsales_public_stg"
[0m18:39:17  On list_dbtsales_public_stg: BEGIN
[0m18:39:17  Opening a new connection, currently in state init
[0m18:39:17  SQL status: BEGIN in 0.0 seconds
[0m18:39:17  Using postgres connection "list_dbtsales_public_stg"
[0m18:39:17  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:39:17  SQL status: SELECT 0 in 0.0 seconds
[0m18:39:17  On list_dbtsales_public_stg: ROLLBACK
[0m18:39:17  On list_dbtsales_public_stg: Close
[0m18:39:17  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:39:17  Using postgres connection "list_dbtsales_public"
[0m18:39:17  On list_dbtsales_public: BEGIN
[0m18:39:17  Opening a new connection, currently in state closed
[0m18:39:17  SQL status: BEGIN in 0.0 seconds
[0m18:39:17  Using postgres connection "list_dbtsales_public"
[0m18:39:17  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:39:17  SQL status: SELECT 1 in 0.0 seconds
[0m18:39:17  On list_dbtsales_public: ROLLBACK
[0m18:39:17  On list_dbtsales_public: Close
[0m18:39:17  Using postgres connection "master"
[0m18:39:17  On master: BEGIN
[0m18:39:17  Opening a new connection, currently in state init
[0m18:39:17  SQL status: BEGIN in 0.0 seconds
[0m18:39:17  Using postgres connection "master"
[0m18:39:17  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:39:17  SQL status: SELECT 0 in 0.0 seconds
[0m18:39:17  On master: ROLLBACK
[0m18:39:17  Using postgres connection "master"
[0m18:39:17  On master: BEGIN
[0m18:39:17  SQL status: BEGIN in 0.0 seconds
[0m18:39:17  On master: COMMIT
[0m18:39:17  Using postgres connection "master"
[0m18:39:17  On master: COMMIT
[0m18:39:17  SQL status: COMMIT in 0.0 seconds
[0m18:39:17  On master: Close
[0m18:39:17  Concurrency: 1 threads (target='dev')
[0m18:39:17  
[0m18:39:17  Began running node model.jaffle_shop.raw_sales
[0m18:39:17  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:39:17  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:39:17  Began compiling node model.jaffle_shop.raw_sales
[0m18:39:17  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:39:17  Timing info for model.jaffle_shop.raw_sales (compile): 20:39:17.455460 => 20:39:17.461460
[0m18:39:17  Began executing node model.jaffle_shop.raw_sales
[0m18:39:17  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:39:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:17  On model.jaffle_shop.raw_sales: BEGIN
[0m18:39:17  Opening a new connection, currently in state init
[0m18:39:17  SQL status: BEGIN in 0.0 seconds
[0m18:39:17  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:17  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select CustomerID from "dbtsales"."public"."stgsales"
  );
  
[0m18:39:17  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
                    ^
HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".

[0m18:39:17  On model.jaffle_shop.raw_sales: ROLLBACK
[0m18:39:17  Timing info for model.jaffle_shop.raw_sales (execute): 20:39:17.465484 => 20:39:17.576019
[0m18:39:17  On model.jaffle_shop.raw_sales: Close
[0m18:39:17  Database Error in model raw_sales (models\source\raw_sales.sql)
  column "customerid" does not exist
  LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
                      ^
  HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".
  compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:39:17  1 of 3 ERROR creating sql table model public.raw_sales ......................... [[31mERROR[0m in 0.13s]
[0m18:39:17  Finished running node model.jaffle_shop.raw_sales
[0m18:39:17  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:39:17  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:39:17  CANCEL query model.jaffle_shop.raw_sales ....................................... [[31mCANCEL[0m]
[0m18:39:17  
[0m18:39:17  [33mDatabase Error in model raw_sales (models\source\raw_sales.sql)[0m
[0m18:39:17    column "customerid" does not exist
[0m18:39:17    LINE 12:     select CustomerID from "dbtsales"."public"."stgsales"
[0m18:39:17                        ^
[0m18:39:17    HINT:  Perhaps you meant to reference the column "stgsales.CustomerID".
[0m18:39:17    compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:39:17  Connection 'master' was properly closed.
[0m18:39:17  Connection 'list_dbtsales' was properly closed.
[0m18:39:17  Connection 'list_dbtsales_public' was properly closed.
[0m18:39:17  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m18:39:17  
[0m18:39:17  Finished running 1 table model in 0 hours 0 minutes and 0.46 seconds (0.46s).
[0m18:39:17  Encountered an error:
FailFast Error in model raw_sales (models\source\raw_sales.sql)
  Failing early due to test failure or runtime error
[0m18:39:17  Command `dbt run` failed at 20:39:17.612030 after 0.95 seconds
[0m18:39:17  Flushing usage events
[0m18:39:36  Running with dbt=1.5.4
[0m18:39:36  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:39:36  Registered adapter: postgres=1.5.4
[0m18:39:36  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:39:36  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:39:36  Partial parsing: updated file: jaffle_shop://models\source\raw_sales.sql
[0m18:39:36  1699: static parser successfully parsed source\raw_sales.sql
[0m18:39:36  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:39:36  
[0m18:39:36  Acquiring new postgres connection 'master'
[0m18:39:36  Acquiring new postgres connection 'list_dbtsales'
[0m18:39:36  Using postgres connection "list_dbtsales"
[0m18:39:36  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:39:36  Opening a new connection, currently in state init
[0m18:39:36  SQL status: SELECT 5 in 0.0 seconds
[0m18:39:36  On list_dbtsales: Close
[0m18:39:37  Using postgres connection "list_dbtsales"
[0m18:39:37  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:39:37  Opening a new connection, currently in state closed
[0m18:39:37  SQL status: SELECT 5 in 0.0 seconds
[0m18:39:37  On list_dbtsales: Close
[0m18:39:37  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:39:37  Using postgres connection "list_dbtsales_public"
[0m18:39:37  On list_dbtsales_public: BEGIN
[0m18:39:37  Opening a new connection, currently in state init
[0m18:39:37  SQL status: BEGIN in 0.0 seconds
[0m18:39:37  Using postgres connection "list_dbtsales_public"
[0m18:39:37  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:39:37  SQL status: SELECT 1 in 0.0 seconds
[0m18:39:37  On list_dbtsales_public: ROLLBACK
[0m18:39:37  On list_dbtsales_public: Close
[0m18:39:37  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:39:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:39:37  On list_dbtsales_public_stg: BEGIN
[0m18:39:37  Opening a new connection, currently in state closed
[0m18:39:37  SQL status: BEGIN in 0.0 seconds
[0m18:39:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:39:37  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:39:37  SQL status: SELECT 0 in 0.0 seconds
[0m18:39:37  On list_dbtsales_public_stg: ROLLBACK
[0m18:39:37  On list_dbtsales_public_stg: Close
[0m18:39:37  Using postgres connection "master"
[0m18:39:37  On master: BEGIN
[0m18:39:37  Opening a new connection, currently in state init
[0m18:39:37  SQL status: BEGIN in 0.0 seconds
[0m18:39:37  Using postgres connection "master"
[0m18:39:37  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:39:37  SQL status: SELECT 0 in 0.0 seconds
[0m18:39:37  On master: ROLLBACK
[0m18:39:37  Using postgres connection "master"
[0m18:39:37  On master: BEGIN
[0m18:39:37  SQL status: BEGIN in 0.0 seconds
[0m18:39:37  On master: COMMIT
[0m18:39:37  Using postgres connection "master"
[0m18:39:37  On master: COMMIT
[0m18:39:37  SQL status: COMMIT in 0.0 seconds
[0m18:39:37  On master: Close
[0m18:39:37  Concurrency: 1 threads (target='dev')
[0m18:39:37  
[0m18:39:37  Began running node model.jaffle_shop.raw_sales
[0m18:39:37  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:39:37  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:39:37  Began compiling node model.jaffle_shop.raw_sales
[0m18:39:37  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:39:37  Timing info for model.jaffle_shop.raw_sales (compile): 20:39:37.224784 => 20:39:37.232793
[0m18:39:37  Began executing node model.jaffle_shop.raw_sales
[0m18:39:37  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:39:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:37  On model.jaffle_shop.raw_sales: BEGIN
[0m18:39:37  Opening a new connection, currently in state init
[0m18:39:37  SQL status: BEGIN in 0.0 seconds
[0m18:39:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:39:37  SQL status: SELECT 2823 in 0.0 seconds
[0m18:39:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:39:37  SQL status: ALTER TABLE in 0.0 seconds
[0m18:39:37  On model.jaffle_shop.raw_sales: COMMIT
[0m18:39:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:37  On model.jaffle_shop.raw_sales: COMMIT
[0m18:39:37  SQL status: COMMIT in 0.0 seconds
[0m18:39:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:39:37  SQL status: DROP TABLE in 0.0 seconds
[0m18:39:37  Timing info for model.jaffle_shop.raw_sales (execute): 20:39:37.235793 => 20:39:37.469965
[0m18:39:37  On model.jaffle_shop.raw_sales: Close
[0m18:39:37  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.25s]
[0m18:39:37  Finished running node model.jaffle_shop.raw_sales
[0m18:39:37  Began running node model.jaffle_shop.stg_customers
[0m18:39:37  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:39:37  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:39:37  Began compiling node model.jaffle_shop.stg_customers
[0m18:39:37  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:39:37  Timing info for model.jaffle_shop.stg_customers (compile): 20:39:37.486704 => 20:39:37.495713
[0m18:39:37  Began executing node model.jaffle_shop.stg_customers
[0m18:39:37  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:39:37  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:39:37  On model.jaffle_shop.stg_customers: BEGIN
[0m18:39:37  Opening a new connection, currently in state closed
[0m18:39:37  SQL status: BEGIN in 0.0 seconds
[0m18:39:37  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:39:37  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

-- select * from renamed
  );
[0m18:39:37  Postgres adapter: Postgres error: syntax error at or near ")"
LINE 24:   );
           ^

[0m18:39:37  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:39:37  Timing info for model.jaffle_shop.stg_customers (execute): 20:39:37.498594 => 20:39:37.567601
[0m18:39:37  On model.jaffle_shop.stg_customers: Close
[0m18:39:37  Database Error in model stg_customers (models\staging\stg_customers.sql)
  syntax error at or near ")"
  LINE 24:   );
             ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:39:37  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.10s]
[0m18:39:37  Finished running node model.jaffle_shop.stg_customers
[0m18:39:37  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:39:37  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:39:37  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:39:37  
[0m18:39:37  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:39:37    syntax error at or near ")"
[0m18:39:37    LINE 24:   );
[0m18:39:37               ^
[0m18:39:37    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:39:37  Connection 'master' was properly closed.
[0m18:39:37  Connection 'list_dbtsales' was properly closed.
[0m18:39:37  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:39:37  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:39:37  
[0m18:39:37  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.67 seconds (0.67s).
[0m18:39:37  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:39:37  Command `dbt run` failed at 20:39:37.612436 after 1.08 seconds
[0m18:39:37  Flushing usage events
[0m18:40:27  Running with dbt=1.5.4
[0m18:40:27  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:40:27  Registered adapter: postgres=1.5.4
[0m18:40:27  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:40:27  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:40:27  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:40:27  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:40:27  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:40:27  
[0m18:40:27  Acquiring new postgres connection 'master'
[0m18:40:27  Acquiring new postgres connection 'list_dbtsales'
[0m18:40:27  Using postgres connection "list_dbtsales"
[0m18:40:27  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:40:27  Opening a new connection, currently in state init
[0m18:40:27  SQL status: SELECT 5 in 0.0 seconds
[0m18:40:27  On list_dbtsales: Close
[0m18:40:27  Using postgres connection "list_dbtsales"
[0m18:40:27  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:40:27  Opening a new connection, currently in state closed
[0m18:40:27  SQL status: SELECT 5 in 0.0 seconds
[0m18:40:27  On list_dbtsales: Close
[0m18:40:27  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:40:27  Using postgres connection "list_dbtsales_public_stg"
[0m18:40:27  On list_dbtsales_public_stg: BEGIN
[0m18:40:27  Opening a new connection, currently in state init
[0m18:40:27  SQL status: BEGIN in 0.0 seconds
[0m18:40:27  Using postgres connection "list_dbtsales_public_stg"
[0m18:40:27  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:40:27  SQL status: SELECT 0 in 0.0 seconds
[0m18:40:27  On list_dbtsales_public_stg: ROLLBACK
[0m18:40:27  On list_dbtsales_public_stg: Close
[0m18:40:27  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:40:27  Using postgres connection "list_dbtsales_public"
[0m18:40:27  On list_dbtsales_public: BEGIN
[0m18:40:27  Opening a new connection, currently in state closed
[0m18:40:27  SQL status: BEGIN in 0.0 seconds
[0m18:40:27  Using postgres connection "list_dbtsales_public"
[0m18:40:27  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:40:27  SQL status: SELECT 2 in 0.0 seconds
[0m18:40:27  On list_dbtsales_public: ROLLBACK
[0m18:40:27  On list_dbtsales_public: Close
[0m18:40:27  Using postgres connection "master"
[0m18:40:27  On master: BEGIN
[0m18:40:27  Opening a new connection, currently in state init
[0m18:40:27  SQL status: BEGIN in 0.0 seconds
[0m18:40:27  Using postgres connection "master"
[0m18:40:27  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:40:27  SQL status: SELECT 0 in 0.0 seconds
[0m18:40:27  On master: ROLLBACK
[0m18:40:27  Using postgres connection "master"
[0m18:40:27  On master: BEGIN
[0m18:40:27  SQL status: BEGIN in 0.0 seconds
[0m18:40:28  On master: COMMIT
[0m18:40:28  Using postgres connection "master"
[0m18:40:28  On master: COMMIT
[0m18:40:28  SQL status: COMMIT in 0.0 seconds
[0m18:40:28  On master: Close
[0m18:40:28  Concurrency: 1 threads (target='dev')
[0m18:40:28  
[0m18:40:28  Began running node model.jaffle_shop.raw_sales
[0m18:40:28  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:40:28  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:40:28  Began compiling node model.jaffle_shop.raw_sales
[0m18:40:28  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:40:28  Timing info for model.jaffle_shop.raw_sales (compile): 20:40:28.024562 => 20:40:28.029553
[0m18:40:28  Began executing node model.jaffle_shop.raw_sales
[0m18:40:28  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:40:28  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:28  On model.jaffle_shop.raw_sales: BEGIN
[0m18:40:28  Opening a new connection, currently in state init
[0m18:40:28  SQL status: BEGIN in 0.0 seconds
[0m18:40:28  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:28  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:40:28  SQL status: SELECT 2823 in 0.0 seconds
[0m18:40:28  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:28  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:40:28  SQL status: ALTER TABLE in 0.0 seconds
[0m18:40:28  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:28  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:40:28  SQL status: ALTER TABLE in 0.0 seconds
[0m18:40:28  On model.jaffle_shop.raw_sales: COMMIT
[0m18:40:28  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:28  On model.jaffle_shop.raw_sales: COMMIT
[0m18:40:28  SQL status: COMMIT in 0.0 seconds
[0m18:40:28  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:28  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:40:28  SQL status: DROP TABLE in 0.0 seconds
[0m18:40:28  Timing info for model.jaffle_shop.raw_sales (execute): 20:40:28.031553 => 20:40:28.236317
[0m18:40:28  On model.jaffle_shop.raw_sales: Close
[0m18:40:28  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.22s]
[0m18:40:28  Finished running node model.jaffle_shop.raw_sales
[0m18:40:28  Began running node model.jaffle_shop.stg_customers
[0m18:40:28  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:40:28  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:40:28  Began compiling node model.jaffle_shop.stg_customers
[0m18:40:28  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:40:28  Timing info for model.jaffle_shop.stg_customers (compile): 20:40:28.251319 => 20:40:28.255319
[0m18:40:28  Began executing node model.jaffle_shop.stg_customers
[0m18:40:28  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:40:28  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:40:28  On model.jaffle_shop.stg_customers: BEGIN
[0m18:40:28  Opening a new connection, currently in state closed
[0m18:40:28  SQL status: BEGIN in 0.0 seconds
[0m18:40:28  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:40:28  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select 1 from 1
  );
[0m18:40:28  Postgres adapter: Postgres error: syntax error at or near "1"
LINE 23: select 1 from 1
                       ^

[0m18:40:28  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:40:28  Timing info for model.jaffle_shop.stg_customers (execute): 20:40:28.261318 => 20:40:28.379748
[0m18:40:28  On model.jaffle_shop.stg_customers: Close
[0m18:40:28  Database Error in model stg_customers (models\staging\stg_customers.sql)
  syntax error at or near "1"
  LINE 23: select 1 from 1
                         ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:40:28  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.14s]
[0m18:40:28  Finished running node model.jaffle_shop.stg_customers
[0m18:40:28  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:40:28  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:40:28  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:40:28  
[0m18:40:28  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:40:28    syntax error at or near "1"
[0m18:40:28    LINE 23: select 1 from 1
[0m18:40:28                           ^
[0m18:40:28    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:40:28  Connection 'master' was properly closed.
[0m18:40:28  Connection 'list_dbtsales' was properly closed.
[0m18:40:28  Connection 'list_dbtsales_public' was properly closed.
[0m18:40:28  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:40:28  
[0m18:40:28  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.62 seconds (0.62s).
[0m18:40:28  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:40:28  Command `dbt run` failed at 20:40:28.420908 after 1.04 seconds
[0m18:40:28  Flushing usage events
[0m18:40:45  Running with dbt=1.5.4
[0m18:40:45  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:40:45  Registered adapter: postgres=1.5.4
[0m18:40:45  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:40:45  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:40:45  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:40:45  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:40:45  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:40:45  
[0m18:40:45  Acquiring new postgres connection 'master'
[0m18:40:45  Acquiring new postgres connection 'list_dbtsales'
[0m18:40:45  Using postgres connection "list_dbtsales"
[0m18:40:45  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:40:45  Opening a new connection, currently in state init
[0m18:40:45  SQL status: SELECT 5 in 0.0 seconds
[0m18:40:45  On list_dbtsales: Close
[0m18:40:45  Using postgres connection "list_dbtsales"
[0m18:40:46  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:40:46  Opening a new connection, currently in state closed
[0m18:40:46  SQL status: SELECT 5 in 0.0 seconds
[0m18:40:46  On list_dbtsales: Close
[0m18:40:46  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:40:46  Using postgres connection "list_dbtsales_public_stg"
[0m18:40:46  On list_dbtsales_public_stg: BEGIN
[0m18:40:46  Opening a new connection, currently in state init
[0m18:40:46  SQL status: BEGIN in 0.0 seconds
[0m18:40:46  Using postgres connection "list_dbtsales_public_stg"
[0m18:40:46  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:40:46  SQL status: SELECT 0 in 0.0 seconds
[0m18:40:46  On list_dbtsales_public_stg: ROLLBACK
[0m18:40:46  On list_dbtsales_public_stg: Close
[0m18:40:46  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:40:46  Using postgres connection "list_dbtsales_public"
[0m18:40:46  On list_dbtsales_public: BEGIN
[0m18:40:46  Opening a new connection, currently in state closed
[0m18:40:46  SQL status: BEGIN in 0.0 seconds
[0m18:40:46  Using postgres connection "list_dbtsales_public"
[0m18:40:46  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:40:46  SQL status: SELECT 2 in 0.0 seconds
[0m18:40:46  On list_dbtsales_public: ROLLBACK
[0m18:40:46  On list_dbtsales_public: Close
[0m18:40:46  Using postgres connection "master"
[0m18:40:46  On master: BEGIN
[0m18:40:46  Opening a new connection, currently in state init
[0m18:40:46  SQL status: BEGIN in 0.0 seconds
[0m18:40:46  Using postgres connection "master"
[0m18:40:46  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:40:46  SQL status: SELECT 0 in 0.0 seconds
[0m18:40:46  On master: ROLLBACK
[0m18:40:46  Using postgres connection "master"
[0m18:40:46  On master: BEGIN
[0m18:40:46  SQL status: BEGIN in 0.0 seconds
[0m18:40:46  On master: COMMIT
[0m18:40:46  Using postgres connection "master"
[0m18:40:46  On master: COMMIT
[0m18:40:46  SQL status: COMMIT in 0.0 seconds
[0m18:40:46  On master: Close
[0m18:40:46  Concurrency: 1 threads (target='dev')
[0m18:40:46  
[0m18:40:46  Began running node model.jaffle_shop.raw_sales
[0m18:40:46  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:40:46  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:40:46  Began compiling node model.jaffle_shop.raw_sales
[0m18:40:46  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:40:46  Timing info for model.jaffle_shop.raw_sales (compile): 20:40:46.242033 => 20:40:46.247031
[0m18:40:46  Began executing node model.jaffle_shop.raw_sales
[0m18:40:46  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:40:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:46  On model.jaffle_shop.raw_sales: BEGIN
[0m18:40:46  Opening a new connection, currently in state init
[0m18:40:46  SQL status: BEGIN in 0.0 seconds
[0m18:40:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:40:46  SQL status: SELECT 2823 in 0.0 seconds
[0m18:40:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:40:46  SQL status: ALTER TABLE in 0.0 seconds
[0m18:40:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:40:46  SQL status: ALTER TABLE in 0.0 seconds
[0m18:40:46  On model.jaffle_shop.raw_sales: COMMIT
[0m18:40:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:46  On model.jaffle_shop.raw_sales: COMMIT
[0m18:40:46  SQL status: COMMIT in 0.0 seconds
[0m18:40:46  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:46  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:40:46  SQL status: DROP TABLE in 0.0 seconds
[0m18:40:46  Timing info for model.jaffle_shop.raw_sales (execute): 20:40:46.253413 => 20:40:46.484523
[0m18:40:46  On model.jaffle_shop.raw_sales: Close
[0m18:40:46  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.25s]
[0m18:40:46  Finished running node model.jaffle_shop.raw_sales
[0m18:40:46  Began running node model.jaffle_shop.stg_customers
[0m18:40:46  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:40:46  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:40:46  Began compiling node model.jaffle_shop.stg_customers
[0m18:40:46  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:40:46  Timing info for model.jaffle_shop.stg_customers (compile): 20:40:46.496528 => 20:40:46.504531
[0m18:40:46  Began executing node model.jaffle_shop.stg_customers
[0m18:40:46  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:40:46  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:40:46  On model.jaffle_shop.stg_customers: BEGIN
[0m18:40:46  Opening a new connection, currently in state closed
[0m18:40:46  SQL status: BEGIN in 0.0 seconds
[0m18:40:46  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:40:46  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "1" from 1
  );
[0m18:40:46  Postgres adapter: Postgres error: syntax error at or near "1"
LINE 23: select "1" from 1
                         ^

[0m18:40:46  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:40:46  Timing info for model.jaffle_shop.stg_customers (execute): 20:40:46.506529 => 20:40:46.614268
[0m18:40:46  On model.jaffle_shop.stg_customers: Close
[0m18:40:46  Database Error in model stg_customers (models\staging\stg_customers.sql)
  syntax error at or near "1"
  LINE 23: select "1" from 1
                           ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:40:46  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.13s]
[0m18:40:46  Finished running node model.jaffle_shop.stg_customers
[0m18:40:46  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:40:46  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:40:46  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:40:46  
[0m18:40:46  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:40:46    syntax error at or near "1"
[0m18:40:46    LINE 23: select "1" from 1
[0m18:40:46                             ^
[0m18:40:46    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:40:46  Connection 'master' was properly closed.
[0m18:40:46  Connection 'list_dbtsales' was properly closed.
[0m18:40:46  Connection 'list_dbtsales_public' was properly closed.
[0m18:40:46  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:40:46  
[0m18:40:46  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.70 seconds (0.70s).
[0m18:40:46  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:40:46  Command `dbt run` failed at 20:40:46.645361 after 1.13 seconds
[0m18:40:46  Flushing usage events
[0m18:41:05  Running with dbt=1.5.4
[0m18:41:05  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:41:05  Registered adapter: postgres=1.5.4
[0m18:41:05  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:41:05  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:41:05  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:41:05  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:41:05  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:41:05  
[0m18:41:05  Acquiring new postgres connection 'master'
[0m18:41:05  Acquiring new postgres connection 'list_dbtsales'
[0m18:41:05  Using postgres connection "list_dbtsales"
[0m18:41:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:41:05  Opening a new connection, currently in state init
[0m18:41:05  SQL status: SELECT 5 in 0.0 seconds
[0m18:41:05  On list_dbtsales: Close
[0m18:41:05  Using postgres connection "list_dbtsales"
[0m18:41:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:41:05  Opening a new connection, currently in state closed
[0m18:41:05  SQL status: SELECT 5 in 0.0 seconds
[0m18:41:05  On list_dbtsales: Close
[0m18:41:05  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:41:05  Using postgres connection "list_dbtsales_public"
[0m18:41:05  On list_dbtsales_public: BEGIN
[0m18:41:05  Opening a new connection, currently in state init
[0m18:41:05  SQL status: BEGIN in 0.0 seconds
[0m18:41:05  Using postgres connection "list_dbtsales_public"
[0m18:41:05  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:41:05  SQL status: SELECT 2 in 0.0 seconds
[0m18:41:05  On list_dbtsales_public: ROLLBACK
[0m18:41:05  On list_dbtsales_public: Close
[0m18:41:05  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:41:05  Using postgres connection "list_dbtsales_public_stg"
[0m18:41:05  On list_dbtsales_public_stg: BEGIN
[0m18:41:05  Opening a new connection, currently in state closed
[0m18:41:05  SQL status: BEGIN in 0.0 seconds
[0m18:41:05  Using postgres connection "list_dbtsales_public_stg"
[0m18:41:05  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:41:05  SQL status: SELECT 0 in 0.0 seconds
[0m18:41:05  On list_dbtsales_public_stg: ROLLBACK
[0m18:41:05  On list_dbtsales_public_stg: Close
[0m18:41:05  Using postgres connection "master"
[0m18:41:05  On master: BEGIN
[0m18:41:05  Opening a new connection, currently in state init
[0m18:41:06  SQL status: BEGIN in 0.0 seconds
[0m18:41:06  Using postgres connection "master"
[0m18:41:06  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:41:06  SQL status: SELECT 0 in 0.0 seconds
[0m18:41:06  On master: ROLLBACK
[0m18:41:06  Using postgres connection "master"
[0m18:41:06  On master: BEGIN
[0m18:41:06  SQL status: BEGIN in 0.0 seconds
[0m18:41:06  On master: COMMIT
[0m18:41:06  Using postgres connection "master"
[0m18:41:06  On master: COMMIT
[0m18:41:06  SQL status: COMMIT in 0.0 seconds
[0m18:41:06  On master: Close
[0m18:41:06  Concurrency: 1 threads (target='dev')
[0m18:41:06  
[0m18:41:06  Began running node model.jaffle_shop.raw_sales
[0m18:41:06  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:41:06  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:41:06  Began compiling node model.jaffle_shop.raw_sales
[0m18:41:06  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:41:06  Timing info for model.jaffle_shop.raw_sales (compile): 20:41:06.052639 => 20:41:06.056638
[0m18:41:06  Began executing node model.jaffle_shop.raw_sales
[0m18:41:06  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:41:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:06  On model.jaffle_shop.raw_sales: BEGIN
[0m18:41:06  Opening a new connection, currently in state init
[0m18:41:06  SQL status: BEGIN in 0.0 seconds
[0m18:41:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:41:06  SQL status: SELECT 2823 in 0.0 seconds
[0m18:41:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:41:06  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:41:06  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:06  On model.jaffle_shop.raw_sales: COMMIT
[0m18:41:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:06  On model.jaffle_shop.raw_sales: COMMIT
[0m18:41:06  SQL status: COMMIT in 0.0 seconds
[0m18:41:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:41:06  SQL status: DROP TABLE in 0.0 seconds
[0m18:41:06  Timing info for model.jaffle_shop.raw_sales (execute): 20:41:06.059639 => 20:41:06.241541
[0m18:41:06  On model.jaffle_shop.raw_sales: Close
[0m18:41:06  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.19s]
[0m18:41:06  Finished running node model.jaffle_shop.raw_sales
[0m18:41:06  Began running node model.jaffle_shop.stg_customers
[0m18:41:06  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:41:06  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:41:06  Began compiling node model.jaffle_shop.stg_customers
[0m18:41:06  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:41:06  Timing info for model.jaffle_shop.stg_customers (compile): 20:41:06.255410 => 20:41:06.260197
[0m18:41:06  Began executing node model.jaffle_shop.stg_customers
[0m18:41:06  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:41:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:06  On model.jaffle_shop.stg_customers: BEGIN
[0m18:41:06  Opening a new connection, currently in state closed
[0m18:41:06  SQL status: BEGIN in 0.0 seconds
[0m18:41:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "1" from "dbtsales"."public"."raw_sales"
  );
[0m18:41:06  Postgres adapter: Postgres error: column "1" does not exist
LINE 23: select "1" from "dbtsales"."public"."raw_sales"
                ^

[0m18:41:06  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:41:06  Timing info for model.jaffle_shop.stg_customers (execute): 20:41:06.263112 => 20:41:06.368417
[0m18:41:06  On model.jaffle_shop.stg_customers: Close
[0m18:41:06  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "1" does not exist
  LINE 23: select "1" from "dbtsales"."public"."raw_sales"
                  ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:41:06  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.12s]
[0m18:41:06  Finished running node model.jaffle_shop.stg_customers
[0m18:41:06  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:41:06  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:41:06  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:41:06  
[0m18:41:06  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:41:06    column "1" does not exist
[0m18:41:06    LINE 23: select "1" from "dbtsales"."public"."raw_sales"
[0m18:41:06                    ^
[0m18:41:06    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:41:06  Connection 'master' was properly closed.
[0m18:41:06  Connection 'list_dbtsales' was properly closed.
[0m18:41:06  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:41:06  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:41:06  
[0m18:41:06  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.59 seconds (0.59s).
[0m18:41:06  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:41:06  Command `dbt run` failed at 20:41:06.394638 after 0.95 seconds
[0m18:41:06  Flushing usage events
[0m18:41:24  Running with dbt=1.5.4
[0m18:41:24  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:41:24  Registered adapter: postgres=1.5.4
[0m18:41:24  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:41:24  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:41:24  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:41:24  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:41:24  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:41:24  
[0m18:41:24  Acquiring new postgres connection 'master'
[0m18:41:24  Acquiring new postgres connection 'list_dbtsales'
[0m18:41:24  Using postgres connection "list_dbtsales"
[0m18:41:24  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:41:24  Opening a new connection, currently in state init
[0m18:41:24  SQL status: SELECT 5 in 0.0 seconds
[0m18:41:24  On list_dbtsales: Close
[0m18:41:24  Using postgres connection "list_dbtsales"
[0m18:41:24  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:41:24  Opening a new connection, currently in state closed
[0m18:41:24  SQL status: SELECT 5 in 0.0 seconds
[0m18:41:24  On list_dbtsales: Close
[0m18:41:24  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:41:24  Using postgres connection "list_dbtsales_public_stg"
[0m18:41:24  On list_dbtsales_public_stg: BEGIN
[0m18:41:24  Opening a new connection, currently in state init
[0m18:41:24  SQL status: BEGIN in 0.0 seconds
[0m18:41:24  Using postgres connection "list_dbtsales_public_stg"
[0m18:41:24  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:41:24  SQL status: SELECT 0 in 0.0 seconds
[0m18:41:24  On list_dbtsales_public_stg: ROLLBACK
[0m18:41:24  On list_dbtsales_public_stg: Close
[0m18:41:24  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:41:24  Using postgres connection "list_dbtsales_public"
[0m18:41:24  On list_dbtsales_public: BEGIN
[0m18:41:24  Opening a new connection, currently in state closed
[0m18:41:24  SQL status: BEGIN in 0.0 seconds
[0m18:41:24  Using postgres connection "list_dbtsales_public"
[0m18:41:24  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:41:24  SQL status: SELECT 2 in 0.0 seconds
[0m18:41:24  On list_dbtsales_public: ROLLBACK
[0m18:41:24  On list_dbtsales_public: Close
[0m18:41:24  Using postgres connection "master"
[0m18:41:24  On master: BEGIN
[0m18:41:24  Opening a new connection, currently in state init
[0m18:41:24  SQL status: BEGIN in 0.0 seconds
[0m18:41:24  Using postgres connection "master"
[0m18:41:24  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:41:24  SQL status: SELECT 0 in 0.0 seconds
[0m18:41:24  On master: ROLLBACK
[0m18:41:25  Using postgres connection "master"
[0m18:41:25  On master: BEGIN
[0m18:41:25  SQL status: BEGIN in 0.0 seconds
[0m18:41:25  On master: COMMIT
[0m18:41:25  Using postgres connection "master"
[0m18:41:25  On master: COMMIT
[0m18:41:25  SQL status: COMMIT in 0.0 seconds
[0m18:41:25  On master: Close
[0m18:41:25  Concurrency: 1 threads (target='dev')
[0m18:41:25  
[0m18:41:25  Began running node model.jaffle_shop.raw_sales
[0m18:41:25  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:41:25  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:41:25  Began compiling node model.jaffle_shop.raw_sales
[0m18:41:25  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:41:25  Timing info for model.jaffle_shop.raw_sales (compile): 20:41:25.027554 => 20:41:25.034803
[0m18:41:25  Began executing node model.jaffle_shop.raw_sales
[0m18:41:25  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:41:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:25  On model.jaffle_shop.raw_sales: BEGIN
[0m18:41:25  Opening a new connection, currently in state init
[0m18:41:25  SQL status: BEGIN in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:25  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:41:25  SQL status: SELECT 2823 in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:25  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:41:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:25  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:41:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:25  On model.jaffle_shop.raw_sales: COMMIT
[0m18:41:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:25  On model.jaffle_shop.raw_sales: COMMIT
[0m18:41:25  SQL status: COMMIT in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:25  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:41:25  SQL status: DROP TABLE in 0.0 seconds
[0m18:41:25  Timing info for model.jaffle_shop.raw_sales (execute): 20:41:25.036804 => 20:41:25.222947
[0m18:41:25  On model.jaffle_shop.raw_sales: Close
[0m18:41:25  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.20s]
[0m18:41:25  Finished running node model.jaffle_shop.raw_sales
[0m18:41:25  Began running node model.jaffle_shop.stg_customers
[0m18:41:25  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:41:25  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:41:25  Began compiling node model.jaffle_shop.stg_customers
[0m18:41:25  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:41:25  Timing info for model.jaffle_shop.stg_customers (compile): 20:41:25.236934 => 20:41:25.241933
[0m18:41:25  Began executing node model.jaffle_shop.stg_customers
[0m18:41:25  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:41:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:25  On model.jaffle_shop.stg_customers: BEGIN
[0m18:41:25  Opening a new connection, currently in state closed
[0m18:41:25  SQL status: BEGIN in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select * from "dbtsales"."public"."raw_sales"
  );
[0m18:41:25  SQL status: CREATE VIEW in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:41:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:25  On model.jaffle_shop.stg_customers: COMMIT
[0m18:41:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:25  On model.jaffle_shop.stg_customers: COMMIT
[0m18:41:25  SQL status: COMMIT in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:41:25  SQL status: DROP VIEW in 0.0 seconds
[0m18:41:25  Timing info for model.jaffle_shop.stg_customers (execute): 20:41:25.245479 => 20:41:25.395735
[0m18:41:25  On model.jaffle_shop.stg_customers: Close
[0m18:41:25  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.17s]
[0m18:41:25  Finished running node model.jaffle_shop.stg_customers
[0m18:41:25  Began running node model.jaffle_shop.customers
[0m18:41:25  3 of 3 START sql view model public.customers ................................... [RUN]
[0m18:41:25  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:41:25  Began compiling node model.jaffle_shop.customers
[0m18:41:25  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:41:25  Timing info for model.jaffle_shop.customers (compile): 20:41:25.410909 => 20:41:25.419417
[0m18:41:25  Began executing node model.jaffle_shop.customers
[0m18:41:25  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:41:25  Using postgres connection "model.jaffle_shop.customers"
[0m18:41:25  On model.jaffle_shop.customers: BEGIN
[0m18:41:25  Opening a new connection, currently in state closed
[0m18:41:25  SQL status: BEGIN in 0.0 seconds
[0m18:41:25  Using postgres connection "model.jaffle_shop.customers"
[0m18:41:25  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

-- with customers as (

--     select * from "dbtsales"."public_stg"."stg_customers"

-- ),


-- final as (

--     select
--         CustomerID
--     from customers

-- )

-- select * from final
  );
[0m18:41:25  Postgres adapter: Postgres error: syntax error at or near ")"
LINE 25:   );
           ^

[0m18:41:25  On model.jaffle_shop.customers: ROLLBACK
[0m18:41:25  Timing info for model.jaffle_shop.customers (execute): 20:41:25.421545 => 20:41:25.468584
[0m18:41:25  On model.jaffle_shop.customers: Close
[0m18:41:25  Database Error in model customers (models\customers.sql)
  syntax error at or near ")"
  LINE 25:   );
             ^
  compiled Code at target\run\jaffle_shop\models\customers.sql
[0m18:41:25  3 of 3 ERROR creating sql view model public.customers .......................... [[31mERROR[0m in 0.07s]
[0m18:41:25  Finished running node model.jaffle_shop.customers
[0m18:41:25  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:41:25  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:41:25  CANCEL query model.jaffle_shop.customers ....................................... [[31mCANCEL[0m]
[0m18:41:25  
[0m18:41:25  [33mDatabase Error in model customers (models\customers.sql)[0m
[0m18:41:25    syntax error at or near ")"
[0m18:41:25    LINE 25:   );
[0m18:41:25               ^
[0m18:41:25    compiled Code at target\run\jaffle_shop\models\customers.sql
[0m18:41:25  Connection 'master' was properly closed.
[0m18:41:25  Connection 'list_dbtsales' was properly closed.
[0m18:41:25  Connection 'list_dbtsales_public' was properly closed.
[0m18:41:25  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:41:25  
[0m18:41:25  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.76 seconds (0.76s).
[0m18:41:25  Encountered an error:
FailFast Error in model customers (models\customers.sql)
  Failing early due to test failure or runtime error
[0m18:41:25  Command `dbt run` failed at 20:41:25.502589 after 1.14 seconds
[0m18:41:25  Flushing usage events
[0m18:41:42  Running with dbt=1.5.4
[0m18:41:42  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:41:42  Registered adapter: postgres=1.5.4
[0m18:41:42  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:41:42  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:41:42  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m18:41:42  1699: static parser successfully parsed customers.sql
[0m18:41:42  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:41:42  
[0m18:41:42  Acquiring new postgres connection 'master'
[0m18:41:42  Acquiring new postgres connection 'list_dbtsales'
[0m18:41:42  Using postgres connection "list_dbtsales"
[0m18:41:42  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:41:42  Opening a new connection, currently in state init
[0m18:41:42  SQL status: SELECT 5 in 0.0 seconds
[0m18:41:42  On list_dbtsales: Close
[0m18:41:42  Using postgres connection "list_dbtsales"
[0m18:41:42  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:41:42  Opening a new connection, currently in state closed
[0m18:41:42  SQL status: SELECT 5 in 0.0 seconds
[0m18:41:42  On list_dbtsales: Close
[0m18:41:42  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:41:42  Using postgres connection "list_dbtsales_public"
[0m18:41:42  On list_dbtsales_public: BEGIN
[0m18:41:42  Opening a new connection, currently in state init
[0m18:41:42  SQL status: BEGIN in 0.0 seconds
[0m18:41:42  Using postgres connection "list_dbtsales_public"
[0m18:41:42  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:41:42  SQL status: SELECT 2 in 0.0 seconds
[0m18:41:42  On list_dbtsales_public: ROLLBACK
[0m18:41:42  On list_dbtsales_public: Close
[0m18:41:42  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:41:42  Using postgres connection "list_dbtsales_public_stg"
[0m18:41:42  On list_dbtsales_public_stg: BEGIN
[0m18:41:42  Opening a new connection, currently in state closed
[0m18:41:43  SQL status: BEGIN in 0.0 seconds
[0m18:41:43  Using postgres connection "list_dbtsales_public_stg"
[0m18:41:43  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:41:43  SQL status: SELECT 1 in 0.0 seconds
[0m18:41:43  On list_dbtsales_public_stg: ROLLBACK
[0m18:41:43  On list_dbtsales_public_stg: Close
[0m18:41:43  Using postgres connection "master"
[0m18:41:43  On master: BEGIN
[0m18:41:43  Opening a new connection, currently in state init
[0m18:41:43  SQL status: BEGIN in 0.0 seconds
[0m18:41:43  Using postgres connection "master"
[0m18:41:43  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:41:43  SQL status: SELECT 1 in 0.0 seconds
[0m18:41:43  On master: ROLLBACK
[0m18:41:43  Using postgres connection "master"
[0m18:41:43  On master: BEGIN
[0m18:41:43  SQL status: BEGIN in 0.0 seconds
[0m18:41:43  On master: COMMIT
[0m18:41:43  Using postgres connection "master"
[0m18:41:43  On master: COMMIT
[0m18:41:43  SQL status: COMMIT in 0.0 seconds
[0m18:41:43  On master: Close
[0m18:41:43  Concurrency: 1 threads (target='dev')
[0m18:41:43  
[0m18:41:43  Began running node model.jaffle_shop.raw_sales
[0m18:41:43  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:41:43  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:41:43  Began compiling node model.jaffle_shop.raw_sales
[0m18:41:43  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:41:43  Timing info for model.jaffle_shop.raw_sales (compile): 20:41:43.141725 => 20:41:43.150805
[0m18:41:43  Began executing node model.jaffle_shop.raw_sales
[0m18:41:43  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:41:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:43  On model.jaffle_shop.raw_sales: BEGIN
[0m18:41:43  Opening a new connection, currently in state init
[0m18:41:43  SQL status: BEGIN in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:43  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:41:43  SQL status: SELECT 2823 in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:43  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:41:43  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:43  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:41:43  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:43  On model.jaffle_shop.raw_sales: COMMIT
[0m18:41:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:43  On model.jaffle_shop.raw_sales: COMMIT
[0m18:41:43  SQL status: COMMIT in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:41:43  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:41:43  SQL status: DROP TABLE in 0.0 seconds
[0m18:41:43  Timing info for model.jaffle_shop.raw_sales (execute): 20:41:43.154153 => 20:41:43.403296
[0m18:41:43  On model.jaffle_shop.raw_sales: Close
[0m18:41:43  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.27s]
[0m18:41:43  Finished running node model.jaffle_shop.raw_sales
[0m18:41:43  Began running node model.jaffle_shop.stg_customers
[0m18:41:43  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:41:43  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:41:43  Began compiling node model.jaffle_shop.stg_customers
[0m18:41:43  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:41:43  Timing info for model.jaffle_shop.stg_customers (compile): 20:41:43.418496 => 20:41:43.424496
[0m18:41:43  Began executing node model.jaffle_shop.stg_customers
[0m18:41:43  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:41:43  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:43  On model.jaffle_shop.stg_customers: BEGIN
[0m18:41:43  Opening a new connection, currently in state closed
[0m18:41:43  SQL status: BEGIN in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:43  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select * from "dbtsales"."public"."raw_sales"
  );
[0m18:41:43  SQL status: CREATE VIEW in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:43  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:41:43  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:43  On model.jaffle_shop.stg_customers: COMMIT
[0m18:41:43  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:43  On model.jaffle_shop.stg_customers: COMMIT
[0m18:41:43  SQL status: COMMIT in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:41:43  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:41:43  SQL status: DROP VIEW in 0.0 seconds
[0m18:41:43  Timing info for model.jaffle_shop.stg_customers (execute): 20:41:43.429494 => 20:41:43.607055
[0m18:41:43  On model.jaffle_shop.stg_customers: Close
[0m18:41:43  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.20s]
[0m18:41:43  Finished running node model.jaffle_shop.stg_customers
[0m18:41:43  Began running node model.jaffle_shop.customers
[0m18:41:43  3 of 3 START sql view model public.customers ................................... [RUN]
[0m18:41:43  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:41:43  Began compiling node model.jaffle_shop.customers
[0m18:41:43  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:41:43  Timing info for model.jaffle_shop.customers (compile): 20:41:43.624008 => 20:41:43.634149
[0m18:41:43  Began executing node model.jaffle_shop.customers
[0m18:41:43  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:41:43  Using postgres connection "model.jaffle_shop.customers"
[0m18:41:43  On model.jaffle_shop.customers: BEGIN
[0m18:41:43  Opening a new connection, currently in state closed
[0m18:41:43  SQL status: BEGIN in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.customers"
[0m18:41:43  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

-- with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

-- ),


-- final as (

--     select
--         CustomerID
--     from customers

-- )

-- select * from final
  );
[0m18:41:43  SQL status: CREATE VIEW in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.customers"
[0m18:41:43  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m18:41:43  SQL status: ALTER TABLE in 0.0 seconds
[0m18:41:43  On model.jaffle_shop.customers: COMMIT
[0m18:41:43  Using postgres connection "model.jaffle_shop.customers"
[0m18:41:43  On model.jaffle_shop.customers: COMMIT
[0m18:41:43  SQL status: COMMIT in 0.0 seconds
[0m18:41:43  Using postgres connection "model.jaffle_shop.customers"
[0m18:41:43  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m18:41:43  SQL status: DROP VIEW in 0.0 seconds
[0m18:41:43  Timing info for model.jaffle_shop.customers (execute): 20:41:43.636156 => 20:41:43.731888
[0m18:41:43  On model.jaffle_shop.customers: Close
[0m18:41:43  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.11s]
[0m18:41:43  Finished running node model.jaffle_shop.customers
[0m18:41:43  Using postgres connection "master"
[0m18:41:43  On master: BEGIN
[0m18:41:43  Opening a new connection, currently in state closed
[0m18:41:43  SQL status: BEGIN in 0.0 seconds
[0m18:41:43  On master: COMMIT
[0m18:41:43  Using postgres connection "master"
[0m18:41:43  On master: COMMIT
[0m18:41:43  SQL status: COMMIT in 0.0 seconds
[0m18:41:43  On master: Close
[0m18:41:43  Connection 'master' was properly closed.
[0m18:41:43  Connection 'list_dbtsales' was properly closed.
[0m18:41:43  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:41:43  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:41:43  
[0m18:41:43  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 1.02 seconds (1.02s).
[0m18:41:43  Command end result
[0m18:41:43  
[0m18:41:43  [32mCompleted successfully[0m
[0m18:41:43  
[0m18:41:43  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m18:41:43  Command `dbt run` succeeded at 20:41:43.839897 after 1.52 seconds
[0m18:41:43  Flushing usage events
[0m18:46:23  Running with dbt=1.5.4
[0m18:46:23  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:46:23  Setting up your profile.
[0m18:46:46  Command `dbt init` succeeded at 20:46:46.228427 after 22.65 seconds
[0m18:46:46  Flushing usage events
[0m18:51:30  Running with dbt=1.5.4
[0m18:51:30  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:51:30  dbt version: 1.5.4
[0m18:51:30  python version: 3.10.11
[0m18:51:30  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m18:51:30  os info: Windows-10-10.0.22621-SP0
[0m18:51:30  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m18:51:30  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m18:51:30  Configuration:
[0m18:51:30    profiles.yml file [[32mOK found and valid[0m]
[0m18:51:30    dbt_project.yml file [[32mOK found and valid[0m]
[0m18:51:30  Required dependencies:
[0m18:51:30  Executing "git --help"
[0m18:51:30  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m18:51:30  STDERR: "b''"
[0m18:51:30   - git [[32mOK found[0m]

[0m18:51:30  Connection:
[0m18:51:30    host: localhost
[0m18:51:30    port: 5432
[0m18:51:30    user: postgres
[0m18:51:30    database: dbtsales
[0m18:51:30    schema: public
[0m18:51:30    search_path: None
[0m18:51:30    keepalives_idle: 0
[0m18:51:30    sslmode: None
[0m18:51:30  Registered adapter: postgres=1.5.4
[0m18:51:30  Acquiring new postgres connection 'debug'
[0m18:51:30  Using postgres connection "debug"
[0m18:51:30  On debug: select 1 as id
[0m18:51:30  Opening a new connection, currently in state init
[0m18:51:30  SQL status: SELECT 1 in 0.0 seconds
[0m18:51:30  On debug: Close
[0m18:51:30    Connection test: [[32mOK connection ok[0m]

[0m18:51:30  [32mAll checks passed![0m
[0m18:51:30  Command `dbt debug` succeeded at 20:51:30.327555 after 0.32 seconds
[0m18:51:30  Connection 'debug' was properly closed.
[0m18:51:30  Flushing usage events
[0m18:52:02  Running with dbt=1.5.4
[0m18:52:02  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:52:02  Registered adapter: postgres=1.5.4
[0m18:52:02  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:52:03  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:52:03  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m18:52:03  1699: static parser successfully parsed customers.sql
[0m18:52:03  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:52:03  
[0m18:52:03  Acquiring new postgres connection 'master'
[0m18:52:03  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:52:03  Using postgres connection "list_dbtsales_public_stg"
[0m18:52:03  On list_dbtsales_public_stg: BEGIN
[0m18:52:03  Opening a new connection, currently in state init
[0m18:52:03  SQL status: BEGIN in 0.0 seconds
[0m18:52:03  Using postgres connection "list_dbtsales_public_stg"
[0m18:52:03  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:52:03  SQL status: SELECT 1 in 0.0 seconds
[0m18:52:03  On list_dbtsales_public_stg: ROLLBACK
[0m18:52:03  On list_dbtsales_public_stg: Close
[0m18:52:03  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:52:03  Using postgres connection "list_dbtsales_public"
[0m18:52:03  On list_dbtsales_public: BEGIN
[0m18:52:03  Opening a new connection, currently in state closed
[0m18:52:03  SQL status: BEGIN in 0.0 seconds
[0m18:52:03  Using postgres connection "list_dbtsales_public"
[0m18:52:03  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:52:03  SQL status: SELECT 3 in 0.0 seconds
[0m18:52:03  On list_dbtsales_public: ROLLBACK
[0m18:52:03  On list_dbtsales_public: Close
[0m18:52:03  Using postgres connection "master"
[0m18:52:03  On master: BEGIN
[0m18:52:03  Opening a new connection, currently in state init
[0m18:52:03  SQL status: BEGIN in 0.0 seconds
[0m18:52:03  Using postgres connection "master"
[0m18:52:03  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:52:03  SQL status: SELECT 2 in 0.0 seconds
[0m18:52:03  On master: ROLLBACK
[0m18:52:03  On master: Close
[0m18:52:03  Concurrency: 1 threads (target='dev')
[0m18:52:03  
[0m18:52:03  Began running node model.jaffle_shop.raw_sales
[0m18:52:03  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:52:03  Began compiling node model.jaffle_shop.raw_sales
[0m18:52:03  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:52:03  Timing info for model.jaffle_shop.raw_sales (compile): 20:52:03.340083 => 20:52:03.348690
[0m18:52:03  Began executing node model.jaffle_shop.raw_sales
[0m18:52:03  Timing info for model.jaffle_shop.raw_sales (execute): 20:52:03.354056 => 20:52:03.354056
[0m18:52:03  Finished running node model.jaffle_shop.raw_sales
[0m18:52:03  Began running node model.jaffle_shop.stg_customers
[0m18:52:03  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:52:03  Began compiling node model.jaffle_shop.stg_customers
[0m18:52:03  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:52:03  Timing info for model.jaffle_shop.stg_customers (compile): 20:52:03.364851 => 20:52:03.376014
[0m18:52:03  Began executing node model.jaffle_shop.stg_customers
[0m18:52:03  Timing info for model.jaffle_shop.stg_customers (execute): 20:52:03.379119 => 20:52:03.379119
[0m18:52:03  Finished running node model.jaffle_shop.stg_customers
[0m18:52:03  Began running node model.jaffle_shop.customers
[0m18:52:03  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:52:03  Began compiling node model.jaffle_shop.customers
[0m18:52:03  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:52:03  Timing info for model.jaffle_shop.customers (compile): 20:52:03.391113 => 20:52:03.398112
[0m18:52:03  Began executing node model.jaffle_shop.customers
[0m18:52:03  Timing info for model.jaffle_shop.customers (execute): 20:52:03.400944 => 20:52:03.402097
[0m18:52:03  Finished running node model.jaffle_shop.customers
[0m18:52:03  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:52:03  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m18:52:03  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:52:03  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m18:52:03  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 20:52:03.412119 => 20:52:03.434987
[0m18:52:03  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:52:03  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 20:52:03.440988 => 20:52:03.440988
[0m18:52:03  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:52:03  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m18:52:03  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m18:52:03  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m18:52:03  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m18:52:03  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 20:52:03.449569 => 20:52:03.463195
[0m18:52:03  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m18:52:03  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 20:52:03.465268 => 20:52:03.465268
[0m18:52:03  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m18:52:03  Began running node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:52:03  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now test.jaffle_shop.not_null_customers_CustomerID.85629dc275)
[0m18:52:03  Began compiling node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:52:03  Writing injected SQL for node "test.jaffle_shop.not_null_customers_CustomerID.85629dc275"
[0m18:52:03  Timing info for test.jaffle_shop.not_null_customers_CustomerID.85629dc275 (compile): 20:52:03.476494 => 20:52:03.488073
[0m18:52:03  Began executing node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:52:03  Timing info for test.jaffle_shop.not_null_customers_CustomerID.85629dc275 (execute): 20:52:03.491096 => 20:52:03.491096
[0m18:52:03  Finished running node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:52:03  Began running node test.jaffle_shop.unique_customers_CustomerID.6fc583931a
[0m18:52:03  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_CustomerID.85629dc275, now test.jaffle_shop.unique_customers_CustomerID.6fc583931a)
[0m18:52:03  Began compiling node test.jaffle_shop.unique_customers_CustomerID.6fc583931a
[0m18:52:03  Writing injected SQL for node "test.jaffle_shop.unique_customers_CustomerID.6fc583931a"
[0m18:52:03  Timing info for test.jaffle_shop.unique_customers_CustomerID.6fc583931a (compile): 20:52:03.501037 => 20:52:03.511046
[0m18:52:03  Began executing node test.jaffle_shop.unique_customers_CustomerID.6fc583931a
[0m18:52:03  Timing info for test.jaffle_shop.unique_customers_CustomerID.6fc583931a (execute): 20:52:03.514043 => 20:52:03.514043
[0m18:52:03  Finished running node test.jaffle_shop.unique_customers_CustomerID.6fc583931a
[0m18:52:03  Connection 'master' was properly closed.
[0m18:52:03  Connection 'list_dbtsales_public' was properly closed.
[0m18:52:03  Connection 'test.jaffle_shop.unique_customers_CustomerID.6fc583931a' was properly closed.
[0m18:52:03  Command end result
[0m18:52:03  Acquiring new postgres connection 'generate_catalog'
[0m18:52:03  Building catalog
[0m18:52:03  Acquiring new postgres connection 'dbtsales.information_schema'
[0m18:52:03  Using postgres connection "dbtsales.information_schema"
[0m18:52:03  On dbtsales.information_schema: BEGIN
[0m18:52:03  Opening a new connection, currently in state init
[0m18:52:03  SQL status: BEGIN in 0.0 seconds
[0m18:52:03  Using postgres connection "dbtsales.information_schema"
[0m18:52:03  On dbtsales.information_schema: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "dbtsales.information_schema"} */

    
    

    select
        'dbtsales' as table_database,
        sch.nspname as table_schema,
        tbl.relname as table_name,
        case tbl.relkind
            when 'v' then 'VIEW'
            else 'BASE TABLE'
        end as table_type,
        tbl_desc.description as table_comment,
        col.attname as column_name,
        col.attnum as column_index,
        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,
        col_desc.description as column_comment,
        pg_get_userbyid(tbl.relowner) as table_owner

    from pg_catalog.pg_namespace sch
    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid
    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid
    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)
    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)

    where (upper(sch.nspname) = upper('public') or upper(sch.nspname) = upper('public_stg'))
      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session
      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables
      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view
      and col.attnum > 0 -- negative numbers are used for system columns such as oid
      and not col.attisdropped -- column as not been dropped

    order by
        sch.nspname,
        tbl.relname,
        col.attnum
[0m18:52:03  SQL status: SELECT 112 in 0.0 seconds
[0m18:52:03  On dbtsales.information_schema: ROLLBACK
[0m18:52:03  On dbtsales.information_schema: Close
[0m18:52:04  Catalog written to C:\Louw\GitHub\dbt\jaffle_shop\target\catalog.json
[0m18:52:04  Command `dbt docs generate` succeeded at 20:52:04.036001 after 1.37 seconds
[0m18:52:04  Connection 'generate_catalog' was properly closed.
[0m18:52:04  Connection 'dbtsales.information_schema' was properly closed.
[0m18:52:04  Flushing usage events
[0m18:52:14  Running with dbt=1.5.4
[0m18:52:14  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:54:48  Encountered an error:

[0m18:54:48  Traceback (most recent call last):
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 86, in wrapper
    result, success = func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 71, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 142, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 168, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\requires.py", line 215, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\cli\main.py", line 301, in docs_serve
    results = task.run()
  File "C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\lib\site-packages\dbt\task\serve.py", line 28, in run
    httpd.serve_forever()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\socketserver.py", line 232, in serve_forever
    ready = selector.select(poll_interval)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 324, in select
    r, w, _ = self._select(self._readers, self._writers, [], timeout)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 315, in _select
    r, w, x = select.select(r, w, w, timeout)
KeyboardInterrupt

[0m18:54:48  Command `dbt docs serve` failed at 20:54:48.550994 after 154.44 seconds
[0m18:54:48  Flushing usage events
[0m18:54:58  Running with dbt=1.5.4
[0m18:54:58  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:54:58  Registered adapter: postgres=1.5.4
[0m18:54:58  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:54:58  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:54:58  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:54:58  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:54:59  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:54:59  
[0m18:54:59  Acquiring new postgres connection 'master'
[0m18:54:59  Acquiring new postgres connection 'list_dbtsales'
[0m18:54:59  Using postgres connection "list_dbtsales"
[0m18:54:59  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:54:59  Opening a new connection, currently in state init
[0m18:54:59  SQL status: SELECT 5 in 0.0 seconds
[0m18:54:59  On list_dbtsales: Close
[0m18:54:59  Using postgres connection "list_dbtsales"
[0m18:54:59  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:54:59  Opening a new connection, currently in state closed
[0m18:54:59  SQL status: SELECT 5 in 0.0 seconds
[0m18:54:59  On list_dbtsales: Close
[0m18:54:59  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:54:59  Using postgres connection "list_dbtsales_public"
[0m18:54:59  On list_dbtsales_public: BEGIN
[0m18:54:59  Opening a new connection, currently in state init
[0m18:54:59  SQL status: BEGIN in 0.0 seconds
[0m18:54:59  Using postgres connection "list_dbtsales_public"
[0m18:54:59  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:54:59  SQL status: SELECT 3 in 0.0 seconds
[0m18:54:59  On list_dbtsales_public: ROLLBACK
[0m18:54:59  On list_dbtsales_public: Close
[0m18:54:59  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:54:59  Using postgres connection "list_dbtsales_public_stg"
[0m18:54:59  On list_dbtsales_public_stg: BEGIN
[0m18:54:59  Opening a new connection, currently in state closed
[0m18:54:59  SQL status: BEGIN in 0.0 seconds
[0m18:54:59  Using postgres connection "list_dbtsales_public_stg"
[0m18:54:59  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:54:59  SQL status: SELECT 1 in 0.0 seconds
[0m18:54:59  On list_dbtsales_public_stg: ROLLBACK
[0m18:54:59  On list_dbtsales_public_stg: Close
[0m18:54:59  Using postgres connection "master"
[0m18:54:59  On master: BEGIN
[0m18:54:59  Opening a new connection, currently in state init
[0m18:54:59  SQL status: BEGIN in 0.0 seconds
[0m18:54:59  Using postgres connection "master"
[0m18:54:59  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:54:59  SQL status: SELECT 2 in 0.0 seconds
[0m18:54:59  On master: ROLLBACK
[0m18:54:59  Using postgres connection "master"
[0m18:54:59  On master: BEGIN
[0m18:54:59  SQL status: BEGIN in 0.0 seconds
[0m18:54:59  On master: COMMIT
[0m18:54:59  Using postgres connection "master"
[0m18:54:59  On master: COMMIT
[0m18:54:59  SQL status: COMMIT in 0.0 seconds
[0m18:54:59  On master: Close
[0m18:54:59  Concurrency: 1 threads (target='dev')
[0m18:54:59  
[0m18:54:59  Began running node model.jaffle_shop.raw_sales
[0m18:54:59  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:54:59  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:54:59  Began compiling node model.jaffle_shop.raw_sales
[0m18:54:59  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:54:59  Timing info for model.jaffle_shop.raw_sales (compile): 20:54:59.306124 => 20:54:59.315043
[0m18:54:59  Began executing node model.jaffle_shop.raw_sales
[0m18:54:59  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:54:59  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:54:59  On model.jaffle_shop.raw_sales: BEGIN
[0m18:54:59  Opening a new connection, currently in state init
[0m18:54:59  SQL status: BEGIN in 0.0 seconds
[0m18:54:59  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:54:59  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:54:59  SQL status: SELECT 2823 in 0.0 seconds
[0m18:54:59  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:54:59  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:54:59  SQL status: ALTER TABLE in 0.0 seconds
[0m18:54:59  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:54:59  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:54:59  SQL status: ALTER TABLE in 0.0 seconds
[0m18:54:59  On model.jaffle_shop.raw_sales: COMMIT
[0m18:54:59  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:54:59  On model.jaffle_shop.raw_sales: COMMIT
[0m18:54:59  SQL status: COMMIT in 0.0 seconds
[0m18:54:59  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:54:59  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:54:59  SQL status: DROP TABLE in 0.0 seconds
[0m18:54:59  Timing info for model.jaffle_shop.raw_sales (execute): 20:54:59.319112 => 20:54:59.602990
[0m18:54:59  On model.jaffle_shop.raw_sales: Close
[0m18:54:59  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.31s]
[0m18:54:59  Finished running node model.jaffle_shop.raw_sales
[0m18:54:59  Began running node model.jaffle_shop.stg_customers
[0m18:54:59  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:54:59  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:54:59  Began compiling node model.jaffle_shop.stg_customers
[0m18:54:59  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:54:59  Timing info for model.jaffle_shop.stg_customers (compile): 20:54:59.620689 => 20:54:59.628599
[0m18:54:59  Began executing node model.jaffle_shop.stg_customers
[0m18:54:59  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:54:59  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:54:59  On model.jaffle_shop.stg_customers: BEGIN
[0m18:54:59  Opening a new connection, currently in state closed
[0m18:54:59  SQL status: BEGIN in 0.0 seconds
[0m18:54:59  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:54:59  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select CUSTOMERNAME from "dbtsales"."public"."raw_sales"
  );
[0m18:54:59  Postgres adapter: Postgres error: column "customername" does not exist
LINE 23: select CUSTOMERNAME from "dbtsales"."public"."raw_sales"
                ^

[0m18:54:59  On model.jaffle_shop.stg_customers: ROLLBACK
[0m18:54:59  Timing info for model.jaffle_shop.stg_customers (execute): 20:54:59.635602 => 20:54:59.775537
[0m18:54:59  On model.jaffle_shop.stg_customers: Close
[0m18:54:59  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "customername" does not exist
  LINE 23: select CUSTOMERNAME from "dbtsales"."public"."raw_sales"
                  ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:54:59  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.17s]
[0m18:54:59  Finished running node model.jaffle_shop.stg_customers
[0m18:54:59  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:54:59  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:54:59  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m18:54:59  
[0m18:54:59  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m18:54:59    column "customername" does not exist
[0m18:54:59    LINE 23: select CUSTOMERNAME from "dbtsales"."public"."raw_sales"
[0m18:54:59                    ^
[0m18:54:59    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m18:54:59  Connection 'master' was properly closed.
[0m18:54:59  Connection 'list_dbtsales' was properly closed.
[0m18:54:59  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:54:59  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:54:59  
[0m18:54:59  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.81 seconds (0.81s).
[0m18:54:59  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m18:54:59  Command `dbt run` failed at 20:54:59.816913 after 1.28 seconds
[0m18:54:59  Flushing usage events
[0m18:55:43  Running with dbt=1.5.4
[0m18:55:43  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:55:43  Registered adapter: postgres=1.5.4
[0m18:55:43  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:55:43  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:55:43  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:55:43  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:55:44  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:55:44  
[0m18:55:44  Acquiring new postgres connection 'master'
[0m18:55:44  Acquiring new postgres connection 'list_dbtsales'
[0m18:55:44  Using postgres connection "list_dbtsales"
[0m18:55:44  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:55:44  Opening a new connection, currently in state init
[0m18:55:44  SQL status: SELECT 5 in 0.0 seconds
[0m18:55:44  On list_dbtsales: Close
[0m18:55:44  Using postgres connection "list_dbtsales"
[0m18:55:44  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:55:44  Opening a new connection, currently in state closed
[0m18:55:44  SQL status: SELECT 5 in 0.0 seconds
[0m18:55:44  On list_dbtsales: Close
[0m18:55:44  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:55:44  Using postgres connection "list_dbtsales_public"
[0m18:55:44  On list_dbtsales_public: BEGIN
[0m18:55:44  Opening a new connection, currently in state init
[0m18:55:44  SQL status: BEGIN in 0.0 seconds
[0m18:55:44  Using postgres connection "list_dbtsales_public"
[0m18:55:44  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:55:44  SQL status: SELECT 2 in 0.0 seconds
[0m18:55:44  On list_dbtsales_public: ROLLBACK
[0m18:55:44  On list_dbtsales_public: Close
[0m18:55:44  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:55:44  Using postgres connection "list_dbtsales_public_stg"
[0m18:55:44  On list_dbtsales_public_stg: BEGIN
[0m18:55:44  Opening a new connection, currently in state closed
[0m18:55:44  SQL status: BEGIN in 0.0 seconds
[0m18:55:44  Using postgres connection "list_dbtsales_public_stg"
[0m18:55:44  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:55:44  SQL status: SELECT 0 in 0.0 seconds
[0m18:55:44  On list_dbtsales_public_stg: ROLLBACK
[0m18:55:44  On list_dbtsales_public_stg: Close
[0m18:55:44  Using postgres connection "master"
[0m18:55:44  On master: BEGIN
[0m18:55:44  Opening a new connection, currently in state init
[0m18:55:44  SQL status: BEGIN in 0.0 seconds
[0m18:55:44  Using postgres connection "master"
[0m18:55:44  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:55:44  SQL status: SELECT 0 in 0.0 seconds
[0m18:55:44  On master: ROLLBACK
[0m18:55:44  Using postgres connection "master"
[0m18:55:44  On master: BEGIN
[0m18:55:44  SQL status: BEGIN in 0.0 seconds
[0m18:55:44  On master: COMMIT
[0m18:55:44  Using postgres connection "master"
[0m18:55:44  On master: COMMIT
[0m18:55:44  SQL status: COMMIT in 0.0 seconds
[0m18:55:44  On master: Close
[0m18:55:44  Concurrency: 1 threads (target='dev')
[0m18:55:44  
[0m18:55:44  Began running node model.jaffle_shop.raw_sales
[0m18:55:44  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:55:44  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:55:44  Began compiling node model.jaffle_shop.raw_sales
[0m18:55:44  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:55:44  Timing info for model.jaffle_shop.raw_sales (compile): 20:55:44.381487 => 20:55:44.389487
[0m18:55:44  Began executing node model.jaffle_shop.raw_sales
[0m18:55:44  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:55:44  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:55:44  On model.jaffle_shop.raw_sales: BEGIN
[0m18:55:44  Opening a new connection, currently in state init
[0m18:55:44  SQL status: BEGIN in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:55:44  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:55:44  SQL status: SELECT 2823 in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:55:44  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:55:44  SQL status: ALTER TABLE in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:55:44  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:55:44  SQL status: ALTER TABLE in 0.0 seconds
[0m18:55:44  On model.jaffle_shop.raw_sales: COMMIT
[0m18:55:44  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:55:44  On model.jaffle_shop.raw_sales: COMMIT
[0m18:55:44  SQL status: COMMIT in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:55:44  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:55:44  SQL status: DROP TABLE in 0.0 seconds
[0m18:55:44  Timing info for model.jaffle_shop.raw_sales (execute): 20:55:44.395487 => 20:55:44.622183
[0m18:55:44  On model.jaffle_shop.raw_sales: Close
[0m18:55:44  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.25s]
[0m18:55:44  Finished running node model.jaffle_shop.raw_sales
[0m18:55:44  Began running node model.jaffle_shop.stg_customers
[0m18:55:44  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:55:44  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:55:44  Began compiling node model.jaffle_shop.stg_customers
[0m18:55:44  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:55:44  Timing info for model.jaffle_shop.stg_customers (compile): 20:55:44.636543 => 20:55:44.645547
[0m18:55:44  Began executing node model.jaffle_shop.stg_customers
[0m18:55:44  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:55:44  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:55:44  On model.jaffle_shop.stg_customers: BEGIN
[0m18:55:44  Opening a new connection, currently in state closed
[0m18:55:44  SQL status: BEGIN in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:55:44  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "CUSTOMERNAME" from "dbtsales"."public"."raw_sales"
  );
[0m18:55:44  SQL status: CREATE VIEW in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:55:44  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:55:44  SQL status: ALTER TABLE in 0.0 seconds
[0m18:55:44  On model.jaffle_shop.stg_customers: COMMIT
[0m18:55:44  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:55:44  On model.jaffle_shop.stg_customers: COMMIT
[0m18:55:44  SQL status: COMMIT in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:55:44  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:55:44  SQL status: DROP VIEW in 0.0 seconds
[0m18:55:44  Timing info for model.jaffle_shop.stg_customers (execute): 20:55:44.647542 => 20:55:44.849427
[0m18:55:44  On model.jaffle_shop.stg_customers: Close
[0m18:55:44  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.22s]
[0m18:55:44  Finished running node model.jaffle_shop.stg_customers
[0m18:55:44  Began running node model.jaffle_shop.customers
[0m18:55:44  3 of 3 START sql view model public.customers ................................... [RUN]
[0m18:55:44  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:55:44  Began compiling node model.jaffle_shop.customers
[0m18:55:44  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:55:44  Timing info for model.jaffle_shop.customers (compile): 20:55:44.867911 => 20:55:44.877912
[0m18:55:44  Began executing node model.jaffle_shop.customers
[0m18:55:44  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:55:44  Using postgres connection "model.jaffle_shop.customers"
[0m18:55:44  On model.jaffle_shop.customers: BEGIN
[0m18:55:44  Opening a new connection, currently in state closed
[0m18:55:44  SQL status: BEGIN in 0.0 seconds
[0m18:55:44  Using postgres connection "model.jaffle_shop.customers"
[0m18:55:44  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),


final as (

    select
        CustomerID
    from customers

)

select * from final
  );
[0m18:55:44  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 19:         CustomerID
                 ^

[0m18:55:44  On model.jaffle_shop.customers: ROLLBACK
[0m18:55:44  Timing info for model.jaffle_shop.customers (execute): 20:55:44.880907 => 20:55:44.959058
[0m18:55:44  On model.jaffle_shop.customers: Close
[0m18:55:44  Database Error in model customers (models\customers.sql)
  column "customerid" does not exist
  LINE 19:         CustomerID
                   ^
  compiled Code at target\run\jaffle_shop\models\customers.sql
[0m18:55:44  3 of 3 ERROR creating sql view model public.customers .......................... [[31mERROR[0m in 0.11s]
[0m18:55:44  Finished running node model.jaffle_shop.customers
[0m18:55:44  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:55:44  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:55:44  CANCEL query model.jaffle_shop.customers ....................................... [[31mCANCEL[0m]
[0m18:55:44  
[0m18:55:44  [33mDatabase Error in model customers (models\customers.sql)[0m
[0m18:55:44    column "customerid" does not exist
[0m18:55:44    LINE 19:         CustomerID
[0m18:55:44                     ^
[0m18:55:44    compiled Code at target\run\jaffle_shop\models\customers.sql
[0m18:55:45  Connection 'master' was properly closed.
[0m18:55:45  Connection 'list_dbtsales' was properly closed.
[0m18:55:45  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:55:45  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:55:45  
[0m18:55:45  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.95 seconds (0.95s).
[0m18:55:45  Encountered an error:
FailFast Error in model customers (models\customers.sql)
  Failing early due to test failure or runtime error
[0m18:55:45  Command `dbt run` failed at 20:55:45.012626 after 1.49 seconds
[0m18:55:45  Flushing usage events
[0m18:56:05  Running with dbt=1.5.4
[0m18:56:05  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:56:05  Registered adapter: postgres=1.5.4
[0m18:56:05  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:56:05  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:56:05  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m18:56:05  1699: static parser successfully parsed customers.sql
[0m18:56:05  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:56:05  
[0m18:56:05  Acquiring new postgres connection 'master'
[0m18:56:05  Acquiring new postgres connection 'list_dbtsales'
[0m18:56:05  Using postgres connection "list_dbtsales"
[0m18:56:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:56:05  Opening a new connection, currently in state init
[0m18:56:05  SQL status: SELECT 5 in 0.0 seconds
[0m18:56:05  On list_dbtsales: Close
[0m18:56:06  Using postgres connection "list_dbtsales"
[0m18:56:06  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:56:06  Opening a new connection, currently in state closed
[0m18:56:06  SQL status: SELECT 5 in 0.0 seconds
[0m18:56:06  On list_dbtsales: Close
[0m18:56:06  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:56:06  Using postgres connection "list_dbtsales_public_stg"
[0m18:56:06  On list_dbtsales_public_stg: BEGIN
[0m18:56:06  Opening a new connection, currently in state init
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  Using postgres connection "list_dbtsales_public_stg"
[0m18:56:06  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:56:06  SQL status: SELECT 1 in 0.0 seconds
[0m18:56:06  On list_dbtsales_public_stg: ROLLBACK
[0m18:56:06  On list_dbtsales_public_stg: Close
[0m18:56:06  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:56:06  Using postgres connection "list_dbtsales_public"
[0m18:56:06  On list_dbtsales_public: BEGIN
[0m18:56:06  Opening a new connection, currently in state closed
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  Using postgres connection "list_dbtsales_public"
[0m18:56:06  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:56:06  SQL status: SELECT 2 in 0.0 seconds
[0m18:56:06  On list_dbtsales_public: ROLLBACK
[0m18:56:06  On list_dbtsales_public: Close
[0m18:56:06  Using postgres connection "master"
[0m18:56:06  On master: BEGIN
[0m18:56:06  Opening a new connection, currently in state init
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  Using postgres connection "master"
[0m18:56:06  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:56:06  SQL status: SELECT 1 in 0.0 seconds
[0m18:56:06  On master: ROLLBACK
[0m18:56:06  Using postgres connection "master"
[0m18:56:06  On master: BEGIN
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  On master: COMMIT
[0m18:56:06  Using postgres connection "master"
[0m18:56:06  On master: COMMIT
[0m18:56:06  SQL status: COMMIT in 0.0 seconds
[0m18:56:06  On master: Close
[0m18:56:06  Concurrency: 1 threads (target='dev')
[0m18:56:06  
[0m18:56:06  Began running node model.jaffle_shop.raw_sales
[0m18:56:06  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:56:06  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:56:06  Began compiling node model.jaffle_shop.raw_sales
[0m18:56:06  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:56:06  Timing info for model.jaffle_shop.raw_sales (compile): 20:56:06.248301 => 20:56:06.256298
[0m18:56:06  Began executing node model.jaffle_shop.raw_sales
[0m18:56:06  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:56:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:56:06  On model.jaffle_shop.raw_sales: BEGIN
[0m18:56:06  Opening a new connection, currently in state init
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:56:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:56:06  SQL status: SELECT 2823 in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:56:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:56:06  SQL status: ALTER TABLE in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:56:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:56:06  SQL status: ALTER TABLE in 0.0 seconds
[0m18:56:06  On model.jaffle_shop.raw_sales: COMMIT
[0m18:56:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:56:06  On model.jaffle_shop.raw_sales: COMMIT
[0m18:56:06  SQL status: COMMIT in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:56:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:56:06  SQL status: DROP TABLE in 0.0 seconds
[0m18:56:06  Timing info for model.jaffle_shop.raw_sales (execute): 20:56:06.258299 => 20:56:06.507185
[0m18:56:06  On model.jaffle_shop.raw_sales: Close
[0m18:56:06  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.27s]
[0m18:56:06  Finished running node model.jaffle_shop.raw_sales
[0m18:56:06  Began running node model.jaffle_shop.stg_customers
[0m18:56:06  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:56:06  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:56:06  Began compiling node model.jaffle_shop.stg_customers
[0m18:56:06  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:56:06  Timing info for model.jaffle_shop.stg_customers (compile): 20:56:06.522194 => 20:56:06.528193
[0m18:56:06  Began executing node model.jaffle_shop.stg_customers
[0m18:56:06  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:56:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:06  On model.jaffle_shop.stg_customers: BEGIN
[0m18:56:06  Opening a new connection, currently in state closed
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "CUSTOMERNAME" from "dbtsales"."public"."raw_sales"
  );
[0m18:56:06  SQL status: CREATE VIEW in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:56:06  SQL status: ALTER TABLE in 0.0 seconds
[0m18:56:06  On model.jaffle_shop.stg_customers: COMMIT
[0m18:56:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:06  On model.jaffle_shop.stg_customers: COMMIT
[0m18:56:06  SQL status: COMMIT in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:56:06  SQL status: DROP VIEW in 0.0 seconds
[0m18:56:06  Timing info for model.jaffle_shop.stg_customers (execute): 20:56:06.532195 => 20:56:06.676784
[0m18:56:06  On model.jaffle_shop.stg_customers: Close
[0m18:56:06  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.16s]
[0m18:56:06  Finished running node model.jaffle_shop.stg_customers
[0m18:56:06  Began running node model.jaffle_shop.customers
[0m18:56:06  3 of 3 START sql view model public.customers ................................... [RUN]
[0m18:56:06  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:56:06  Began compiling node model.jaffle_shop.customers
[0m18:56:06  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:56:06  Timing info for model.jaffle_shop.customers (compile): 20:56:06.691763 => 20:56:06.696764
[0m18:56:06  Began executing node model.jaffle_shop.customers
[0m18:56:06  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:56:06  Using postgres connection "model.jaffle_shop.customers"
[0m18:56:06  On model.jaffle_shop.customers: BEGIN
[0m18:56:06  Opening a new connection, currently in state closed
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.customers"
[0m18:56:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),


final as (

    select
        *
    from customers

)

select * from final
  );
[0m18:56:06  SQL status: CREATE VIEW in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.customers"
[0m18:56:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m18:56:06  SQL status: ALTER TABLE in 0.0 seconds
[0m18:56:06  On model.jaffle_shop.customers: COMMIT
[0m18:56:06  Using postgres connection "model.jaffle_shop.customers"
[0m18:56:06  On model.jaffle_shop.customers: COMMIT
[0m18:56:06  SQL status: COMMIT in 0.0 seconds
[0m18:56:06  Using postgres connection "model.jaffle_shop.customers"
[0m18:56:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m18:56:06  SQL status: DROP VIEW in 0.0 seconds
[0m18:56:06  Timing info for model.jaffle_shop.customers (execute): 20:56:06.699766 => 20:56:06.777553
[0m18:56:06  On model.jaffle_shop.customers: Close
[0m18:56:06  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.09s]
[0m18:56:06  Finished running node model.jaffle_shop.customers
[0m18:56:06  Using postgres connection "master"
[0m18:56:06  On master: BEGIN
[0m18:56:06  Opening a new connection, currently in state closed
[0m18:56:06  SQL status: BEGIN in 0.0 seconds
[0m18:56:06  On master: COMMIT
[0m18:56:06  Using postgres connection "master"
[0m18:56:06  On master: COMMIT
[0m18:56:06  SQL status: COMMIT in 0.0 seconds
[0m18:56:06  On master: Close
[0m18:56:06  Connection 'master' was properly closed.
[0m18:56:06  Connection 'list_dbtsales' was properly closed.
[0m18:56:06  Connection 'list_dbtsales_public' was properly closed.
[0m18:56:06  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:56:06  
[0m18:56:06  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.90 seconds (0.90s).
[0m18:56:06  Command end result
[0m18:56:06  
[0m18:56:06  [32mCompleted successfully[0m
[0m18:56:06  
[0m18:56:06  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m18:56:06  Command `dbt run` succeeded at 20:56:06.882815 after 1.40 seconds
[0m18:56:06  Flushing usage events
[0m18:57:39  Running with dbt=1.5.4
[0m18:57:39  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:57:39  Registered adapter: postgres=1.5.4
[0m18:57:40  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:57:40  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:57:40  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:57:40  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:57:40  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:57:40  
[0m18:57:40  Acquiring new postgres connection 'master'
[0m18:57:40  Acquiring new postgres connection 'list_dbtsales'
[0m18:57:40  Using postgres connection "list_dbtsales"
[0m18:57:40  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:57:40  Opening a new connection, currently in state init
[0m18:57:40  SQL status: SELECT 5 in 0.0 seconds
[0m18:57:40  On list_dbtsales: Close
[0m18:57:40  Using postgres connection "list_dbtsales"
[0m18:57:40  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:57:40  Opening a new connection, currently in state closed
[0m18:57:40  SQL status: SELECT 5 in 0.0 seconds
[0m18:57:40  On list_dbtsales: Close
[0m18:57:40  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:57:40  Using postgres connection "list_dbtsales_public_stg"
[0m18:57:40  On list_dbtsales_public_stg: BEGIN
[0m18:57:40  Opening a new connection, currently in state init
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  Using postgres connection "list_dbtsales_public_stg"
[0m18:57:40  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:57:40  SQL status: SELECT 1 in 0.0 seconds
[0m18:57:40  On list_dbtsales_public_stg: ROLLBACK
[0m18:57:40  On list_dbtsales_public_stg: Close
[0m18:57:40  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:57:40  Using postgres connection "list_dbtsales_public"
[0m18:57:40  On list_dbtsales_public: BEGIN
[0m18:57:40  Opening a new connection, currently in state closed
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  Using postgres connection "list_dbtsales_public"
[0m18:57:40  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:57:40  SQL status: SELECT 3 in 0.0 seconds
[0m18:57:40  On list_dbtsales_public: ROLLBACK
[0m18:57:40  On list_dbtsales_public: Close
[0m18:57:40  Using postgres connection "master"
[0m18:57:40  On master: BEGIN
[0m18:57:40  Opening a new connection, currently in state init
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  Using postgres connection "master"
[0m18:57:40  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:57:40  SQL status: SELECT 2 in 0.0 seconds
[0m18:57:40  On master: ROLLBACK
[0m18:57:40  Using postgres connection "master"
[0m18:57:40  On master: BEGIN
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  On master: COMMIT
[0m18:57:40  Using postgres connection "master"
[0m18:57:40  On master: COMMIT
[0m18:57:40  SQL status: COMMIT in 0.0 seconds
[0m18:57:40  On master: Close
[0m18:57:40  Concurrency: 1 threads (target='dev')
[0m18:57:40  
[0m18:57:40  Began running node model.jaffle_shop.raw_sales
[0m18:57:40  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m18:57:40  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:57:40  Began compiling node model.jaffle_shop.raw_sales
[0m18:57:40  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:57:40  Timing info for model.jaffle_shop.raw_sales (compile): 20:57:40.498556 => 20:57:40.504558
[0m18:57:40  Began executing node model.jaffle_shop.raw_sales
[0m18:57:40  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:57:40  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:57:40  On model.jaffle_shop.raw_sales: BEGIN
[0m18:57:40  Opening a new connection, currently in state init
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:57:40  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m18:57:40  SQL status: SELECT 2823 in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:57:40  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:57:40  SQL status: ALTER TABLE in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:57:40  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:57:40  SQL status: ALTER TABLE in 0.0 seconds
[0m18:57:40  On model.jaffle_shop.raw_sales: COMMIT
[0m18:57:40  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:57:40  On model.jaffle_shop.raw_sales: COMMIT
[0m18:57:40  SQL status: COMMIT in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:57:40  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:57:40  SQL status: DROP TABLE in 0.0 seconds
[0m18:57:40  Timing info for model.jaffle_shop.raw_sales (execute): 20:57:40.509552 => 20:57:40.699516
[0m18:57:40  On model.jaffle_shop.raw_sales: Close
[0m18:57:40  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.21s]
[0m18:57:40  Finished running node model.jaffle_shop.raw_sales
[0m18:57:40  Began running node model.jaffle_shop.stg_customers
[0m18:57:40  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:57:40  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m18:57:40  Began compiling node model.jaffle_shop.stg_customers
[0m18:57:40  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:57:40  Timing info for model.jaffle_shop.stg_customers (compile): 20:57:40.714309 => 20:57:40.720731
[0m18:57:40  Began executing node model.jaffle_shop.stg_customers
[0m18:57:40  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:57:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:57:40  On model.jaffle_shop.stg_customers: BEGIN
[0m18:57:40  Opening a new connection, currently in state closed
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:57:40  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "CUSTOMERNAME" as customer_name from "dbtsales"."public"."raw_sales"
  );
[0m18:57:40  SQL status: CREATE VIEW in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:57:40  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:57:40  SQL status: ALTER TABLE in 0.0 seconds
[0m18:57:40  On model.jaffle_shop.stg_customers: COMMIT
[0m18:57:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:57:40  On model.jaffle_shop.stg_customers: COMMIT
[0m18:57:40  SQL status: COMMIT in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:57:40  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:57:40  SQL status: DROP VIEW in 0.0 seconds
[0m18:57:40  Timing info for model.jaffle_shop.stg_customers (execute): 20:57:40.723741 => 20:57:40.868847
[0m18:57:40  On model.jaffle_shop.stg_customers: Close
[0m18:57:40  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.16s]
[0m18:57:40  Finished running node model.jaffle_shop.stg_customers
[0m18:57:40  Began running node model.jaffle_shop.customers
[0m18:57:40  3 of 3 START sql view model public.customers ................................... [RUN]
[0m18:57:40  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m18:57:40  Began compiling node model.jaffle_shop.customers
[0m18:57:40  Writing injected SQL for node "model.jaffle_shop.customers"
[0m18:57:40  Timing info for model.jaffle_shop.customers (compile): 20:57:40.881847 => 20:57:40.886846
[0m18:57:40  Began executing node model.jaffle_shop.customers
[0m18:57:40  Writing runtime sql for node "model.jaffle_shop.customers"
[0m18:57:40  Using postgres connection "model.jaffle_shop.customers"
[0m18:57:40  On model.jaffle_shop.customers: BEGIN
[0m18:57:40  Opening a new connection, currently in state closed
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.customers"
[0m18:57:40  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),


final as (

    select
        *
    from customers

)

select * from final
  );
[0m18:57:40  SQL status: CREATE VIEW in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.customers"
[0m18:57:40  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m18:57:40  SQL status: ALTER TABLE in 0.0 seconds
[0m18:57:40  On model.jaffle_shop.customers: COMMIT
[0m18:57:40  Using postgres connection "model.jaffle_shop.customers"
[0m18:57:40  On model.jaffle_shop.customers: COMMIT
[0m18:57:40  SQL status: COMMIT in 0.0 seconds
[0m18:57:40  Using postgres connection "model.jaffle_shop.customers"
[0m18:57:40  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m18:57:40  SQL status: DROP VIEW in 0.0 seconds
[0m18:57:40  Timing info for model.jaffle_shop.customers (execute): 20:57:40.888847 => 20:57:40.953999
[0m18:57:40  On model.jaffle_shop.customers: Close
[0m18:57:40  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.08s]
[0m18:57:40  Finished running node model.jaffle_shop.customers
[0m18:57:40  Using postgres connection "master"
[0m18:57:40  On master: BEGIN
[0m18:57:40  Opening a new connection, currently in state closed
[0m18:57:40  SQL status: BEGIN in 0.0 seconds
[0m18:57:40  On master: COMMIT
[0m18:57:40  Using postgres connection "master"
[0m18:57:40  On master: COMMIT
[0m18:57:40  SQL status: COMMIT in 0.0 seconds
[0m18:57:40  On master: Close
[0m18:57:40  Connection 'master' was properly closed.
[0m18:57:40  Connection 'list_dbtsales' was properly closed.
[0m18:57:40  Connection 'list_dbtsales_public' was properly closed.
[0m18:57:40  Connection 'model.jaffle_shop.customers' was properly closed.
[0m18:57:40  
[0m18:57:40  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.75 seconds (0.75s).
[0m18:57:40  Command end result
[0m18:57:41  
[0m18:57:41  [32mCompleted successfully[0m
[0m18:57:41  
[0m18:57:41  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m18:57:41  Command `dbt run` succeeded at 20:57:41.017006 after 1.12 seconds
[0m18:57:41  Flushing usage events
[0m19:00:20  Running with dbt=1.5.4
[0m19:00:20  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:00:20  Registered adapter: postgres=1.5.4
[0m19:00:20  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:00:20  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:00:20  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m19:00:20  1699: static parser successfully parsed staging\stg_customers.sql
[0m19:00:21  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:00:21  
[0m19:00:21  Acquiring new postgres connection 'master'
[0m19:00:21  Acquiring new postgres connection 'list_dbtsales'
[0m19:00:21  Using postgres connection "list_dbtsales"
[0m19:00:21  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:00:21  Opening a new connection, currently in state init
[0m19:00:21  SQL status: SELECT 5 in 0.0 seconds
[0m19:00:21  On list_dbtsales: Close
[0m19:00:21  Using postgres connection "list_dbtsales"
[0m19:00:21  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:00:21  Opening a new connection, currently in state closed
[0m19:00:21  SQL status: SELECT 5 in 0.0 seconds
[0m19:00:21  On list_dbtsales: Close
[0m19:00:21  Acquiring new postgres connection 'list_dbtsales_public'
[0m19:00:21  Using postgres connection "list_dbtsales_public"
[0m19:00:21  On list_dbtsales_public: BEGIN
[0m19:00:21  Opening a new connection, currently in state init
[0m19:00:21  SQL status: BEGIN in 0.0 seconds
[0m19:00:21  Using postgres connection "list_dbtsales_public"
[0m19:00:21  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:00:21  SQL status: SELECT 3 in 0.0 seconds
[0m19:00:21  On list_dbtsales_public: ROLLBACK
[0m19:00:21  On list_dbtsales_public: Close
[0m19:00:21  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m19:00:21  Using postgres connection "list_dbtsales_public_stg"
[0m19:00:21  On list_dbtsales_public_stg: BEGIN
[0m19:00:21  Opening a new connection, currently in state closed
[0m19:00:21  SQL status: BEGIN in 0.0 seconds
[0m19:00:21  Using postgres connection "list_dbtsales_public_stg"
[0m19:00:21  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:00:21  SQL status: SELECT 1 in 0.0 seconds
[0m19:00:21  On list_dbtsales_public_stg: ROLLBACK
[0m19:00:21  On list_dbtsales_public_stg: Close
[0m19:00:21  Using postgres connection "master"
[0m19:00:21  On master: BEGIN
[0m19:00:21  Opening a new connection, currently in state init
[0m19:00:21  SQL status: BEGIN in 0.0 seconds
[0m19:00:21  Using postgres connection "master"
[0m19:00:21  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:00:21  SQL status: SELECT 2 in 0.0 seconds
[0m19:00:21  On master: ROLLBACK
[0m19:00:21  Using postgres connection "master"
[0m19:00:21  On master: BEGIN
[0m19:00:21  SQL status: BEGIN in 0.0 seconds
[0m19:00:21  On master: COMMIT
[0m19:00:21  Using postgres connection "master"
[0m19:00:21  On master: COMMIT
[0m19:00:21  SQL status: COMMIT in 0.0 seconds
[0m19:00:21  On master: Close
[0m19:00:21  Concurrency: 1 threads (target='dev')
[0m19:00:21  
[0m19:00:21  Began running node model.jaffle_shop.raw_sales
[0m19:00:21  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m19:00:21  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m19:00:21  Began compiling node model.jaffle_shop.raw_sales
[0m19:00:21  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m19:00:21  Timing info for model.jaffle_shop.raw_sales (compile): 21:00:21.322078 => 21:00:21.330589
[0m19:00:21  Began executing node model.jaffle_shop.raw_sales
[0m19:00:21  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m19:00:21  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:21  On model.jaffle_shop.raw_sales: BEGIN
[0m19:00:21  Opening a new connection, currently in state init
[0m19:00:21  SQL status: BEGIN in 0.0 seconds
[0m19:00:21  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:21  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m19:00:21  SQL status: SELECT 2823 in 0.0 seconds
[0m19:00:21  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:21  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m19:00:21  SQL status: ALTER TABLE in 0.0 seconds
[0m19:00:21  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:21  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m19:00:21  SQL status: ALTER TABLE in 0.0 seconds
[0m19:00:21  On model.jaffle_shop.raw_sales: COMMIT
[0m19:00:21  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:21  On model.jaffle_shop.raw_sales: COMMIT
[0m19:00:21  SQL status: COMMIT in 0.0 seconds
[0m19:00:21  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:21  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m19:00:21  SQL status: DROP TABLE in 0.0 seconds
[0m19:00:21  Timing info for model.jaffle_shop.raw_sales (execute): 21:00:21.333591 => 21:00:21.587512
[0m19:00:21  On model.jaffle_shop.raw_sales: Close
[0m19:00:21  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.27s]
[0m19:00:21  Finished running node model.jaffle_shop.raw_sales
[0m19:00:21  Began running node model.jaffle_shop.stg_customers
[0m19:00:21  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m19:00:21  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m19:00:21  Began compiling node model.jaffle_shop.stg_customers
[0m19:00:21  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m19:00:21  Timing info for model.jaffle_shop.stg_customers (compile): 21:00:21.602486 => 21:00:21.610964
[0m19:00:21  Began executing node model.jaffle_shop.stg_customers
[0m19:00:21  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m19:00:21  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:00:21  On model.jaffle_shop.stg_customers: BEGIN
[0m19:00:21  Opening a new connection, currently in state closed
[0m19:00:21  SQL status: BEGIN in 0.0 seconds
[0m19:00:21  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:00:21  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "CUSTOMERNAME" as customer_name,
    "CustomerID" as customer_id,
    CONTACTLASTNAME AS last_name,
    CONTACTFIRSTNAME AS first_name
    
from "dbtsales"."public"."raw_sales"
  );
[0m19:00:21  Postgres adapter: Postgres error: column "contactlastname" does not exist
LINE 25:     CONTACTLASTNAME AS last_name,
             ^

[0m19:00:21  On model.jaffle_shop.stg_customers: ROLLBACK
[0m19:00:21  Timing info for model.jaffle_shop.stg_customers (execute): 21:00:21.613964 => 21:00:21.763085
[0m19:00:21  On model.jaffle_shop.stg_customers: Close
[0m19:00:21  Database Error in model stg_customers (models\staging\stg_customers.sql)
  column "contactlastname" does not exist
  LINE 25:     CONTACTLASTNAME AS last_name,
               ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m19:00:21  2 of 3 ERROR creating sql view model public_stg.stg_customers .................. [[31mERROR[0m in 0.18s]
[0m19:00:21  Finished running node model.jaffle_shop.stg_customers
[0m19:00:21  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m19:00:21  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m19:00:21  CANCEL query model.jaffle_shop.stg_customers ................................... [[31mCANCEL[0m]
[0m19:00:21  
[0m19:00:21  [33mDatabase Error in model stg_customers (models\staging\stg_customers.sql)[0m
[0m19:00:21    column "contactlastname" does not exist
[0m19:00:21    LINE 25:     CONTACTLASTNAME AS last_name,
[0m19:00:21                 ^
[0m19:00:21    compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m19:00:21  Connection 'master' was properly closed.
[0m19:00:21  Connection 'list_dbtsales' was properly closed.
[0m19:00:21  Connection 'list_dbtsales_public_stg' was properly closed.
[0m19:00:21  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m19:00:21  
[0m19:00:21  Finished running 1 table model, 1 view model in 0 hours 0 minutes and 0.78 seconds (0.78s).
[0m19:00:21  Encountered an error:
FailFast Error in model stg_customers (models\staging\stg_customers.sql)
  Failing early due to test failure or runtime error
[0m19:00:21  Command `dbt run` failed at 21:00:21.806550 after 1.21 seconds
[0m19:00:21  Flushing usage events
[0m19:00:50  Running with dbt=1.5.4
[0m19:00:50  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:00:50  Registered adapter: postgres=1.5.4
[0m19:00:50  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:00:50  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:00:50  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m19:00:50  1699: static parser successfully parsed staging\stg_customers.sql
[0m19:00:50  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:00:50  
[0m19:00:50  Acquiring new postgres connection 'master'
[0m19:00:50  Acquiring new postgres connection 'list_dbtsales'
[0m19:00:50  Using postgres connection "list_dbtsales"
[0m19:00:50  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:00:50  Opening a new connection, currently in state init
[0m19:00:50  SQL status: SELECT 5 in 0.0 seconds
[0m19:00:50  On list_dbtsales: Close
[0m19:00:50  Using postgres connection "list_dbtsales"
[0m19:00:50  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:00:50  Opening a new connection, currently in state closed
[0m19:00:50  SQL status: SELECT 5 in 0.0 seconds
[0m19:00:50  On list_dbtsales: Close
[0m19:00:50  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m19:00:50  Using postgres connection "list_dbtsales_public_stg"
[0m19:00:50  On list_dbtsales_public_stg: BEGIN
[0m19:00:50  Opening a new connection, currently in state init
[0m19:00:50  SQL status: BEGIN in 0.0 seconds
[0m19:00:50  Using postgres connection "list_dbtsales_public_stg"
[0m19:00:50  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:00:50  SQL status: SELECT 0 in 0.0 seconds
[0m19:00:50  On list_dbtsales_public_stg: ROLLBACK
[0m19:00:50  On list_dbtsales_public_stg: Close
[0m19:00:50  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m19:00:50  Using postgres connection "list_dbtsales_public"
[0m19:00:50  On list_dbtsales_public: BEGIN
[0m19:00:50  Opening a new connection, currently in state closed
[0m19:00:50  SQL status: BEGIN in 0.0 seconds
[0m19:00:50  Using postgres connection "list_dbtsales_public"
[0m19:00:50  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:00:50  SQL status: SELECT 2 in 0.0 seconds
[0m19:00:50  On list_dbtsales_public: ROLLBACK
[0m19:00:50  On list_dbtsales_public: Close
[0m19:00:50  Using postgres connection "master"
[0m19:00:50  On master: BEGIN
[0m19:00:50  Opening a new connection, currently in state init
[0m19:00:50  SQL status: BEGIN in 0.0 seconds
[0m19:00:50  Using postgres connection "master"
[0m19:00:50  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:00:50  SQL status: SELECT 0 in 0.0 seconds
[0m19:00:50  On master: ROLLBACK
[0m19:00:50  Using postgres connection "master"
[0m19:00:50  On master: BEGIN
[0m19:00:50  SQL status: BEGIN in 0.0 seconds
[0m19:00:50  On master: COMMIT
[0m19:00:50  Using postgres connection "master"
[0m19:00:50  On master: COMMIT
[0m19:00:50  SQL status: COMMIT in 0.0 seconds
[0m19:00:50  On master: Close
[0m19:00:50  Concurrency: 1 threads (target='dev')
[0m19:00:50  
[0m19:00:50  Began running node model.jaffle_shop.raw_sales
[0m19:00:50  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m19:00:50  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m19:00:50  Began compiling node model.jaffle_shop.raw_sales
[0m19:00:50  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m19:00:50  Timing info for model.jaffle_shop.raw_sales (compile): 21:00:50.971635 => 21:00:50.976636
[0m19:00:50  Began executing node model.jaffle_shop.raw_sales
[0m19:00:51  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m19:00:51  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:51  On model.jaffle_shop.raw_sales: BEGIN
[0m19:00:51  Opening a new connection, currently in state init
[0m19:00:51  SQL status: BEGIN in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:51  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m19:00:51  SQL status: SELECT 2823 in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:51  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m19:00:51  SQL status: ALTER TABLE in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:51  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m19:00:51  SQL status: ALTER TABLE in 0.0 seconds
[0m19:00:51  On model.jaffle_shop.raw_sales: COMMIT
[0m19:00:51  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:51  On model.jaffle_shop.raw_sales: COMMIT
[0m19:00:51  SQL status: COMMIT in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:00:51  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m19:00:51  SQL status: DROP TABLE in 0.0 seconds
[0m19:00:51  Timing info for model.jaffle_shop.raw_sales (execute): 21:00:50.979632 => 21:00:51.215106
[0m19:00:51  On model.jaffle_shop.raw_sales: Close
[0m19:00:51  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.25s]
[0m19:00:51  Finished running node model.jaffle_shop.raw_sales
[0m19:00:51  Began running node model.jaffle_shop.stg_customers
[0m19:00:51  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m19:00:51  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m19:00:51  Began compiling node model.jaffle_shop.stg_customers
[0m19:00:51  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m19:00:51  Timing info for model.jaffle_shop.stg_customers (compile): 21:00:51.230523 => 21:00:51.238533
[0m19:00:51  Began executing node model.jaffle_shop.stg_customers
[0m19:00:51  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m19:00:51  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:00:51  On model.jaffle_shop.stg_customers: BEGIN
[0m19:00:51  Opening a new connection, currently in state closed
[0m19:00:51  SQL status: BEGIN in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:00:51  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "CUSTOMERNAME" as customer_name,
    "CustomerID" as customer_id,
    "CONTACTLASTNAME" as last_name,
    "CONTACTFIRSTNAME" as first_name
from "dbtsales"."public"."raw_sales"
  );
[0m19:00:51  SQL status: CREATE VIEW in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:00:51  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m19:00:51  SQL status: ALTER TABLE in 0.0 seconds
[0m19:00:51  On model.jaffle_shop.stg_customers: COMMIT
[0m19:00:51  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:00:51  On model.jaffle_shop.stg_customers: COMMIT
[0m19:00:51  SQL status: COMMIT in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:00:51  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m19:00:51  SQL status: DROP VIEW in 0.0 seconds
[0m19:00:51  Timing info for model.jaffle_shop.stg_customers (execute): 21:00:51.241530 => 21:00:51.374541
[0m19:00:51  On model.jaffle_shop.stg_customers: Close
[0m19:00:51  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.15s]
[0m19:00:51  Finished running node model.jaffle_shop.stg_customers
[0m19:00:51  Began running node model.jaffle_shop.customers
[0m19:00:51  3 of 3 START sql view model public.customers ................................... [RUN]
[0m19:00:51  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m19:00:51  Began compiling node model.jaffle_shop.customers
[0m19:00:51  Writing injected SQL for node "model.jaffle_shop.customers"
[0m19:00:51  Timing info for model.jaffle_shop.customers (compile): 21:00:51.390541 => 21:00:51.396551
[0m19:00:51  Began executing node model.jaffle_shop.customers
[0m19:00:51  Writing runtime sql for node "model.jaffle_shop.customers"
[0m19:00:51  Using postgres connection "model.jaffle_shop.customers"
[0m19:00:51  On model.jaffle_shop.customers: BEGIN
[0m19:00:51  Opening a new connection, currently in state closed
[0m19:00:51  SQL status: BEGIN in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.customers"
[0m19:00:51  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),


final as (

    select
        *
    from customers

)

select * from final
  );
[0m19:00:51  SQL status: CREATE VIEW in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.customers"
[0m19:00:51  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m19:00:51  SQL status: ALTER TABLE in 0.0 seconds
[0m19:00:51  On model.jaffle_shop.customers: COMMIT
[0m19:00:51  Using postgres connection "model.jaffle_shop.customers"
[0m19:00:51  On model.jaffle_shop.customers: COMMIT
[0m19:00:51  SQL status: COMMIT in 0.0 seconds
[0m19:00:51  Using postgres connection "model.jaffle_shop.customers"
[0m19:00:51  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m19:00:51  SQL status: DROP VIEW in 0.0 seconds
[0m19:00:51  Timing info for model.jaffle_shop.customers (execute): 21:00:51.402902 => 21:00:51.481897
[0m19:00:51  On model.jaffle_shop.customers: Close
[0m19:00:51  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.10s]
[0m19:00:51  Finished running node model.jaffle_shop.customers
[0m19:00:51  Using postgres connection "master"
[0m19:00:51  On master: BEGIN
[0m19:00:51  Opening a new connection, currently in state closed
[0m19:00:51  SQL status: BEGIN in 0.0 seconds
[0m19:00:51  On master: COMMIT
[0m19:00:51  Using postgres connection "master"
[0m19:00:51  On master: COMMIT
[0m19:00:51  SQL status: COMMIT in 0.0 seconds
[0m19:00:51  On master: Close
[0m19:00:51  Connection 'master' was properly closed.
[0m19:00:51  Connection 'list_dbtsales' was properly closed.
[0m19:00:51  Connection 'list_dbtsales_public' was properly closed.
[0m19:00:51  Connection 'model.jaffle_shop.customers' was properly closed.
[0m19:00:51  
[0m19:00:51  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.85 seconds (0.85s).
[0m19:00:51  Command end result
[0m19:00:51  
[0m19:00:51  [32mCompleted successfully[0m
[0m19:00:51  
[0m19:00:51  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m19:00:51  Command `dbt run` succeeded at 21:00:51.556728 after 1.38 seconds
[0m19:00:51  Flushing usage events
[0m19:01:19  Running with dbt=1.5.4
[0m19:01:19  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:01:19  Registered adapter: postgres=1.5.4
[0m19:01:19  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:01:19  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:01:19  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m19:01:19  1699: static parser successfully parsed staging\stg_customers.sql
[0m19:01:19  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:01:19  
[0m19:01:19  Acquiring new postgres connection 'master'
[0m19:01:19  Acquiring new postgres connection 'list_dbtsales'
[0m19:01:19  Using postgres connection "list_dbtsales"
[0m19:01:19  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:01:19  Opening a new connection, currently in state init
[0m19:01:20  SQL status: SELECT 5 in 0.0 seconds
[0m19:01:20  On list_dbtsales: Close
[0m19:01:20  Using postgres connection "list_dbtsales"
[0m19:01:20  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:01:20  Opening a new connection, currently in state closed
[0m19:01:20  SQL status: SELECT 5 in 0.0 seconds
[0m19:01:20  On list_dbtsales: Close
[0m19:01:20  Acquiring new postgres connection 'list_dbtsales_public'
[0m19:01:20  Using postgres connection "list_dbtsales_public"
[0m19:01:20  On list_dbtsales_public: BEGIN
[0m19:01:20  Opening a new connection, currently in state init
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  Using postgres connection "list_dbtsales_public"
[0m19:01:20  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:01:20  SQL status: SELECT 3 in 0.0 seconds
[0m19:01:20  On list_dbtsales_public: ROLLBACK
[0m19:01:20  On list_dbtsales_public: Close
[0m19:01:20  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m19:01:20  Using postgres connection "list_dbtsales_public_stg"
[0m19:01:20  On list_dbtsales_public_stg: BEGIN
[0m19:01:20  Opening a new connection, currently in state closed
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  Using postgres connection "list_dbtsales_public_stg"
[0m19:01:20  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:01:20  SQL status: SELECT 1 in 0.0 seconds
[0m19:01:20  On list_dbtsales_public_stg: ROLLBACK
[0m19:01:20  On list_dbtsales_public_stg: Close
[0m19:01:20  Using postgres connection "master"
[0m19:01:20  On master: BEGIN
[0m19:01:20  Opening a new connection, currently in state init
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  Using postgres connection "master"
[0m19:01:20  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:01:20  SQL status: SELECT 2 in 0.0 seconds
[0m19:01:20  On master: ROLLBACK
[0m19:01:20  Using postgres connection "master"
[0m19:01:20  On master: BEGIN
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  On master: COMMIT
[0m19:01:20  Using postgres connection "master"
[0m19:01:20  On master: COMMIT
[0m19:01:20  SQL status: COMMIT in 0.0 seconds
[0m19:01:20  On master: Close
[0m19:01:20  Concurrency: 1 threads (target='dev')
[0m19:01:20  
[0m19:01:20  Began running node model.jaffle_shop.raw_sales
[0m19:01:20  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m19:01:20  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m19:01:20  Began compiling node model.jaffle_shop.raw_sales
[0m19:01:20  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m19:01:20  Timing info for model.jaffle_shop.raw_sales (compile): 21:01:20.321872 => 21:01:20.329841
[0m19:01:20  Began executing node model.jaffle_shop.raw_sales
[0m19:01:20  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m19:01:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:01:20  On model.jaffle_shop.raw_sales: BEGIN
[0m19:01:20  Opening a new connection, currently in state init
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:01:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m19:01:20  SQL status: SELECT 2823 in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:01:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m19:01:20  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:01:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m19:01:20  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:20  On model.jaffle_shop.raw_sales: COMMIT
[0m19:01:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:01:20  On model.jaffle_shop.raw_sales: COMMIT
[0m19:01:20  SQL status: COMMIT in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.raw_sales"
[0m19:01:20  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m19:01:20  SQL status: DROP TABLE in 0.0 seconds
[0m19:01:20  Timing info for model.jaffle_shop.raw_sales (execute): 21:01:20.336045 => 21:01:20.619193
[0m19:01:20  On model.jaffle_shop.raw_sales: Close
[0m19:01:20  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.30s]
[0m19:01:20  Finished running node model.jaffle_shop.raw_sales
[0m19:01:20  Began running node model.jaffle_shop.stg_customers
[0m19:01:20  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m19:01:20  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m19:01:20  Began compiling node model.jaffle_shop.stg_customers
[0m19:01:20  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m19:01:20  Timing info for model.jaffle_shop.stg_customers (compile): 21:01:20.634956 => 21:01:20.643968
[0m19:01:20  Began executing node model.jaffle_shop.stg_customers
[0m19:01:20  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m19:01:20  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:20  On model.jaffle_shop.stg_customers: BEGIN
[0m19:01:20  Opening a new connection, currently in state closed
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:20  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "CustomerID" as customer_id,
    "CUSTOMERNAME" as customer_name,
    "CONTACTLASTNAME" as last_name,
    "CONTACTFIRSTNAME" as first_name
from "dbtsales"."public"."raw_sales"
  );
[0m19:01:20  SQL status: CREATE VIEW in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:20  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m19:01:20  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:20  On model.jaffle_shop.stg_customers: COMMIT
[0m19:01:20  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:20  On model.jaffle_shop.stg_customers: COMMIT
[0m19:01:20  SQL status: COMMIT in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:20  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m19:01:20  SQL status: DROP VIEW in 0.0 seconds
[0m19:01:20  Timing info for model.jaffle_shop.stg_customers (execute): 21:01:20.648459 => 21:01:20.822482
[0m19:01:20  On model.jaffle_shop.stg_customers: Close
[0m19:01:20  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.19s]
[0m19:01:20  Finished running node model.jaffle_shop.stg_customers
[0m19:01:20  Began running node model.jaffle_shop.customers
[0m19:01:20  3 of 3 START sql view model public.customers ................................... [RUN]
[0m19:01:20  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m19:01:20  Began compiling node model.jaffle_shop.customers
[0m19:01:20  Writing injected SQL for node "model.jaffle_shop.customers"
[0m19:01:20  Timing info for model.jaffle_shop.customers (compile): 21:01:20.837812 => 21:01:20.847433
[0m19:01:20  Began executing node model.jaffle_shop.customers
[0m19:01:20  Writing runtime sql for node "model.jaffle_shop.customers"
[0m19:01:20  Using postgres connection "model.jaffle_shop.customers"
[0m19:01:20  On model.jaffle_shop.customers: BEGIN
[0m19:01:20  Opening a new connection, currently in state closed
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.customers"
[0m19:01:20  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),


final as (

    select
        *
    from customers

)

select * from final
  );
[0m19:01:20  SQL status: CREATE VIEW in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.customers"
[0m19:01:20  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m19:01:20  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:20  On model.jaffle_shop.customers: COMMIT
[0m19:01:20  Using postgres connection "model.jaffle_shop.customers"
[0m19:01:20  On model.jaffle_shop.customers: COMMIT
[0m19:01:20  SQL status: COMMIT in 0.0 seconds
[0m19:01:20  Using postgres connection "model.jaffle_shop.customers"
[0m19:01:20  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m19:01:20  SQL status: DROP VIEW in 0.0 seconds
[0m19:01:20  Timing info for model.jaffle_shop.customers (execute): 21:01:20.851676 => 21:01:20.946324
[0m19:01:20  On model.jaffle_shop.customers: Close
[0m19:01:20  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.12s]
[0m19:01:20  Finished running node model.jaffle_shop.customers
[0m19:01:20  Using postgres connection "master"
[0m19:01:20  On master: BEGIN
[0m19:01:20  Opening a new connection, currently in state closed
[0m19:01:20  SQL status: BEGIN in 0.0 seconds
[0m19:01:20  On master: COMMIT
[0m19:01:20  Using postgres connection "master"
[0m19:01:20  On master: COMMIT
[0m19:01:20  SQL status: COMMIT in 0.0 seconds
[0m19:01:20  On master: Close
[0m19:01:20  Connection 'master' was properly closed.
[0m19:01:20  Connection 'list_dbtsales' was properly closed.
[0m19:01:20  Connection 'list_dbtsales_public_stg' was properly closed.
[0m19:01:20  Connection 'model.jaffle_shop.customers' was properly closed.
[0m19:01:20  
[0m19:01:20  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 1.05 seconds (1.05s).
[0m19:01:21  Command end result
[0m19:01:21  
[0m19:01:21  [32mCompleted successfully[0m
[0m19:01:21  
[0m19:01:21  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m19:01:21  Command `dbt run` succeeded at 21:01:21.021740 after 1.63 seconds
[0m19:01:21  Flushing usage events
[0m17:57:04  Running with dbt=1.5.4
[0m17:57:04  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m17:57:04  Registered adapter: postgres=1.5.4
[0m17:57:04  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m17:57:05  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m17:57:05  Partial parsing enabled, no changes found, skipping parsing
[0m17:57:05  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m17:57:05  
[0m17:57:05  Acquiring new postgres connection 'master'
[0m17:57:05  Acquiring new postgres connection 'list_dbtsales'
[0m17:57:05  Using postgres connection "list_dbtsales"
[0m17:57:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:57:05  Opening a new connection, currently in state init
[0m17:57:05  SQL status: SELECT 5 in 0.0 seconds
[0m17:57:05  On list_dbtsales: Close
[0m17:57:05  Using postgres connection "list_dbtsales"
[0m17:57:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m17:57:05  Opening a new connection, currently in state closed
[0m17:57:05  SQL status: SELECT 5 in 0.0 seconds
[0m17:57:05  On list_dbtsales: Close
[0m17:57:05  Acquiring new postgres connection 'list_dbtsales_public'
[0m17:57:05  Using postgres connection "list_dbtsales_public"
[0m17:57:05  On list_dbtsales_public: BEGIN
[0m17:57:05  Opening a new connection, currently in state init
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  Using postgres connection "list_dbtsales_public"
[0m17:57:06  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m17:57:06  SQL status: SELECT 3 in 0.0 seconds
[0m17:57:06  On list_dbtsales_public: ROLLBACK
[0m17:57:06  On list_dbtsales_public: Close
[0m17:57:06  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m17:57:06  Using postgres connection "list_dbtsales_public_stg"
[0m17:57:06  On list_dbtsales_public_stg: BEGIN
[0m17:57:06  Opening a new connection, currently in state closed
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  Using postgres connection "list_dbtsales_public_stg"
[0m17:57:06  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m17:57:06  SQL status: SELECT 1 in 0.0 seconds
[0m17:57:06  On list_dbtsales_public_stg: ROLLBACK
[0m17:57:06  On list_dbtsales_public_stg: Close
[0m17:57:06  Using postgres connection "master"
[0m17:57:06  On master: BEGIN
[0m17:57:06  Opening a new connection, currently in state init
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  Using postgres connection "master"
[0m17:57:06  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m17:57:06  SQL status: SELECT 2 in 0.0 seconds
[0m17:57:06  On master: ROLLBACK
[0m17:57:06  Using postgres connection "master"
[0m17:57:06  On master: BEGIN
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  On master: COMMIT
[0m17:57:06  Using postgres connection "master"
[0m17:57:06  On master: COMMIT
[0m17:57:06  SQL status: COMMIT in 0.0 seconds
[0m17:57:06  On master: Close
[0m17:57:06  Concurrency: 1 threads (target='dev')
[0m17:57:06  
[0m17:57:06  Began running node model.jaffle_shop.raw_sales
[0m17:57:06  1 of 3 START sql table model public.raw_sales .................................. [RUN]
[0m17:57:06  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m17:57:06  Began compiling node model.jaffle_shop.raw_sales
[0m17:57:06  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m17:57:06  Timing info for model.jaffle_shop.raw_sales (compile): 19:57:06.208485 => 19:57:06.212590
[0m17:57:06  Began executing node model.jaffle_shop.raw_sales
[0m17:57:06  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m17:57:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:57:06  On model.jaffle_shop.raw_sales: BEGIN
[0m17:57:06  Opening a new connection, currently in state init
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:57:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select * from "dbtsales"."public"."stgsales"
  );
  
[0m17:57:06  SQL status: SELECT 2823 in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:57:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m17:57:06  SQL status: ALTER TABLE in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:57:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m17:57:06  SQL status: ALTER TABLE in 0.0 seconds
[0m17:57:06  On model.jaffle_shop.raw_sales: COMMIT
[0m17:57:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:57:06  On model.jaffle_shop.raw_sales: COMMIT
[0m17:57:06  SQL status: COMMIT in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.raw_sales"
[0m17:57:06  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m17:57:06  SQL status: DROP TABLE in 0.0 seconds
[0m17:57:06  Timing info for model.jaffle_shop.raw_sales (execute): 19:57:06.214599 => 19:57:06.380482
[0m17:57:06  On model.jaffle_shop.raw_sales: Close
[0m17:57:06  1 of 3 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.18s]
[0m17:57:06  Finished running node model.jaffle_shop.raw_sales
[0m17:57:06  Began running node model.jaffle_shop.stg_customers
[0m17:57:06  2 of 3 START sql view model public_stg.stg_customers ........................... [RUN]
[0m17:57:06  Re-using an available connection from the pool (formerly model.jaffle_shop.raw_sales, now model.jaffle_shop.stg_customers)
[0m17:57:06  Began compiling node model.jaffle_shop.stg_customers
[0m17:57:06  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m17:57:06  Timing info for model.jaffle_shop.stg_customers (compile): 19:57:06.393297 => 19:57:06.398530
[0m17:57:06  Began executing node model.jaffle_shop.stg_customers
[0m17:57:06  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m17:57:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:57:06  On model.jaffle_shop.stg_customers: BEGIN
[0m17:57:06  Opening a new connection, currently in state closed
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:57:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    -- with source as (

--
   
--     select * from "dbtsales"."public"."raw_sales"

-- ),

-- renamed as (

--     select
--         CustomerID
--     from source

-- )

select "CustomerID" as customer_id,
    "CUSTOMERNAME" as customer_name,
    "CONTACTLASTNAME" as last_name,
    "CONTACTFIRSTNAME" as first_name
from "dbtsales"."public"."raw_sales"
  );
[0m17:57:06  SQL status: CREATE VIEW in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:57:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m17:57:06  SQL status: ALTER TABLE in 0.0 seconds
[0m17:57:06  On model.jaffle_shop.stg_customers: COMMIT
[0m17:57:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:57:06  On model.jaffle_shop.stg_customers: COMMIT
[0m17:57:06  SQL status: COMMIT in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.stg_customers"
[0m17:57:06  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m17:57:06  SQL status: DROP VIEW in 0.0 seconds
[0m17:57:06  Timing info for model.jaffle_shop.stg_customers (execute): 19:57:06.400527 => 19:57:06.526901
[0m17:57:06  On model.jaffle_shop.stg_customers: Close
[0m17:57:06  2 of 3 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.14s]
[0m17:57:06  Finished running node model.jaffle_shop.stg_customers
[0m17:57:06  Began running node model.jaffle_shop.customers
[0m17:57:06  3 of 3 START sql view model public.customers ................................... [RUN]
[0m17:57:06  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.customers)
[0m17:57:06  Began compiling node model.jaffle_shop.customers
[0m17:57:06  Writing injected SQL for node "model.jaffle_shop.customers"
[0m17:57:06  Timing info for model.jaffle_shop.customers (compile): 19:57:06.543415 => 19:57:06.548416
[0m17:57:06  Began executing node model.jaffle_shop.customers
[0m17:57:06  Writing runtime sql for node "model.jaffle_shop.customers"
[0m17:57:06  Using postgres connection "model.jaffle_shop.customers"
[0m17:57:06  On model.jaffle_shop.customers: BEGIN
[0m17:57:06  Opening a new connection, currently in state closed
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.customers"
[0m17:57:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  create view "dbtsales"."public"."customers__dbt_tmp"
    
    
  as (
    

with customers as (

    select * from "dbtsales"."public_stg"."stg_customers"

),


final as (

    select
        *
    from customers

)

select * from final
  );
[0m17:57:06  SQL status: CREATE VIEW in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.customers"
[0m17:57:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "dbtsales"."public"."customers__dbt_tmp" rename to "customers"
[0m17:57:06  SQL status: ALTER TABLE in 0.0 seconds
[0m17:57:06  On model.jaffle_shop.customers: COMMIT
[0m17:57:06  Using postgres connection "model.jaffle_shop.customers"
[0m17:57:06  On model.jaffle_shop.customers: COMMIT
[0m17:57:06  SQL status: COMMIT in 0.0 seconds
[0m17:57:06  Using postgres connection "model.jaffle_shop.customers"
[0m17:57:06  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop view if exists "dbtsales"."public"."customers__dbt_backup" cascade
[0m17:57:06  SQL status: DROP VIEW in 0.0 seconds
[0m17:57:06  Timing info for model.jaffle_shop.customers (execute): 19:57:06.550656 => 19:57:06.629912
[0m17:57:06  On model.jaffle_shop.customers: Close
[0m17:57:06  3 of 3 OK created sql view model public.customers .............................. [[32mCREATE VIEW[0m in 0.10s]
[0m17:57:06  Finished running node model.jaffle_shop.customers
[0m17:57:06  Using postgres connection "master"
[0m17:57:06  On master: BEGIN
[0m17:57:06  Opening a new connection, currently in state closed
[0m17:57:06  SQL status: BEGIN in 0.0 seconds
[0m17:57:06  On master: COMMIT
[0m17:57:06  Using postgres connection "master"
[0m17:57:06  On master: COMMIT
[0m17:57:06  SQL status: COMMIT in 0.0 seconds
[0m17:57:06  On master: Close
[0m17:57:06  Connection 'master' was properly closed.
[0m17:57:06  Connection 'list_dbtsales' was properly closed.
[0m17:57:06  Connection 'list_dbtsales_public_stg' was properly closed.
[0m17:57:06  Connection 'model.jaffle_shop.customers' was properly closed.
[0m17:57:06  
[0m17:57:06  Finished running 1 table model, 2 view models in 0 hours 0 minutes and 0.78 seconds (0.78s).
[0m17:57:06  Command end result
[0m17:57:06  
[0m17:57:06  [32mCompleted successfully[0m
[0m17:57:06  
[0m17:57:06  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m17:57:06  Command `dbt run` succeeded at 19:57:06.694726 after 2.71 seconds
[0m17:57:06  Flushing usage events
[0m18:00:09  Running with dbt=1.5.4
[0m18:00:09  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:00:09  Registered adapter: postgres=1.5.4
[0m18:00:09  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:00:09  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m18:00:09  Partial parsing enabled, no changes found, skipping parsing
[0m18:00:09  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:00:09  
[0m18:00:09  Acquiring new postgres connection 'master'
[0m18:00:09  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:00:09  Using postgres connection "list_dbtsales_public_stg"
[0m18:00:09  On list_dbtsales_public_stg: BEGIN
[0m18:00:09  Opening a new connection, currently in state init
[0m18:00:09  SQL status: BEGIN in 0.0 seconds
[0m18:00:09  Using postgres connection "list_dbtsales_public_stg"
[0m18:00:09  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:00:10  SQL status: SELECT 1 in 0.0 seconds
[0m18:00:10  On list_dbtsales_public_stg: ROLLBACK
[0m18:00:10  On list_dbtsales_public_stg: Close
[0m18:00:10  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:00:10  Using postgres connection "list_dbtsales_public"
[0m18:00:10  On list_dbtsales_public: BEGIN
[0m18:00:10  Opening a new connection, currently in state closed
[0m18:00:10  SQL status: BEGIN in 0.0 seconds
[0m18:00:10  Using postgres connection "list_dbtsales_public"
[0m18:00:10  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:00:10  SQL status: SELECT 3 in 0.0 seconds
[0m18:00:10  On list_dbtsales_public: ROLLBACK
[0m18:00:10  On list_dbtsales_public: Close
[0m18:00:10  Using postgres connection "master"
[0m18:00:10  On master: BEGIN
[0m18:00:10  Opening a new connection, currently in state init
[0m18:00:10  SQL status: BEGIN in 0.0 seconds
[0m18:00:10  Using postgres connection "master"
[0m18:00:10  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:00:10  SQL status: SELECT 2 in 0.0 seconds
[0m18:00:10  On master: ROLLBACK
[0m18:00:10  Using postgres connection "master"
[0m18:00:10  On master: BEGIN
[0m18:00:10  SQL status: BEGIN in 0.0 seconds
[0m18:00:10  On master: COMMIT
[0m18:00:10  Using postgres connection "master"
[0m18:00:10  On master: COMMIT
[0m18:00:10  SQL status: COMMIT in 0.0 seconds
[0m18:00:10  On master: Close
[0m18:00:10  Concurrency: 1 threads (target='dev')
[0m18:00:10  
[0m18:00:10  Began running node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:00:10  1 of 4 START test not_null_customers_CustomerID ................................ [RUN]
[0m18:00:10  Acquiring new postgres connection 'test.jaffle_shop.not_null_customers_CustomerID.85629dc275'
[0m18:00:10  Began compiling node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:00:10  Writing injected SQL for node "test.jaffle_shop.not_null_customers_CustomerID.85629dc275"
[0m18:00:10  Timing info for test.jaffle_shop.not_null_customers_CustomerID.85629dc275 (compile): 20:00:10.158792 => 20:00:10.176792
[0m18:00:10  Began executing node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:00:10  Writing runtime sql for node "test.jaffle_shop.not_null_customers_CustomerID.85629dc275"
[0m18:00:10  Using postgres connection "test.jaffle_shop.not_null_customers_CustomerID.85629dc275"
[0m18:00:10  On test.jaffle_shop.not_null_customers_CustomerID.85629dc275: BEGIN
[0m18:00:10  Opening a new connection, currently in state init
[0m18:00:10  SQL status: BEGIN in 0.0 seconds
[0m18:00:10  Using postgres connection "test.jaffle_shop.not_null_customers_CustomerID.85629dc275"
[0m18:00:10  On test.jaffle_shop.not_null_customers_CustomerID.85629dc275: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_customers_CustomerID.85629dc275"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select CustomerID
from "dbtsales"."public"."customers"
where CustomerID is null



      
    ) dbt_internal_test
[0m18:00:10  Postgres adapter: Postgres error: column "customerid" does not exist
LINE 13: select CustomerID
                ^
HINT:  Perhaps you meant to reference the column "customers.customer_id".

[0m18:00:10  On test.jaffle_shop.not_null_customers_CustomerID.85629dc275: ROLLBACK
[0m18:00:10  Timing info for test.jaffle_shop.not_null_customers_CustomerID.85629dc275 (execute): 20:00:10.178791 => 20:00:10.246792
[0m18:00:10  On test.jaffle_shop.not_null_customers_CustomerID.85629dc275: Close
[0m18:00:10  Database Error in test not_null_customers_CustomerID (models\schema.yml)
  column "customerid" does not exist
  LINE 13: select CustomerID
                  ^
  HINT:  Perhaps you meant to reference the column "customers.customer_id".
  compiled Code at target\run\jaffle_shop\models\schema.yml\not_null_customers_CustomerID.sql
[0m18:00:10  1 of 4 ERROR not_null_customers_CustomerID ..................................... [[31mERROR[0m in 0.18s]
[0m18:00:10  Finished running node test.jaffle_shop.not_null_customers_CustomerID.85629dc275
[0m18:00:10  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:00:10  2 of 4 START test not_null_stg_customers_customer_id ........................... [RUN]
[0m18:00:10  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m18:00:10  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_CustomerID.85629dc275, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m18:00:10  CANCEL query test.jaffle_shop.not_null_customers_CustomerID.85629dc275 ......... [[31mCANCEL[0m]
[0m18:00:10  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:00:10  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m18:00:10  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 20:00:10.344851 => 20:00:10.352498
[0m18:00:10  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:00:10  Writing runtime sql for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m18:00:10  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m18:00:10  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: BEGIN
[0m18:00:10  Opening a new connection, currently in state closed
[0m18:00:10  SQL status: BEGIN in 0.0 seconds
[0m18:00:10  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m18:00:10  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "dbtsales"."public_stg"."stg_customers"
where customer_id is null



      
    ) dbt_internal_test
[0m18:00:10  SQL status: SELECT 1 in 0.0 seconds
[0m18:00:10  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 20:00:10.355498 => 20:00:10.422532
[0m18:00:10  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: ROLLBACK
[0m18:00:10  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: Close
[0m18:00:10  2 of 4 PASS not_null_stg_customers_customer_id ................................. [[32mPASS[0m in 0.09s]
[0m18:00:10  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m18:00:10  
[0m18:00:10  [33mDatabase Error in test not_null_customers_CustomerID (models\schema.yml)[0m
[0m18:00:10    column "customerid" does not exist
[0m18:00:10    LINE 13: select CustomerID
[0m18:00:10                    ^
[0m18:00:10    HINT:  Perhaps you meant to reference the column "customers.customer_id".
[0m18:00:10    compiled Code at target\run\jaffle_shop\models\schema.yml\not_null_customers_CustomerID.sql
[0m18:00:10  Connection 'master' was properly closed.
[0m18:00:10  Connection 'list_dbtsales_public' was properly closed.
[0m18:00:10  Connection 'test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa' was properly closed.
[0m18:00:10  
[0m18:00:10  Finished running 1 test in 0 hours 0 minutes and 0.52 seconds (0.52s).
[0m18:00:10  Encountered an error:
FailFast Error in test not_null_customers_CustomerID (models\schema.yml)
  Failing early due to test failure or runtime error
[0m18:00:10  Command `dbt test` failed at 20:00:10.453503 after 0.89 seconds
[0m18:00:10  Flushing usage events
[0m18:00:28  Running with dbt=1.5.4
[0m18:00:28  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:00:28  dbt version: 1.5.4
[0m18:00:28  python version: 3.10.11
[0m18:00:28  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m18:00:28  os info: Windows-10-10.0.22621-SP0
[0m18:00:28  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m18:00:28  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m18:00:28  Configuration:
[0m18:00:28    profiles.yml file [[32mOK found and valid[0m]
[0m18:00:28    dbt_project.yml file [[32mOK found and valid[0m]
[0m18:00:28  Required dependencies:
[0m18:00:28  Executing "git --help"
[0m18:00:28  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m18:00:28  STDERR: "b''"
[0m18:00:28   - git [[32mOK found[0m]

[0m18:00:28  Connection:
[0m18:00:28    host: localhost
[0m18:00:28    port: 5432
[0m18:00:28    user: postgres
[0m18:00:28    database: dbtsales
[0m18:00:28    schema: public
[0m18:00:28    search_path: None
[0m18:00:28    keepalives_idle: 0
[0m18:00:28    sslmode: None
[0m18:00:28  Registered adapter: postgres=1.5.4
[0m18:00:28  Acquiring new postgres connection 'debug'
[0m18:00:28  Using postgres connection "debug"
[0m18:00:28  On debug: select 1 as id
[0m18:00:28  Opening a new connection, currently in state init
[0m18:00:28  SQL status: SELECT 1 in 0.0 seconds
[0m18:00:28  On debug: Close
[0m18:00:28    Connection test: [[32mOK connection ok[0m]

[0m18:00:28  [32mAll checks passed![0m
[0m18:00:28  Command `dbt debug` succeeded at 20:00:28.192734 after 0.20 seconds
[0m18:00:28  Connection 'debug' was properly closed.
[0m18:00:28  Flushing usage events
[0m18:03:59  Running with dbt=1.5.4
[0m18:03:59  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:03:59  dbt version: 1.5.4
[0m18:03:59  python version: 3.10.11
[0m18:03:59  python path: C:\Louw\GitHub\dbt\jaffle_shop\.dbtenv\Scripts\python.exe
[0m18:03:59  os info: Windows-10-10.0.22621-SP0
[0m18:03:59  Using profiles.yml file at C:\Louw\GitHub\dbt\profiles.yml
[0m18:03:59  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m18:03:59  Configuration:
[0m18:03:59    profiles.yml file [[32mOK found and valid[0m]
[0m18:03:59    dbt_project.yml file [[32mOK found and valid[0m]
[0m18:03:59  Required dependencies:
[0m18:03:59  Executing "git --help"
[0m18:03:59  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m18:03:59  STDERR: "b''"
[0m18:03:59   - git [[32mOK found[0m]

[0m18:03:59  Connection:
[0m18:03:59    host: localhost
[0m18:03:59    port: 5432
[0m18:03:59    user: postgres
[0m18:03:59    database: dbtsales
[0m18:03:59    schema: public
[0m18:03:59    search_path: None
[0m18:03:59    keepalives_idle: 0
[0m18:03:59    sslmode: None
[0m18:03:59  Registered adapter: postgres=1.5.4
[0m18:03:59  Acquiring new postgres connection 'debug'
[0m18:03:59  Using postgres connection "debug"
[0m18:03:59  On debug: select 1 as id
[0m18:03:59  Opening a new connection, currently in state init
[0m18:03:59  SQL status: SELECT 1 in 0.0 seconds
[0m18:04:00  On debug: Close
[0m18:04:00    Connection test: [[32mOK connection ok[0m]

[0m18:04:00  [32mAll checks passed![0m
[0m18:04:00  Command `dbt debug` succeeded at 20:04:00.004169 after 0.18 seconds
[0m18:04:00  Connection 'debug' was properly closed.
[0m18:04:00  Flushing usage events
[0m18:10:43  Running with dbt=1.5.4
[0m18:10:43  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:10:43  Registered adapter: postgres=1.5.4
[0m18:10:43  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:10:43  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:10:43  Partial parsing: updated file: jaffle_shop://models\source\raw_sales.sql
[0m18:10:43  1699: static parser successfully parsed source\raw_sales.sql
[0m18:10:43  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:10:43  
[0m18:10:43  Acquiring new postgres connection 'master'
[0m18:10:43  Acquiring new postgres connection 'list_dbtsales'
[0m18:10:43  Using postgres connection "list_dbtsales"
[0m18:10:43  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:10:43  Opening a new connection, currently in state init
[0m18:10:43  SQL status: SELECT 5 in 0.0 seconds
[0m18:10:43  On list_dbtsales: Close
[0m18:10:43  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:10:43  Using postgres connection "list_dbtsales_public"
[0m18:10:43  On list_dbtsales_public: BEGIN
[0m18:10:43  Opening a new connection, currently in state init
[0m18:10:43  SQL status: BEGIN in 0.0 seconds
[0m18:10:43  Using postgres connection "list_dbtsales_public"
[0m18:10:43  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:10:43  SQL status: SELECT 3 in 0.0 seconds
[0m18:10:43  On list_dbtsales_public: ROLLBACK
[0m18:10:43  On list_dbtsales_public: Close
[0m18:10:43  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:10:43  Using postgres connection "list_dbtsales_public_stg"
[0m18:10:43  On list_dbtsales_public_stg: BEGIN
[0m18:10:43  Opening a new connection, currently in state closed
[0m18:10:43  SQL status: BEGIN in 0.0 seconds
[0m18:10:43  Using postgres connection "list_dbtsales_public_stg"
[0m18:10:43  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:10:43  SQL status: SELECT 1 in 0.0 seconds
[0m18:10:43  On list_dbtsales_public_stg: ROLLBACK
[0m18:10:43  On list_dbtsales_public_stg: Close
[0m18:10:43  Using postgres connection "master"
[0m18:10:43  On master: BEGIN
[0m18:10:43  Opening a new connection, currently in state init
[0m18:10:43  SQL status: BEGIN in 0.0 seconds
[0m18:10:43  Using postgres connection "master"
[0m18:10:43  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:10:43  SQL status: SELECT 2 in 0.0 seconds
[0m18:10:43  On master: ROLLBACK
[0m18:10:43  Using postgres connection "master"
[0m18:10:43  On master: BEGIN
[0m18:10:43  SQL status: BEGIN in 0.0 seconds
[0m18:10:43  On master: COMMIT
[0m18:10:43  Using postgres connection "master"
[0m18:10:43  On master: COMMIT
[0m18:10:43  SQL status: COMMIT in 0.0 seconds
[0m18:10:43  On master: Close
[0m18:10:43  Concurrency: 1 threads (target='dev')
[0m18:10:43  
[0m18:10:43  Began running node model.jaffle_shop.raw_sales
[0m18:10:43  1 of 1 START sql table model public.raw_sales .................................. [RUN]
[0m18:10:43  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:10:43  Began compiling node model.jaffle_shop.raw_sales
[0m18:10:43  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:10:43  Timing info for model.jaffle_shop.raw_sales (compile): 20:10:43.600689 => 20:10:43.605682
[0m18:10:43  Began executing node model.jaffle_shop.raw_sales
[0m18:10:43  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:10:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:10:43  On model.jaffle_shop.raw_sales: BEGIN
[0m18:10:43  Opening a new connection, currently in state init
[0m18:10:43  SQL status: BEGIN in 0.0 seconds
[0m18:10:43  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:10:43  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select ordernumber, quantityordered, priceeach, orderlinenumber, sales, orderdate, status, qtr_id, month_id, year_id, productline, msrp, productcode, customername, phone, addressline1, addressline2, city, state, postalcode, country, territory, contactlastname, contactfirstname, dealsize, organisation, day_id, customerid
 from "dbtsales"."public"."stgsales"
  );
  
[0m18:10:43  Postgres adapter: Postgres error: column "quantityordered" does not exist
LINE 12:     select ordernumber, quantityordered, priceeach, orderlin...
                                 ^

[0m18:10:43  On model.jaffle_shop.raw_sales: ROLLBACK
[0m18:10:43  Timing info for model.jaffle_shop.raw_sales (execute): 20:10:43.610683 => 20:10:43.704211
[0m18:10:43  On model.jaffle_shop.raw_sales: Close
[0m18:10:43  Database Error in model raw_sales (models\source\raw_sales.sql)
  column "quantityordered" does not exist
  LINE 12:     select ordernumber, quantityordered, priceeach, orderlin...
                                   ^
  compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:10:43  1 of 1 ERROR creating sql table model public.raw_sales ......................... [[31mERROR[0m in 0.12s]
[0m18:10:43  Finished running node model.jaffle_shop.raw_sales
[0m18:10:43  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m18:10:43  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m18:10:43  CANCEL query model.jaffle_shop.raw_sales ....................................... [[31mCANCEL[0m]
[0m18:10:43  
[0m18:10:43  [33mDatabase Error in model raw_sales (models\source\raw_sales.sql)[0m
[0m18:10:43    column "quantityordered" does not exist
[0m18:10:43    LINE 12:     select ordernumber, quantityordered, priceeach, orderlin...
[0m18:10:43                                     ^
[0m18:10:43    compiled Code at target\run\jaffle_shop\models\source\raw_sales.sql
[0m18:10:43  Connection 'master' was properly closed.
[0m18:10:43  Connection 'list_dbtsales' was properly closed.
[0m18:10:43  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:10:43  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m18:10:43  
[0m18:10:43  Finished running 1 table model in 0 hours 0 minutes and 0.35 seconds (0.35s).
[0m18:10:43  Encountered an error:
FailFast Error in model raw_sales (models\source\raw_sales.sql)
  Failing early due to test failure or runtime error
[0m18:10:43  Command `dbt run` failed at 20:10:43.747160 after 0.72 seconds
[0m18:10:43  Flushing usage events
[0m18:13:36  Running with dbt=1.5.4
[0m18:13:36  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:13:37  Registered adapter: postgres=1.5.4
[0m18:13:37  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:13:37  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m18:13:37  Partial parsing enabled, no changes found, skipping parsing
[0m18:13:37  Found 3 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:13:37  
[0m18:13:37  Acquiring new postgres connection 'master'
[0m18:13:37  Acquiring new postgres connection 'list_dbtsales'
[0m18:13:37  Using postgres connection "list_dbtsales"
[0m18:13:37  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:13:37  Opening a new connection, currently in state init
[0m18:13:37  SQL status: SELECT 5 in 0.0 seconds
[0m18:13:37  On list_dbtsales: Close
[0m18:13:37  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:13:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:13:37  On list_dbtsales_public_stg: BEGIN
[0m18:13:37  Opening a new connection, currently in state init
[0m18:13:37  SQL status: BEGIN in 0.0 seconds
[0m18:13:37  Using postgres connection "list_dbtsales_public_stg"
[0m18:13:37  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:13:37  SQL status: SELECT 1 in 0.0 seconds
[0m18:13:37  On list_dbtsales_public_stg: ROLLBACK
[0m18:13:37  On list_dbtsales_public_stg: Close
[0m18:13:37  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:13:37  Using postgres connection "list_dbtsales_public"
[0m18:13:37  On list_dbtsales_public: BEGIN
[0m18:13:37  Opening a new connection, currently in state closed
[0m18:13:37  SQL status: BEGIN in 0.0 seconds
[0m18:13:37  Using postgres connection "list_dbtsales_public"
[0m18:13:37  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:13:37  SQL status: SELECT 3 in 0.0 seconds
[0m18:13:37  On list_dbtsales_public: ROLLBACK
[0m18:13:37  On list_dbtsales_public: Close
[0m18:13:37  Using postgres connection "master"
[0m18:13:37  On master: BEGIN
[0m18:13:37  Opening a new connection, currently in state init
[0m18:13:37  SQL status: BEGIN in 0.0 seconds
[0m18:13:37  Using postgres connection "master"
[0m18:13:37  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:13:37  SQL status: SELECT 2 in 0.0 seconds
[0m18:13:37  On master: ROLLBACK
[0m18:13:37  Using postgres connection "master"
[0m18:13:37  On master: BEGIN
[0m18:13:37  SQL status: BEGIN in 0.0 seconds
[0m18:13:37  On master: COMMIT
[0m18:13:37  Using postgres connection "master"
[0m18:13:37  On master: COMMIT
[0m18:13:37  SQL status: COMMIT in 0.0 seconds
[0m18:13:37  On master: Close
[0m18:13:37  Concurrency: 1 threads (target='dev')
[0m18:13:37  
[0m18:13:37  Began running node model.jaffle_shop.raw_sales
[0m18:13:37  1 of 1 START sql table model public.raw_sales .................................. [RUN]
[0m18:13:37  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:13:37  Began compiling node model.jaffle_shop.raw_sales
[0m18:13:37  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:13:37  Timing info for model.jaffle_shop.raw_sales (compile): 20:13:37.428107 => 20:13:37.432077
[0m18:13:37  Began executing node model.jaffle_shop.raw_sales
[0m18:13:37  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:13:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:13:37  On model.jaffle_shop.raw_sales: BEGIN
[0m18:13:37  Opening a new connection, currently in state init
[0m18:13:37  SQL status: BEGIN in 0.0 seconds
[0m18:13:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:13:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select ordernumber, quantityordered, priceeach, orderlinenumber, sales, orderdate, status, qtr_id, month_id, year_id, productline, msrp, productcode, customername, phone, addressline1, addressline2, city, state, postalcode, country, territory, contactlastname, contactfirstname, dealsize, organisation, day_id, customerid
 from "dbtsales"."public"."stgsales"
  );
  
[0m18:13:37  SQL status: SELECT 2823 in 0.0 seconds
[0m18:13:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:13:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:13:37  SQL status: ALTER TABLE in 0.0 seconds
[0m18:13:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:13:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:13:37  SQL status: ALTER TABLE in 0.0 seconds
[0m18:13:37  On model.jaffle_shop.raw_sales: COMMIT
[0m18:13:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:13:37  On model.jaffle_shop.raw_sales: COMMIT
[0m18:13:37  SQL status: COMMIT in 0.0 seconds
[0m18:13:37  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:13:37  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:13:37  SQL status: DROP TABLE in 0.0 seconds
[0m18:13:37  Timing info for model.jaffle_shop.raw_sales (execute): 20:13:37.437074 => 20:13:37.587559
[0m18:13:37  On model.jaffle_shop.raw_sales: Close
[0m18:13:37  1 of 1 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.17s]
[0m18:13:37  Finished running node model.jaffle_shop.raw_sales
[0m18:13:37  Using postgres connection "master"
[0m18:13:37  On master: BEGIN
[0m18:13:37  Opening a new connection, currently in state closed
[0m18:13:37  SQL status: BEGIN in 0.0 seconds
[0m18:13:37  On master: COMMIT
[0m18:13:37  Using postgres connection "master"
[0m18:13:37  On master: COMMIT
[0m18:13:37  SQL status: COMMIT in 0.0 seconds
[0m18:13:37  On master: Close
[0m18:13:37  Connection 'master' was properly closed.
[0m18:13:37  Connection 'list_dbtsales' was properly closed.
[0m18:13:37  Connection 'list_dbtsales_public' was properly closed.
[0m18:13:37  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m18:13:37  
[0m18:13:37  Finished running 1 table model in 0 hours 0 minutes and 0.44 seconds (0.44s).
[0m18:13:37  Command end result
[0m18:13:37  
[0m18:13:37  [32mCompleted successfully[0m
[0m18:13:37  
[0m18:13:37  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m18:13:37  Command `dbt run` succeeded at 20:13:37.672211 after 0.75 seconds
[0m18:13:37  Flushing usage events
[0m18:39:53  Running with dbt=1.5.4
[0m18:39:53  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:39:53  Registered adapter: postgres=1.5.4
[0m18:39:53  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:39:53  Partial parsing enabled: 0 files deleted, 1 files added, 2 files changed.
[0m18:39:53  Partial parsing: added file: jaffle_shop://models\integration\int_sales.sql
[0m18:39:53  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:39:53  Partial parsing: updated file: jaffle_shop://models\source\raw_sales.sql
[0m18:39:53  1699: static parser successfully parsed integration\int_sales.sql
[0m18:39:53  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:39:53  1699: static parser successfully parsed source\raw_sales.sql
[0m18:39:53  Found 4 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:39:53  
[0m18:39:53  Acquiring new postgres connection 'master'
[0m18:39:53  Acquiring new postgres connection 'list_dbtsales'
[0m18:39:53  Using postgres connection "list_dbtsales"
[0m18:39:53  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:39:53  Opening a new connection, currently in state init
[0m18:39:53  SQL status: SELECT 5 in 0.0 seconds
[0m18:39:53  On list_dbtsales: Close
[0m18:39:53  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:39:53  Using postgres connection "list_dbtsales_public_stg"
[0m18:39:53  On list_dbtsales_public_stg: BEGIN
[0m18:39:53  Opening a new connection, currently in state init
[0m18:39:53  SQL status: BEGIN in 0.0 seconds
[0m18:39:53  Using postgres connection "list_dbtsales_public_stg"
[0m18:39:53  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:39:53  SQL status: SELECT 0 in 0.0 seconds
[0m18:39:53  On list_dbtsales_public_stg: ROLLBACK
[0m18:39:53  On list_dbtsales_public_stg: Close
[0m18:39:53  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:39:53  Using postgres connection "list_dbtsales_public"
[0m18:39:53  On list_dbtsales_public: BEGIN
[0m18:39:53  Opening a new connection, currently in state closed
[0m18:39:53  SQL status: BEGIN in 0.0 seconds
[0m18:39:53  Using postgres connection "list_dbtsales_public"
[0m18:39:53  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:39:53  SQL status: SELECT 2 in 0.0 seconds
[0m18:39:53  On list_dbtsales_public: ROLLBACK
[0m18:39:53  On list_dbtsales_public: Close
[0m18:39:53  Using postgres connection "master"
[0m18:39:53  On master: BEGIN
[0m18:39:53  Opening a new connection, currently in state init
[0m18:39:53  SQL status: BEGIN in 0.0 seconds
[0m18:39:53  Using postgres connection "master"
[0m18:39:53  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:39:53  SQL status: SELECT 0 in 0.0 seconds
[0m18:39:53  On master: ROLLBACK
[0m18:39:53  Using postgres connection "master"
[0m18:39:53  On master: BEGIN
[0m18:39:53  SQL status: BEGIN in 0.0 seconds
[0m18:39:53  On master: COMMIT
[0m18:39:53  Using postgres connection "master"
[0m18:39:53  On master: COMMIT
[0m18:39:53  SQL status: COMMIT in 0.0 seconds
[0m18:39:53  On master: Close
[0m18:39:53  Concurrency: 1 threads (target='dev')
[0m18:39:53  
[0m18:39:54  Began running node model.jaffle_shop.raw_sales
[0m18:39:54  1 of 1 START sql table model public.raw_sales .................................. [RUN]
[0m18:39:54  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:39:54  Began compiling node model.jaffle_shop.raw_sales
[0m18:39:54  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:39:54  Timing info for model.jaffle_shop.raw_sales (compile): 20:39:54.008503 => 20:39:54.012510
[0m18:39:54  Began executing node model.jaffle_shop.raw_sales
[0m18:39:54  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:39:54  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:54  On model.jaffle_shop.raw_sales: BEGIN
[0m18:39:54  Opening a new connection, currently in state init
[0m18:39:54  SQL status: BEGIN in 0.0 seconds
[0m18:39:54  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:54  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select ordernumber, quantityordered, priceeach, orderlinenumber, sales, orderdate, status
, qtr_id, month_id, year_id, productline, msrp, productcode, customername
, phone, addressline1, addressline2, city, state, postalcode, country
, territory, contactlastname, contactfirstname, dealsize, organisation, day_id
, customerid
, now() as load_timestamp
 from "dbtsales"."public"."stgsales"
  );
  
[0m18:39:54  SQL status: SELECT 2823 in 0.0 seconds
[0m18:39:54  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:54  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:39:54  SQL status: ALTER TABLE in 0.0 seconds
[0m18:39:54  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:54  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:39:54  SQL status: ALTER TABLE in 0.0 seconds
[0m18:39:54  On model.jaffle_shop.raw_sales: COMMIT
[0m18:39:54  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:54  On model.jaffle_shop.raw_sales: COMMIT
[0m18:39:54  SQL status: COMMIT in 0.0 seconds
[0m18:39:54  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:39:54  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:39:54  SQL status: DROP TABLE in 0.0 seconds
[0m18:39:54  Timing info for model.jaffle_shop.raw_sales (execute): 20:39:54.014503 => 20:39:54.179252
[0m18:39:54  On model.jaffle_shop.raw_sales: Close
[0m18:39:54  1 of 1 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.18s]
[0m18:39:54  Finished running node model.jaffle_shop.raw_sales
[0m18:39:54  Using postgres connection "master"
[0m18:39:54  On master: BEGIN
[0m18:39:54  Opening a new connection, currently in state closed
[0m18:39:54  SQL status: BEGIN in 0.0 seconds
[0m18:39:54  On master: COMMIT
[0m18:39:54  Using postgres connection "master"
[0m18:39:54  On master: COMMIT
[0m18:39:54  SQL status: COMMIT in 0.0 seconds
[0m18:39:54  On master: Close
[0m18:39:54  Connection 'master' was properly closed.
[0m18:39:54  Connection 'list_dbtsales' was properly closed.
[0m18:39:54  Connection 'list_dbtsales_public' was properly closed.
[0m18:39:54  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m18:39:54  
[0m18:39:54  Finished running 1 table model in 0 hours 0 minutes and 0.47 seconds (0.47s).
[0m18:39:54  Command end result
[0m18:39:54  
[0m18:39:54  [32mCompleted successfully[0m
[0m18:39:54  
[0m18:39:54  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m18:39:54  Command `dbt run` succeeded at 20:39:54.257647 after 0.85 seconds
[0m18:39:54  Flushing usage events
[0m18:40:25  Running with dbt=1.5.4
[0m18:40:25  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:40:25  Registered adapter: postgres=1.5.4
[0m18:40:25  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:40:25  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:40:25  Partial parsing: updated file: jaffle_shop://models\source\raw_sales.sql
[0m18:40:26  1699: static parser successfully parsed source\raw_sales.sql
[0m18:40:26  Found 4 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:40:26  
[0m18:40:26  Acquiring new postgres connection 'master'
[0m18:40:26  Acquiring new postgres connection 'list_dbtsales'
[0m18:40:26  Using postgres connection "list_dbtsales"
[0m18:40:26  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:40:26  Opening a new connection, currently in state init
[0m18:40:26  SQL status: SELECT 5 in 0.0 seconds
[0m18:40:26  On list_dbtsales: Close
[0m18:40:26  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:40:26  Using postgres connection "list_dbtsales_public"
[0m18:40:26  On list_dbtsales_public: BEGIN
[0m18:40:26  Opening a new connection, currently in state init
[0m18:40:26  SQL status: BEGIN in 0.0 seconds
[0m18:40:26  Using postgres connection "list_dbtsales_public"
[0m18:40:26  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:40:26  SQL status: SELECT 2 in 0.0 seconds
[0m18:40:26  On list_dbtsales_public: ROLLBACK
[0m18:40:26  On list_dbtsales_public: Close
[0m18:40:26  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:40:26  Using postgres connection "list_dbtsales_public_stg"
[0m18:40:26  On list_dbtsales_public_stg: BEGIN
[0m18:40:26  Opening a new connection, currently in state closed
[0m18:40:26  SQL status: BEGIN in 0.0 seconds
[0m18:40:26  Using postgres connection "list_dbtsales_public_stg"
[0m18:40:26  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:40:26  SQL status: SELECT 0 in 0.0 seconds
[0m18:40:26  On list_dbtsales_public_stg: ROLLBACK
[0m18:40:26  On list_dbtsales_public_stg: Close
[0m18:40:26  Using postgres connection "master"
[0m18:40:26  On master: BEGIN
[0m18:40:26  Opening a new connection, currently in state init
[0m18:40:26  SQL status: BEGIN in 0.0 seconds
[0m18:40:26  Using postgres connection "master"
[0m18:40:26  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:40:26  SQL status: SELECT 0 in 0.0 seconds
[0m18:40:26  On master: ROLLBACK
[0m18:40:26  Using postgres connection "master"
[0m18:40:26  On master: BEGIN
[0m18:40:26  SQL status: BEGIN in 0.0 seconds
[0m18:40:26  On master: COMMIT
[0m18:40:26  Using postgres connection "master"
[0m18:40:26  On master: COMMIT
[0m18:40:26  SQL status: COMMIT in 0.0 seconds
[0m18:40:26  On master: Close
[0m18:40:26  Concurrency: 1 threads (target='dev')
[0m18:40:26  
[0m18:40:26  Began running node model.jaffle_shop.raw_sales
[0m18:40:26  1 of 1 START sql table model public.raw_sales .................................. [RUN]
[0m18:40:26  Acquiring new postgres connection 'model.jaffle_shop.raw_sales'
[0m18:40:26  Began compiling node model.jaffle_shop.raw_sales
[0m18:40:26  Writing injected SQL for node "model.jaffle_shop.raw_sales"
[0m18:40:26  Timing info for model.jaffle_shop.raw_sales (compile): 20:40:26.339432 => 20:40:26.346430
[0m18:40:26  Began executing node model.jaffle_shop.raw_sales
[0m18:40:26  Writing runtime sql for node "model.jaffle_shop.raw_sales"
[0m18:40:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:26  On model.jaffle_shop.raw_sales: BEGIN
[0m18:40:26  Opening a new connection, currently in state init
[0m18:40:26  SQL status: BEGIN in 0.0 seconds
[0m18:40:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */

  
    

  create  table "dbtsales"."public"."raw_sales__dbt_tmp"
  
  
    as
  
  (
    select ordernumber, quantityordered, priceeach, orderlinenumber, sales, orderdate, status
, qtr_id, month_id, year_id, productline, msrp, productcode, customername
, phone, addressline1, addressline2, city, state, postalcode, country
, territory, contactlastname, contactfirstname, dealsize, organisation, day_id
, customerid
, now() as dtloaded
 from "dbtsales"."public"."stgsales"
  );
  
[0m18:40:26  SQL status: SELECT 2823 in 0.0 seconds
[0m18:40:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales" rename to "raw_sales__dbt_backup"
[0m18:40:26  SQL status: ALTER TABLE in 0.0 seconds
[0m18:40:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
alter table "dbtsales"."public"."raw_sales__dbt_tmp" rename to "raw_sales"
[0m18:40:26  SQL status: ALTER TABLE in 0.0 seconds
[0m18:40:26  On model.jaffle_shop.raw_sales: COMMIT
[0m18:40:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:26  On model.jaffle_shop.raw_sales: COMMIT
[0m18:40:26  SQL status: COMMIT in 0.0 seconds
[0m18:40:26  Using postgres connection "model.jaffle_shop.raw_sales"
[0m18:40:26  On model.jaffle_shop.raw_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.raw_sales"} */
drop table if exists "dbtsales"."public"."raw_sales__dbt_backup" cascade
[0m18:40:26  SQL status: DROP TABLE in 0.0 seconds
[0m18:40:26  Timing info for model.jaffle_shop.raw_sales (execute): 20:40:26.348444 => 20:40:26.546664
[0m18:40:26  On model.jaffle_shop.raw_sales: Close
[0m18:40:26  1 of 1 OK created sql table model public.raw_sales ............................. [[32mSELECT 2823[0m in 0.21s]
[0m18:40:26  Finished running node model.jaffle_shop.raw_sales
[0m18:40:26  Using postgres connection "master"
[0m18:40:26  On master: BEGIN
[0m18:40:26  Opening a new connection, currently in state closed
[0m18:40:26  SQL status: BEGIN in 0.0 seconds
[0m18:40:26  On master: COMMIT
[0m18:40:26  Using postgres connection "master"
[0m18:40:26  On master: COMMIT
[0m18:40:26  SQL status: COMMIT in 0.0 seconds
[0m18:40:26  On master: Close
[0m18:40:26  Connection 'master' was properly closed.
[0m18:40:26  Connection 'list_dbtsales' was properly closed.
[0m18:40:26  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:40:26  Connection 'model.jaffle_shop.raw_sales' was properly closed.
[0m18:40:26  
[0m18:40:26  Finished running 1 table model in 0 hours 0 minutes and 0.52 seconds (0.52s).
[0m18:40:26  Command end result
[0m18:40:26  
[0m18:40:26  [32mCompleted successfully[0m
[0m18:40:26  
[0m18:40:26  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m18:40:26  Command `dbt run` succeeded at 20:40:26.615778 after 0.92 seconds
[0m18:40:26  Flushing usage events
[0m18:54:26  Running with dbt=1.5.4
[0m18:54:26  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:54:26  Registered adapter: postgres=1.5.4
[0m18:54:26  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:54:26  Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m18:54:26  Partial parsing: updated file: jaffle_shop://models\integration\int_sales.sql
[0m18:54:26  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:54:26  1603: static parser failed on integration\int_sales.sql
[0m18:54:26  Encountered an error:
Compilation Error in model int_sales (models\integration\int_sales.sql)
  expected token ',', got '='
    line 3
      --         materialized='incremental',
[0m18:54:26  Command `dbt run` failed at 20:54:26.681923 after 0.31 seconds
[0m18:54:26  Flushing usage events
[0m18:56:24  Running with dbt=1.5.4
[0m18:56:24  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:56:24  Registered adapter: postgres=1.5.4
[0m18:56:24  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:56:24  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:56:24  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m18:56:25  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:56:25  Found 4 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:56:25  
[0m18:56:25  Acquiring new postgres connection 'master'
[0m18:56:25  Acquiring new postgres connection 'list_dbtsales'
[0m18:56:25  Using postgres connection "list_dbtsales"
[0m18:56:25  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:56:25  Opening a new connection, currently in state init
[0m18:56:25  SQL status: SELECT 5 in 0.0 seconds
[0m18:56:25  On list_dbtsales: Close
[0m18:56:25  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m18:56:25  Using postgres connection "list_dbtsales_public_stg"
[0m18:56:25  On list_dbtsales_public_stg: BEGIN
[0m18:56:25  Opening a new connection, currently in state init
[0m18:56:25  SQL status: BEGIN in 0.0 seconds
[0m18:56:25  Using postgres connection "list_dbtsales_public_stg"
[0m18:56:25  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:56:25  SQL status: SELECT 0 in 0.0 seconds
[0m18:56:25  On list_dbtsales_public_stg: ROLLBACK
[0m18:56:25  On list_dbtsales_public_stg: Close
[0m18:56:25  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m18:56:25  Using postgres connection "list_dbtsales_public"
[0m18:56:25  On list_dbtsales_public: BEGIN
[0m18:56:25  Opening a new connection, currently in state closed
[0m18:56:25  SQL status: BEGIN in 0.0 seconds
[0m18:56:25  Using postgres connection "list_dbtsales_public"
[0m18:56:25  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:56:25  SQL status: SELECT 2 in 0.0 seconds
[0m18:56:25  On list_dbtsales_public: ROLLBACK
[0m18:56:25  On list_dbtsales_public: Close
[0m18:56:25  Using postgres connection "master"
[0m18:56:25  On master: BEGIN
[0m18:56:25  Opening a new connection, currently in state init
[0m18:56:25  SQL status: BEGIN in 0.0 seconds
[0m18:56:25  Using postgres connection "master"
[0m18:56:25  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:56:25  SQL status: SELECT 0 in 0.0 seconds
[0m18:56:25  On master: ROLLBACK
[0m18:56:25  Using postgres connection "master"
[0m18:56:25  On master: BEGIN
[0m18:56:25  SQL status: BEGIN in 0.0 seconds
[0m18:56:25  On master: COMMIT
[0m18:56:25  Using postgres connection "master"
[0m18:56:25  On master: COMMIT
[0m18:56:25  SQL status: COMMIT in 0.0 seconds
[0m18:56:25  On master: Close
[0m18:56:25  Concurrency: 1 threads (target='dev')
[0m18:56:25  
[0m18:56:25  Began running node model.jaffle_shop.stg_customers
[0m18:56:25  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m18:56:25  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m18:56:25  Began compiling node model.jaffle_shop.stg_customers
[0m18:56:25  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:56:25  Timing info for model.jaffle_shop.stg_customers (compile): 20:56:25.297720 => 20:56:25.301728
[0m18:56:25  Began executing node model.jaffle_shop.stg_customers
[0m18:56:25  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:56:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:25  On model.jaffle_shop.stg_customers: BEGIN
[0m18:56:25  Opening a new connection, currently in state init
[0m18:56:25  SQL status: BEGIN in 0.0 seconds
[0m18:56:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select customerid,
        customername,
        contactfirstname,
        contactlastname
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        customerid as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname
    from source

)

select *
from source
  );
[0m18:56:25  SQL status: CREATE VIEW in 0.0 seconds
[0m18:56:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:56:25  SQL status: ALTER TABLE in 0.0 seconds
[0m18:56:25  On model.jaffle_shop.stg_customers: COMMIT
[0m18:56:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:25  On model.jaffle_shop.stg_customers: COMMIT
[0m18:56:25  SQL status: COMMIT in 0.0 seconds
[0m18:56:25  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:56:25  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:56:25  SQL status: DROP VIEW in 0.0 seconds
[0m18:56:25  Timing info for model.jaffle_shop.stg_customers (execute): 20:56:25.304735 => 20:56:25.421318
[0m18:56:25  On model.jaffle_shop.stg_customers: Close
[0m18:56:25  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.13s]
[0m18:56:25  Finished running node model.jaffle_shop.stg_customers
[0m18:56:25  Using postgres connection "master"
[0m18:56:25  On master: BEGIN
[0m18:56:25  Opening a new connection, currently in state closed
[0m18:56:25  SQL status: BEGIN in 0.0 seconds
[0m18:56:25  On master: COMMIT
[0m18:56:25  Using postgres connection "master"
[0m18:56:25  On master: COMMIT
[0m18:56:25  SQL status: COMMIT in 0.0 seconds
[0m18:56:25  On master: Close
[0m18:56:25  Connection 'master' was properly closed.
[0m18:56:25  Connection 'list_dbtsales' was properly closed.
[0m18:56:25  Connection 'list_dbtsales_public' was properly closed.
[0m18:56:25  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:56:25  
[0m18:56:25  Finished running 1 view model in 0 hours 0 minutes and 0.38 seconds (0.38s).
[0m18:56:25  Command end result
[0m18:56:25  
[0m18:56:25  [32mCompleted successfully[0m
[0m18:56:25  
[0m18:56:25  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m18:56:25  Command `dbt run` succeeded at 20:56:25.477979 after 0.75 seconds
[0m18:56:25  Flushing usage events
[0m18:58:08  Running with dbt=1.5.4
[0m18:58:08  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m18:58:08  Registered adapter: postgres=1.5.4
[0m18:58:08  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m18:58:08  Unable to do partial parsing because a project config has changed
[0m18:58:10  1699: static parser successfully parsed customers.sql
[0m18:58:10  1699: static parser successfully parsed integration\int_sales.sql
[0m18:58:10  1699: static parser successfully parsed source\raw_sales.sql
[0m18:58:10  1699: static parser successfully parsed staging\stg_customers.sql
[0m18:58:10  Found 4 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m18:58:10  
[0m18:58:10  Acquiring new postgres connection 'master'
[0m18:58:10  Acquiring new postgres connection 'list_dbtsales'
[0m18:58:10  Using postgres connection "list_dbtsales"
[0m18:58:10  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m18:58:10  Opening a new connection, currently in state init
[0m18:58:10  SQL status: SELECT 5 in 0.0 seconds
[0m18:58:10  On list_dbtsales: Close
[0m18:58:10  Acquiring new postgres connection 'list_dbtsales_public'
[0m18:58:10  Using postgres connection "list_dbtsales_public"
[0m18:58:10  On list_dbtsales_public: BEGIN
[0m18:58:10  Opening a new connection, currently in state init
[0m18:58:10  SQL status: BEGIN in 0.0 seconds
[0m18:58:10  Using postgres connection "list_dbtsales_public"
[0m18:58:10  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m18:58:10  SQL status: SELECT 2 in 0.0 seconds
[0m18:58:10  On list_dbtsales_public: ROLLBACK
[0m18:58:10  On list_dbtsales_public: Close
[0m18:58:10  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m18:58:10  Using postgres connection "list_dbtsales_public_stg"
[0m18:58:10  On list_dbtsales_public_stg: BEGIN
[0m18:58:10  Opening a new connection, currently in state closed
[0m18:58:10  SQL status: BEGIN in 0.0 seconds
[0m18:58:10  Using postgres connection "list_dbtsales_public_stg"
[0m18:58:10  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m18:58:10  SQL status: SELECT 1 in 0.0 seconds
[0m18:58:10  On list_dbtsales_public_stg: ROLLBACK
[0m18:58:10  On list_dbtsales_public_stg: Close
[0m18:58:10  Using postgres connection "master"
[0m18:58:10  On master: BEGIN
[0m18:58:10  Opening a new connection, currently in state init
[0m18:58:10  SQL status: BEGIN in 0.0 seconds
[0m18:58:10  Using postgres connection "master"
[0m18:58:10  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m18:58:10  SQL status: SELECT 1 in 0.0 seconds
[0m18:58:10  On master: ROLLBACK
[0m18:58:10  Using postgres connection "master"
[0m18:58:10  On master: BEGIN
[0m18:58:10  SQL status: BEGIN in 0.0 seconds
[0m18:58:10  On master: COMMIT
[0m18:58:10  Using postgres connection "master"
[0m18:58:10  On master: COMMIT
[0m18:58:10  SQL status: COMMIT in 0.0 seconds
[0m18:58:10  On master: Close
[0m18:58:10  Concurrency: 1 threads (target='dev')
[0m18:58:10  
[0m18:58:10  Began running node model.jaffle_shop.stg_customers
[0m18:58:10  1 of 1 START sql table model public_stg.stg_customers .......................... [RUN]
[0m18:58:10  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m18:58:10  Began compiling node model.jaffle_shop.stg_customers
[0m18:58:10  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m18:58:10  Timing info for model.jaffle_shop.stg_customers (compile): 20:58:10.588320 => 20:58:10.594304
[0m18:58:10  Began executing node model.jaffle_shop.stg_customers
[0m18:58:10  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m18:58:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:58:10  On model.jaffle_shop.stg_customers: BEGIN
[0m18:58:10  Opening a new connection, currently in state init
[0m18:58:10  SQL status: BEGIN in 0.0 seconds
[0m18:58:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:58:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  
    

  create  table "dbtsales"."public_stg"."stg_customers__dbt_tmp"
  
  
    as
  
  (
    with source as (

    select customerid,
        customername,
        contactfirstname,
        contactlastname
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        customerid as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname
    from source

)

select *
from source
  );
  
[0m18:58:10  SQL status: SELECT 2823 in 0.0 seconds
[0m18:58:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:58:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m18:58:10  SQL status: ALTER TABLE in 0.0 seconds
[0m18:58:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:58:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m18:58:10  SQL status: ALTER TABLE in 0.0 seconds
[0m18:58:10  On model.jaffle_shop.stg_customers: COMMIT
[0m18:58:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:58:10  On model.jaffle_shop.stg_customers: COMMIT
[0m18:58:10  SQL status: COMMIT in 0.0 seconds
[0m18:58:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m18:58:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m18:58:10  SQL status: DROP VIEW in 0.0 seconds
[0m18:58:10  Timing info for model.jaffle_shop.stg_customers (execute): 20:58:10.597369 => 20:58:10.766223
[0m18:58:10  On model.jaffle_shop.stg_customers: Close
[0m18:58:10  1 of 1 OK created sql table model public_stg.stg_customers ..................... [[32mSELECT 2823[0m in 0.18s]
[0m18:58:10  Finished running node model.jaffle_shop.stg_customers
[0m18:58:10  Using postgres connection "master"
[0m18:58:10  On master: BEGIN
[0m18:58:10  Opening a new connection, currently in state closed
[0m18:58:10  SQL status: BEGIN in 0.0 seconds
[0m18:58:10  On master: COMMIT
[0m18:58:10  Using postgres connection "master"
[0m18:58:10  On master: COMMIT
[0m18:58:10  SQL status: COMMIT in 0.0 seconds
[0m18:58:10  On master: Close
[0m18:58:10  Connection 'master' was properly closed.
[0m18:58:10  Connection 'list_dbtsales' was properly closed.
[0m18:58:10  Connection 'list_dbtsales_public_stg' was properly closed.
[0m18:58:10  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m18:58:10  
[0m18:58:10  Finished running 1 table model in 0 hours 0 minutes and 0.50 seconds (0.50s).
[0m18:58:10  Command end result
[0m18:58:10  
[0m18:58:10  [32mCompleted successfully[0m
[0m18:58:10  
[0m18:58:10  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m18:58:10  Command `dbt run` succeeded at 20:58:10.822622 after 2.49 seconds
[0m18:58:10  Flushing usage events
[0m19:01:22  Running with dbt=1.5.4
[0m19:01:22  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:01:22  Registered adapter: postgres=1.5.4
[0m19:01:22  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:01:22  Unable to do partial parsing because a project config has changed
[0m19:01:24  1699: static parser successfully parsed customers.sql
[0m19:01:24  1699: static parser successfully parsed integration\int_sales.sql
[0m19:01:24  1699: static parser successfully parsed source\raw_sales.sql
[0m19:01:24  1699: static parser successfully parsed staging\stg_customers.sql
[0m19:01:24  Found 4 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:01:24  
[0m19:01:24  Acquiring new postgres connection 'master'
[0m19:01:24  Acquiring new postgres connection 'list_dbtsales'
[0m19:01:24  Using postgres connection "list_dbtsales"
[0m19:01:24  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:01:24  Opening a new connection, currently in state init
[0m19:01:24  SQL status: SELECT 5 in 0.0 seconds
[0m19:01:24  On list_dbtsales: Close
[0m19:01:24  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m19:01:24  Using postgres connection "list_dbtsales_public_stg"
[0m19:01:24  On list_dbtsales_public_stg: BEGIN
[0m19:01:24  Opening a new connection, currently in state init
[0m19:01:24  SQL status: BEGIN in 0.0 seconds
[0m19:01:24  Using postgres connection "list_dbtsales_public_stg"
[0m19:01:24  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:01:24  SQL status: SELECT 1 in 0.0 seconds
[0m19:01:24  On list_dbtsales_public_stg: ROLLBACK
[0m19:01:24  On list_dbtsales_public_stg: Close
[0m19:01:24  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m19:01:24  Using postgres connection "list_dbtsales_public"
[0m19:01:24  On list_dbtsales_public: BEGIN
[0m19:01:24  Opening a new connection, currently in state closed
[0m19:01:24  SQL status: BEGIN in 0.0 seconds
[0m19:01:24  Using postgres connection "list_dbtsales_public"
[0m19:01:24  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:01:24  SQL status: SELECT 2 in 0.0 seconds
[0m19:01:24  On list_dbtsales_public: ROLLBACK
[0m19:01:24  On list_dbtsales_public: Close
[0m19:01:24  Using postgres connection "master"
[0m19:01:24  On master: BEGIN
[0m19:01:24  Opening a new connection, currently in state init
[0m19:01:24  SQL status: BEGIN in 0.0 seconds
[0m19:01:24  Using postgres connection "master"
[0m19:01:24  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:01:24  SQL status: SELECT 0 in 0.0 seconds
[0m19:01:24  On master: ROLLBACK
[0m19:01:24  Using postgres connection "master"
[0m19:01:24  On master: BEGIN
[0m19:01:24  SQL status: BEGIN in 0.0 seconds
[0m19:01:24  On master: COMMIT
[0m19:01:24  Using postgres connection "master"
[0m19:01:24  On master: COMMIT
[0m19:01:24  SQL status: COMMIT in 0.0 seconds
[0m19:01:24  On master: Close
[0m19:01:24  Concurrency: 1 threads (target='dev')
[0m19:01:24  
[0m19:01:24  Began running node model.jaffle_shop.stg_customers
[0m19:01:24  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m19:01:24  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m19:01:24  Began compiling node model.jaffle_shop.stg_customers
[0m19:01:24  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m19:01:24  Timing info for model.jaffle_shop.stg_customers (compile): 21:01:24.453753 => 21:01:24.457725
[0m19:01:24  Began executing node model.jaffle_shop.stg_customers
[0m19:01:24  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m19:01:24  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:24  On model.jaffle_shop.stg_customers: BEGIN
[0m19:01:24  Opening a new connection, currently in state init
[0m19:01:24  SQL status: BEGIN in 0.0 seconds
[0m19:01:24  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:24  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select customerid,
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select
        customerid as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select *
from source
  );
[0m19:01:24  SQL status: CREATE VIEW in 0.0 seconds
[0m19:01:24  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:24  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m19:01:24  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:24  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:24  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m19:01:24  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:24  On model.jaffle_shop.stg_customers: COMMIT
[0m19:01:24  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:24  On model.jaffle_shop.stg_customers: COMMIT
[0m19:01:24  SQL status: COMMIT in 0.0 seconds
[0m19:01:24  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:24  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop table if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m19:01:24  SQL status: DROP TABLE in 0.0 seconds
[0m19:01:24  Timing info for model.jaffle_shop.stg_customers (execute): 21:01:24.459725 => 21:01:24.593567
[0m19:01:24  On model.jaffle_shop.stg_customers: Close
[0m19:01:24  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.15s]
[0m19:01:24  Finished running node model.jaffle_shop.stg_customers
[0m19:01:24  Using postgres connection "master"
[0m19:01:24  On master: BEGIN
[0m19:01:24  Opening a new connection, currently in state closed
[0m19:01:24  SQL status: BEGIN in 0.0 seconds
[0m19:01:24  On master: COMMIT
[0m19:01:24  Using postgres connection "master"
[0m19:01:24  On master: COMMIT
[0m19:01:24  SQL status: COMMIT in 0.0 seconds
[0m19:01:24  On master: Close
[0m19:01:24  Connection 'master' was properly closed.
[0m19:01:24  Connection 'list_dbtsales' was properly closed.
[0m19:01:24  Connection 'list_dbtsales_public' was properly closed.
[0m19:01:24  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m19:01:24  
[0m19:01:24  Finished running 1 view model in 0 hours 0 minutes and 0.40 seconds (0.40s).
[0m19:01:24  Command end result
[0m19:01:24  
[0m19:01:24  [32mCompleted successfully[0m
[0m19:01:24  
[0m19:01:24  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m19:01:24  Command `dbt run` succeeded at 21:01:24.661295 after 2.21 seconds
[0m19:01:24  Flushing usage events
[0m19:01:47  Running with dbt=1.5.4
[0m19:01:47  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:01:48  Registered adapter: postgres=1.5.4
[0m19:01:48  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:01:48  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:01:48  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m19:01:48  1699: static parser successfully parsed staging\stg_customers.sql
[0m19:01:48  Found 4 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:01:48  
[0m19:01:48  Acquiring new postgres connection 'master'
[0m19:01:48  Acquiring new postgres connection 'list_dbtsales'
[0m19:01:48  Using postgres connection "list_dbtsales"
[0m19:01:48  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:01:48  Opening a new connection, currently in state init
[0m19:01:48  SQL status: SELECT 5 in 0.0 seconds
[0m19:01:48  On list_dbtsales: Close
[0m19:01:48  Acquiring new postgres connection 'list_dbtsales_public'
[0m19:01:48  Using postgres connection "list_dbtsales_public"
[0m19:01:48  On list_dbtsales_public: BEGIN
[0m19:01:48  Opening a new connection, currently in state init
[0m19:01:48  SQL status: BEGIN in 0.0 seconds
[0m19:01:48  Using postgres connection "list_dbtsales_public"
[0m19:01:48  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:01:48  SQL status: SELECT 2 in 0.0 seconds
[0m19:01:48  On list_dbtsales_public: ROLLBACK
[0m19:01:48  On list_dbtsales_public: Close
[0m19:01:48  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m19:01:48  Using postgres connection "list_dbtsales_public_stg"
[0m19:01:48  On list_dbtsales_public_stg: BEGIN
[0m19:01:48  Opening a new connection, currently in state closed
[0m19:01:48  SQL status: BEGIN in 0.0 seconds
[0m19:01:48  Using postgres connection "list_dbtsales_public_stg"
[0m19:01:48  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:01:48  SQL status: SELECT 1 in 0.0 seconds
[0m19:01:48  On list_dbtsales_public_stg: ROLLBACK
[0m19:01:48  On list_dbtsales_public_stg: Close
[0m19:01:48  Using postgres connection "master"
[0m19:01:48  On master: BEGIN
[0m19:01:48  Opening a new connection, currently in state init
[0m19:01:48  SQL status: BEGIN in 0.0 seconds
[0m19:01:48  Using postgres connection "master"
[0m19:01:48  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:01:48  SQL status: SELECT 1 in 0.0 seconds
[0m19:01:48  On master: ROLLBACK
[0m19:01:48  Using postgres connection "master"
[0m19:01:48  On master: BEGIN
[0m19:01:48  SQL status: BEGIN in 0.0 seconds
[0m19:01:48  On master: COMMIT
[0m19:01:48  Using postgres connection "master"
[0m19:01:48  On master: COMMIT
[0m19:01:48  SQL status: COMMIT in 0.0 seconds
[0m19:01:48  On master: Close
[0m19:01:48  Concurrency: 1 threads (target='dev')
[0m19:01:48  
[0m19:01:48  Began running node model.jaffle_shop.stg_customers
[0m19:01:48  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m19:01:48  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m19:01:48  Began compiling node model.jaffle_shop.stg_customers
[0m19:01:48  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m19:01:48  Timing info for model.jaffle_shop.stg_customers (compile): 21:01:48.435413 => 21:01:48.439452
[0m19:01:48  Began executing node model.jaffle_shop.stg_customers
[0m19:01:48  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m19:01:48  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:48  On model.jaffle_shop.stg_customers: BEGIN
[0m19:01:48  Opening a new connection, currently in state init
[0m19:01:48  SQL status: BEGIN in 0.0 seconds
[0m19:01:48  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:48  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select customerid,
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select distinct
        customerid as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select *
from source
  );
[0m19:01:48  SQL status: CREATE VIEW in 0.0 seconds
[0m19:01:48  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:48  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m19:01:48  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:48  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:48  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m19:01:48  SQL status: ALTER TABLE in 0.0 seconds
[0m19:01:48  On model.jaffle_shop.stg_customers: COMMIT
[0m19:01:48  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:48  On model.jaffle_shop.stg_customers: COMMIT
[0m19:01:48  SQL status: COMMIT in 0.0 seconds
[0m19:01:48  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:01:48  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m19:01:48  SQL status: DROP VIEW in 0.0 seconds
[0m19:01:48  Timing info for model.jaffle_shop.stg_customers (execute): 21:01:48.441423 => 21:01:48.573040
[0m19:01:48  On model.jaffle_shop.stg_customers: Close
[0m19:01:48  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.14s]
[0m19:01:48  Finished running node model.jaffle_shop.stg_customers
[0m19:01:48  Using postgres connection "master"
[0m19:01:48  On master: BEGIN
[0m19:01:48  Opening a new connection, currently in state closed
[0m19:01:48  SQL status: BEGIN in 0.0 seconds
[0m19:01:48  On master: COMMIT
[0m19:01:48  Using postgres connection "master"
[0m19:01:48  On master: COMMIT
[0m19:01:48  SQL status: COMMIT in 0.0 seconds
[0m19:01:48  On master: Close
[0m19:01:48  Connection 'master' was properly closed.
[0m19:01:48  Connection 'list_dbtsales' was properly closed.
[0m19:01:48  Connection 'list_dbtsales_public_stg' was properly closed.
[0m19:01:48  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m19:01:48  
[0m19:01:48  Finished running 1 view model in 0 hours 0 minutes and 0.38 seconds (0.38s).
[0m19:01:48  Command end result
[0m19:01:48  
[0m19:01:48  [32mCompleted successfully[0m
[0m19:01:48  
[0m19:01:48  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m19:01:48  Command `dbt run` succeeded at 21:01:48.630100 after 0.73 seconds
[0m19:01:48  Flushing usage events
[0m19:23:16  Running with dbt=1.5.4
[0m19:23:16  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:23:16  Registered adapter: postgres=1.5.4
[0m19:23:16  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:23:16  Partial parsing enabled: 0 files deleted, 1 files added, 0 files changed.
[0m19:23:16  Partial parsing: added file: jaffle_shop://models\integration\int_customers.sql
[0m19:23:16  1603: static parser failed on integration\int_customers.sql
[0m19:23:16  1602: parser fallback to jinja rendering on integration\int_customers.sql
[0m19:23:16  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:23:16  
[0m19:23:16  Acquiring new postgres connection 'master'
[0m19:23:16  Acquiring new postgres connection 'list_dbtsales'
[0m19:23:16  Using postgres connection "list_dbtsales"
[0m19:23:16  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:23:16  Opening a new connection, currently in state init
[0m19:23:16  SQL status: SELECT 5 in 0.0 seconds
[0m19:23:16  On list_dbtsales: Close
[0m19:23:16  Acquiring new postgres connection 'list_dbtsales_public'
[0m19:23:16  Using postgres connection "list_dbtsales_public"
[0m19:23:16  On list_dbtsales_public: BEGIN
[0m19:23:16  Opening a new connection, currently in state init
[0m19:23:16  SQL status: BEGIN in 0.0 seconds
[0m19:23:16  Using postgres connection "list_dbtsales_public"
[0m19:23:16  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:23:16  SQL status: SELECT 2 in 0.0 seconds
[0m19:23:16  On list_dbtsales_public: ROLLBACK
[0m19:23:16  On list_dbtsales_public: Close
[0m19:23:16  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m19:23:16  Using postgres connection "list_dbtsales_public_stg"
[0m19:23:16  On list_dbtsales_public_stg: BEGIN
[0m19:23:16  Opening a new connection, currently in state closed
[0m19:23:16  SQL status: BEGIN in 0.0 seconds
[0m19:23:16  Using postgres connection "list_dbtsales_public_stg"
[0m19:23:16  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:23:16  SQL status: SELECT 1 in 0.0 seconds
[0m19:23:16  On list_dbtsales_public_stg: ROLLBACK
[0m19:23:16  On list_dbtsales_public_stg: Close
[0m19:23:16  Using postgres connection "master"
[0m19:23:16  On master: BEGIN
[0m19:23:16  Opening a new connection, currently in state init
[0m19:23:16  SQL status: BEGIN in 0.0 seconds
[0m19:23:16  Using postgres connection "master"
[0m19:23:16  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:23:16  SQL status: SELECT 1 in 0.0 seconds
[0m19:23:16  On master: ROLLBACK
[0m19:23:16  Using postgres connection "master"
[0m19:23:16  On master: BEGIN
[0m19:23:16  SQL status: BEGIN in 0.0 seconds
[0m19:23:16  On master: COMMIT
[0m19:23:16  Using postgres connection "master"
[0m19:23:16  On master: COMMIT
[0m19:23:16  SQL status: COMMIT in 0.0 seconds
[0m19:23:16  On master: Close
[0m19:23:16  Concurrency: 1 threads (target='dev')
[0m19:23:16  
[0m19:23:16  Began running node model.jaffle_shop.stg_customers
[0m19:23:16  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m19:23:16  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m19:23:16  Began compiling node model.jaffle_shop.stg_customers
[0m19:23:16  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m19:23:16  Timing info for model.jaffle_shop.stg_customers (compile): 21:23:16.841306 => 21:23:16.846064
[0m19:23:16  Began executing node model.jaffle_shop.stg_customers
[0m19:23:16  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m19:23:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:23:16  On model.jaffle_shop.stg_customers: BEGIN
[0m19:23:16  Opening a new connection, currently in state init
[0m19:23:16  SQL status: BEGIN in 0.0 seconds
[0m19:23:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:23:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select customerid,
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select distinct
        customerid as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select *
from source
  );
[0m19:23:16  SQL status: CREATE VIEW in 0.0 seconds
[0m19:23:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:23:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m19:23:16  SQL status: ALTER TABLE in 0.0 seconds
[0m19:23:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:23:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m19:23:16  SQL status: ALTER TABLE in 0.0 seconds
[0m19:23:16  On model.jaffle_shop.stg_customers: COMMIT
[0m19:23:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:23:16  On model.jaffle_shop.stg_customers: COMMIT
[0m19:23:16  SQL status: COMMIT in 0.0 seconds
[0m19:23:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m19:23:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m19:23:16  SQL status: DROP VIEW in 0.0 seconds
[0m19:23:16  Timing info for model.jaffle_shop.stg_customers (execute): 21:23:16.848686 => 21:23:16.988365
[0m19:23:16  On model.jaffle_shop.stg_customers: Close
[0m19:23:16  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.15s]
[0m19:23:16  Finished running node model.jaffle_shop.stg_customers
[0m19:23:16  Using postgres connection "master"
[0m19:23:16  On master: BEGIN
[0m19:23:16  Opening a new connection, currently in state closed
[0m19:23:17  SQL status: BEGIN in 0.0 seconds
[0m19:23:17  On master: COMMIT
[0m19:23:17  Using postgres connection "master"
[0m19:23:17  On master: COMMIT
[0m19:23:17  SQL status: COMMIT in 0.0 seconds
[0m19:23:17  On master: Close
[0m19:23:17  Connection 'master' was properly closed.
[0m19:23:17  Connection 'list_dbtsales' was properly closed.
[0m19:23:17  Connection 'list_dbtsales_public_stg' was properly closed.
[0m19:23:17  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m19:23:17  
[0m19:23:17  Finished running 1 view model in 0 hours 0 minutes and 0.42 seconds (0.42s).
[0m19:23:17  Command end result
[0m19:23:17  
[0m19:23:17  [32mCompleted successfully[0m
[0m19:23:17  
[0m19:23:17  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m19:23:17  Command `dbt run` succeeded at 21:23:17.046875 after 0.78 seconds
[0m19:23:17  Flushing usage events
[0m19:23:27  Running with dbt=1.5.4
[0m19:23:27  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:23:27  Registered adapter: postgres=1.5.4
[0m19:23:27  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:23:27  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m19:23:27  Partial parsing enabled, no changes found, skipping parsing
[0m19:23:27  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:23:27  
[0m19:23:27  Acquiring new postgres connection 'master'
[0m19:23:27  Acquiring new postgres connection 'list_dbtsales'
[0m19:23:27  Using postgres connection "list_dbtsales"
[0m19:23:27  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:23:27  Opening a new connection, currently in state init
[0m19:23:27  SQL status: SELECT 5 in 0.0 seconds
[0m19:23:27  On list_dbtsales: Close
[0m19:23:27  Acquiring new postgres connection 'list_dbtsales_public'
[0m19:23:27  Using postgres connection "list_dbtsales_public"
[0m19:23:27  On list_dbtsales_public: BEGIN
[0m19:23:27  Opening a new connection, currently in state init
[0m19:23:27  SQL status: BEGIN in 0.0 seconds
[0m19:23:27  Using postgres connection "list_dbtsales_public"
[0m19:23:27  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:23:27  SQL status: SELECT 2 in 0.0 seconds
[0m19:23:27  On list_dbtsales_public: ROLLBACK
[0m19:23:27  On list_dbtsales_public: Close
[0m19:23:27  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m19:23:27  Using postgres connection "list_dbtsales_public_stg"
[0m19:23:27  On list_dbtsales_public_stg: BEGIN
[0m19:23:27  Opening a new connection, currently in state closed
[0m19:23:27  SQL status: BEGIN in 0.0 seconds
[0m19:23:27  Using postgres connection "list_dbtsales_public_stg"
[0m19:23:27  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:23:27  SQL status: SELECT 1 in 0.0 seconds
[0m19:23:27  On list_dbtsales_public_stg: ROLLBACK
[0m19:23:27  On list_dbtsales_public_stg: Close
[0m19:23:27  Using postgres connection "master"
[0m19:23:27  On master: BEGIN
[0m19:23:27  Opening a new connection, currently in state init
[0m19:23:27  SQL status: BEGIN in 0.0 seconds
[0m19:23:27  Using postgres connection "master"
[0m19:23:27  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:23:27  SQL status: SELECT 1 in 0.0 seconds
[0m19:23:27  On master: ROLLBACK
[0m19:23:27  Using postgres connection "master"
[0m19:23:27  On master: BEGIN
[0m19:23:27  SQL status: BEGIN in 0.0 seconds
[0m19:23:27  On master: COMMIT
[0m19:23:27  Using postgres connection "master"
[0m19:23:27  On master: COMMIT
[0m19:23:27  SQL status: COMMIT in 0.0 seconds
[0m19:23:27  On master: Close
[0m19:23:27  Concurrency: 1 threads (target='dev')
[0m19:23:27  
[0m19:23:27  Began running node model.jaffle_shop.int_customers
[0m19:23:27  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m19:23:27  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m19:23:27  Began compiling node model.jaffle_shop.int_customers
[0m19:23:27  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m19:23:27  Timing info for model.jaffle_shop.int_customers (compile): 21:23:27.743213 => 21:23:27.753241
[0m19:23:27  Began executing node model.jaffle_shop.int_customers
[0m19:23:27  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m19:23:27  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:23:27  On model.jaffle_shop.int_customers: BEGIN
[0m19:23:27  Opening a new connection, currently in state init
[0m19:23:27  SQL status: BEGIN in 0.0 seconds
[0m19:23:27  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:23:27  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        max(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        now() as dtupdated,
        null as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname
        null as dtupdated,
        now() as dtinserted,
        dtloaded

    FROM using_clause

    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m19:23:27  Postgres adapter: Postgres error: syntax error at or near "as"
LINE 57:         null as dtupdated,
                      ^

[0m19:23:27  On model.jaffle_shop.int_customers: ROLLBACK
[0m19:23:27  Timing info for model.jaffle_shop.int_customers (execute): 21:23:27.755244 => 21:23:27.857999
[0m19:23:27  On model.jaffle_shop.int_customers: Close
[0m19:23:27  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "as"
  LINE 57:         null as dtupdated,
                        ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:23:27  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.12s]
[0m19:23:27  Finished running node model.jaffle_shop.int_customers
[0m19:23:27  Began running node model.jaffle_shop.int_sales
[0m19:23:27  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m19:23:27  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m19:23:27  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m19:23:27  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m19:23:27  CANCEL query model.jaffle_shop.int_customers ................................... [[31mCANCEL[0m]
[0m19:23:27  Began compiling node model.jaffle_shop.int_sales
[0m19:23:27  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m19:23:27  Timing info for model.jaffle_shop.int_sales (compile): 21:23:27.875513 => 21:23:27.880512
[0m19:23:27  Began executing node model.jaffle_shop.int_sales
[0m19:23:27  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m19:23:27  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:23:27  On model.jaffle_shop.int_sales: BEGIN
[0m19:23:27  Opening a new connection, currently in state closed
[0m19:23:27  SQL status: BEGIN in 0.0 seconds
[0m19:23:27  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:23:27  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m19:23:27  SQL status: SELECT 2823 in 0.0 seconds
[0m19:23:27  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:23:27  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m19:23:27  SQL status: ALTER TABLE in 0.0 seconds
[0m19:23:27  On model.jaffle_shop.int_sales: COMMIT
[0m19:23:27  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:23:27  On model.jaffle_shop.int_sales: COMMIT
[0m19:23:27  SQL status: COMMIT in 0.0 seconds
[0m19:23:27  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:23:27  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m19:23:27  SQL status: DROP TABLE in 0.0 seconds
[0m19:23:27  Timing info for model.jaffle_shop.int_sales (execute): 21:23:27.884534 => 21:23:27.997805
[0m19:23:28  On model.jaffle_shop.int_sales: Close
[0m19:23:28  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.13s]
[0m19:23:28  Finished running node model.jaffle_shop.int_sales
[0m19:23:28  
[0m19:23:28  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m19:23:28    syntax error at or near "as"
[0m19:23:28    LINE 57:         null as dtupdated,
[0m19:23:28                          ^
[0m19:23:28    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:23:28  Connection 'master' was properly closed.
[0m19:23:28  Connection 'list_dbtsales' was properly closed.
[0m19:23:28  Connection 'list_dbtsales_public_stg' was properly closed.
[0m19:23:28  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m19:23:28  
[0m19:23:28  Finished running 1 incremental model in 0 hours 0 minutes and 0.49 seconds (0.49s).
[0m19:23:28  Encountered an error:
FailFast Error in model int_customers (models\integration\int_customers.sql)
  Failing early due to test failure or runtime error
[0m19:23:28  Command `dbt run` failed at 21:23:28.014742 after 0.76 seconds
[0m19:23:28  Flushing usage events
[0m19:24:15  Running with dbt=1.5.4
[0m19:24:15  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:24:15  Registered adapter: postgres=1.5.4
[0m19:24:15  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:24:15  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:24:15  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m19:24:15  1603: static parser failed on integration\int_customers.sql
[0m19:24:15  1602: parser fallback to jinja rendering on integration\int_customers.sql
[0m19:24:15  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:24:15  
[0m19:24:15  Acquiring new postgres connection 'master'
[0m19:24:15  Acquiring new postgres connection 'list_dbtsales'
[0m19:24:15  Using postgres connection "list_dbtsales"
[0m19:24:15  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:24:15  Opening a new connection, currently in state init
[0m19:24:15  SQL status: SELECT 5 in 0.0 seconds
[0m19:24:15  On list_dbtsales: Close
[0m19:24:15  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m19:24:15  Using postgres connection "list_dbtsales_public_stg"
[0m19:24:15  On list_dbtsales_public_stg: BEGIN
[0m19:24:15  Opening a new connection, currently in state init
[0m19:24:15  SQL status: BEGIN in 0.0 seconds
[0m19:24:15  Using postgres connection "list_dbtsales_public_stg"
[0m19:24:15  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:24:15  SQL status: SELECT 1 in 0.0 seconds
[0m19:24:15  On list_dbtsales_public_stg: ROLLBACK
[0m19:24:15  On list_dbtsales_public_stg: Close
[0m19:24:15  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m19:24:15  Using postgres connection "list_dbtsales_public"
[0m19:24:15  On list_dbtsales_public: BEGIN
[0m19:24:15  Opening a new connection, currently in state closed
[0m19:24:15  SQL status: BEGIN in 0.0 seconds
[0m19:24:15  Using postgres connection "list_dbtsales_public"
[0m19:24:15  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:24:15  SQL status: SELECT 3 in 0.0 seconds
[0m19:24:15  On list_dbtsales_public: ROLLBACK
[0m19:24:15  On list_dbtsales_public: Close
[0m19:24:15  Using postgres connection "master"
[0m19:24:15  On master: BEGIN
[0m19:24:15  Opening a new connection, currently in state init
[0m19:24:15  SQL status: BEGIN in 0.0 seconds
[0m19:24:15  Using postgres connection "master"
[0m19:24:15  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:24:15  SQL status: SELECT 1 in 0.0 seconds
[0m19:24:15  On master: ROLLBACK
[0m19:24:15  Using postgres connection "master"
[0m19:24:15  On master: BEGIN
[0m19:24:15  SQL status: BEGIN in 0.0 seconds
[0m19:24:15  On master: COMMIT
[0m19:24:15  Using postgres connection "master"
[0m19:24:15  On master: COMMIT
[0m19:24:15  SQL status: COMMIT in 0.0 seconds
[0m19:24:15  On master: Close
[0m19:24:15  Concurrency: 1 threads (target='dev')
[0m19:24:15  
[0m19:24:15  Began running node model.jaffle_shop.int_customers
[0m19:24:15  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m19:24:15  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m19:24:15  Began compiling node model.jaffle_shop.int_customers
[0m19:24:15  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m19:24:15  Timing info for model.jaffle_shop.int_customers (compile): 21:24:15.981111 => 21:24:15.986206
[0m19:24:15  Began executing node model.jaffle_shop.int_customers
[0m19:24:16  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:24:16  On model.jaffle_shop.int_customers: BEGIN
[0m19:24:16  Opening a new connection, currently in state init
[0m19:24:16  SQL status: BEGIN in 0.0 seconds
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:24:16  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        max(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        now() as dtupdated,
        "" as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname
        "" as dtupdated,
        now() as dtinserted,
        dtloaded

    FROM using_clause

    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m19:24:16  Postgres adapter: Postgres error: zero-length delimited identifier at or near """"
LINE 41:         "" as dtinserted,
                 ^

[0m19:24:16  On model.jaffle_shop.int_customers: ROLLBACK
[0m19:24:16  Timing info for model.jaffle_shop.int_customers (execute): 21:24:15.988230 => 21:24:16.095626
[0m19:24:16  On model.jaffle_shop.int_customers: Close
[0m19:24:16  Database Error in model int_customers (models\integration\int_customers.sql)
  zero-length delimited identifier at or near """"
  LINE 41:         "" as dtinserted,
                   ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:24:16  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.12s]
[0m19:24:16  Finished running node model.jaffle_shop.int_customers
[0m19:24:16  Began running node model.jaffle_shop.int_sales
[0m19:24:16  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m19:24:16  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m19:24:16  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m19:24:16  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m19:24:16  CANCEL query model.jaffle_shop.int_customers ................................... [[31mCANCEL[0m]
[0m19:24:16  Began compiling node model.jaffle_shop.int_sales
[0m19:24:16  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m19:24:16  Timing info for model.jaffle_shop.int_sales (compile): 21:24:16.112869 => 21:24:16.117867
[0m19:24:16  Began executing node model.jaffle_shop.int_sales
[0m19:24:16  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:24:16  On model.jaffle_shop.int_sales: BEGIN
[0m19:24:16  Opening a new connection, currently in state closed
[0m19:24:16  SQL status: BEGIN in 0.0 seconds
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:24:16  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m19:24:16  SQL status: SELECT 2823 in 0.0 seconds
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:24:16  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m19:24:16  SQL status: ALTER TABLE in 0.0 seconds
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:24:16  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m19:24:16  SQL status: ALTER TABLE in 0.0 seconds
[0m19:24:16  On model.jaffle_shop.int_sales: COMMIT
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:24:16  On model.jaffle_shop.int_sales: COMMIT
[0m19:24:16  SQL status: COMMIT in 0.0 seconds
[0m19:24:16  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:24:16  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m19:24:16  SQL status: DROP TABLE in 0.0 seconds
[0m19:24:16  Timing info for model.jaffle_shop.int_sales (execute): 21:24:16.118873 => 21:24:16.238202
[0m19:24:16  On model.jaffle_shop.int_sales: Close
[0m19:24:16  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.13s]
[0m19:24:16  Finished running node model.jaffle_shop.int_sales
[0m19:24:16  
[0m19:24:16  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m19:24:16    zero-length delimited identifier at or near """"
[0m19:24:16    LINE 41:         "" as dtinserted,
[0m19:24:16                     ^
[0m19:24:16    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:24:16  Connection 'master' was properly closed.
[0m19:24:16  Connection 'list_dbtsales' was properly closed.
[0m19:24:16  Connection 'list_dbtsales_public' was properly closed.
[0m19:24:16  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m19:24:16  
[0m19:24:16  Finished running 1 incremental model in 0 hours 0 minutes and 0.48 seconds (0.48s).
[0m19:24:16  Encountered an error:
FailFast Error in model int_customers (models\integration\int_customers.sql)
  Failing early due to test failure or runtime error
[0m19:24:16  Command `dbt run` failed at 21:24:16.257112 after 0.82 seconds
[0m19:24:16  Flushing usage events
[0m19:25:49  Running with dbt=1.5.4
[0m19:25:49  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:25:49  Registered adapter: postgres=1.5.4
[0m19:25:49  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:25:49  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:25:49  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m19:25:49  1603: static parser failed on integration\int_customers.sql
[0m19:25:49  1602: parser fallback to jinja rendering on integration\int_customers.sql
[0m19:25:49  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:25:49  
[0m19:25:49  Acquiring new postgres connection 'master'
[0m19:25:49  Acquiring new postgres connection 'list_dbtsales'
[0m19:25:49  Using postgres connection "list_dbtsales"
[0m19:25:49  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:25:49  Opening a new connection, currently in state init
[0m19:25:50  SQL status: SELECT 5 in 0.0 seconds
[0m19:25:50  On list_dbtsales: Close
[0m19:25:50  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m19:25:50  Using postgres connection "list_dbtsales_public_stg"
[0m19:25:50  On list_dbtsales_public_stg: BEGIN
[0m19:25:50  Opening a new connection, currently in state init
[0m19:25:50  SQL status: BEGIN in 0.0 seconds
[0m19:25:50  Using postgres connection "list_dbtsales_public_stg"
[0m19:25:50  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:25:50  SQL status: SELECT 1 in 0.0 seconds
[0m19:25:50  On list_dbtsales_public_stg: ROLLBACK
[0m19:25:50  On list_dbtsales_public_stg: Close
[0m19:25:50  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m19:25:50  Using postgres connection "list_dbtsales_public"
[0m19:25:50  On list_dbtsales_public: BEGIN
[0m19:25:50  Opening a new connection, currently in state closed
[0m19:25:50  SQL status: BEGIN in 0.0 seconds
[0m19:25:50  Using postgres connection "list_dbtsales_public"
[0m19:25:50  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:25:50  SQL status: SELECT 3 in 0.0 seconds
[0m19:25:50  On list_dbtsales_public: ROLLBACK
[0m19:25:50  On list_dbtsales_public: Close
[0m19:25:50  Using postgres connection "master"
[0m19:25:50  On master: BEGIN
[0m19:25:50  Opening a new connection, currently in state init
[0m19:25:50  SQL status: BEGIN in 0.0 seconds
[0m19:25:50  Using postgres connection "master"
[0m19:25:50  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:25:50  SQL status: SELECT 1 in 0.0 seconds
[0m19:25:50  On master: ROLLBACK
[0m19:25:50  Using postgres connection "master"
[0m19:25:50  On master: BEGIN
[0m19:25:50  SQL status: BEGIN in 0.0 seconds
[0m19:25:50  On master: COMMIT
[0m19:25:50  Using postgres connection "master"
[0m19:25:50  On master: COMMIT
[0m19:25:50  SQL status: COMMIT in 0.0 seconds
[0m19:25:50  On master: Close
[0m19:25:50  Concurrency: 1 threads (target='dev')
[0m19:25:50  
[0m19:25:50  Began running node model.jaffle_shop.int_customers
[0m19:25:50  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m19:25:50  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m19:25:50  Began compiling node model.jaffle_shop.int_customers
[0m19:25:50  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m19:25:50  Timing info for model.jaffle_shop.int_customers (compile): 21:25:50.174566 => 21:25:50.182587
[0m19:25:50  Began executing node model.jaffle_shop.int_customers
[0m19:25:50  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:25:50  On model.jaffle_shop.int_customers: BEGIN
[0m19:25:50  Opening a new connection, currently in state init
[0m19:25:50  SQL status: BEGIN in 0.0 seconds
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:25:50  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        max(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        now() as dtupdated,
        '' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname
        '' as dtupdated,
        now() as dtinserted,
        dtloaded

    FROM using_clause

    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m19:25:50  Postgres adapter: Postgres error: syntax error at or near "inserts"
LINE 66: SELECT * FROM updates UNION inserts
                                     ^

[0m19:25:50  On model.jaffle_shop.int_customers: ROLLBACK
[0m19:25:50  Timing info for model.jaffle_shop.int_customers (execute): 21:25:50.184603 => 21:25:50.284468
[0m19:25:50  On model.jaffle_shop.int_customers: Close
[0m19:25:50  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "inserts"
  LINE 66: SELECT * FROM updates UNION inserts
                                       ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:25:50  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.12s]
[0m19:25:50  Finished running node model.jaffle_shop.int_customers
[0m19:25:50  Began running node model.jaffle_shop.int_sales
[0m19:25:50  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m19:25:50  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m19:25:50  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m19:25:50  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m19:25:50  Began compiling node model.jaffle_shop.int_sales
[0m19:25:50  CANCEL query model.jaffle_shop.int_customers ................................... [[31mCANCEL[0m]
[0m19:25:50  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m19:25:50  Timing info for model.jaffle_shop.int_sales (compile): 21:25:50.301279 => 21:25:50.306282
[0m19:25:50  Began executing node model.jaffle_shop.int_sales
[0m19:25:50  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:25:50  On model.jaffle_shop.int_sales: BEGIN
[0m19:25:50  Opening a new connection, currently in state closed
[0m19:25:50  SQL status: BEGIN in 0.0 seconds
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:25:50  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m19:25:50  SQL status: SELECT 2823 in 0.0 seconds
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:25:50  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m19:25:50  SQL status: ALTER TABLE in 0.0 seconds
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:25:50  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m19:25:50  SQL status: ALTER TABLE in 0.0 seconds
[0m19:25:50  On model.jaffle_shop.int_sales: COMMIT
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:25:50  On model.jaffle_shop.int_sales: COMMIT
[0m19:25:50  SQL status: COMMIT in 0.0 seconds
[0m19:25:50  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:25:50  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m19:25:50  SQL status: DROP TABLE in 0.0 seconds
[0m19:25:50  Timing info for model.jaffle_shop.int_sales (execute): 21:25:50.307905 => 21:25:50.422512
[0m19:25:50  On model.jaffle_shop.int_sales: Close
[0m19:25:50  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.13s]
[0m19:25:50  Finished running node model.jaffle_shop.int_sales
[0m19:25:50  
[0m19:25:50  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m19:25:50    syntax error at or near "inserts"
[0m19:25:50    LINE 66: SELECT * FROM updates UNION inserts
[0m19:25:50                                         ^
[0m19:25:50    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:25:50  Connection 'master' was properly closed.
[0m19:25:50  Connection 'list_dbtsales' was properly closed.
[0m19:25:50  Connection 'list_dbtsales_public' was properly closed.
[0m19:25:50  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m19:25:50  
[0m19:25:50  Finished running 1 incremental model in 0 hours 0 minutes and 0.46 seconds (0.46s).
[0m19:25:50  Encountered an error:
FailFast Error in model int_customers (models\integration\int_customers.sql)
  Failing early due to test failure or runtime error
[0m19:25:50  Command `dbt run` failed at 21:25:50.440596 after 0.82 seconds
[0m19:25:50  Flushing usage events
[0m19:30:27  Running with dbt=1.5.4
[0m19:30:27  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:30:27  Registered adapter: postgres=1.5.4
[0m19:30:27  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:30:27  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:30:27  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m19:30:27  1603: static parser failed on integration\int_customers.sql
[0m19:30:27  1602: parser fallback to jinja rendering on integration\int_customers.sql
[0m19:30:27  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:30:27  
[0m19:30:27  Acquiring new postgres connection 'master'
[0m19:30:27  Acquiring new postgres connection 'list_dbtsales'
[0m19:30:27  Using postgres connection "list_dbtsales"
[0m19:30:27  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:30:27  Opening a new connection, currently in state init
[0m19:30:27  SQL status: SELECT 5 in 0.0 seconds
[0m19:30:27  On list_dbtsales: Close
[0m19:30:27  Acquiring new postgres connection 'list_dbtsales_public'
[0m19:30:27  Using postgres connection "list_dbtsales_public"
[0m19:30:27  On list_dbtsales_public: BEGIN
[0m19:30:27  Opening a new connection, currently in state init
[0m19:30:27  SQL status: BEGIN in 0.0 seconds
[0m19:30:27  Using postgres connection "list_dbtsales_public"
[0m19:30:27  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:30:27  SQL status: SELECT 3 in 0.0 seconds
[0m19:30:27  On list_dbtsales_public: ROLLBACK
[0m19:30:27  On list_dbtsales_public: Close
[0m19:30:27  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m19:30:27  Using postgres connection "list_dbtsales_public_stg"
[0m19:30:27  On list_dbtsales_public_stg: BEGIN
[0m19:30:27  Opening a new connection, currently in state closed
[0m19:30:27  SQL status: BEGIN in 0.0 seconds
[0m19:30:27  Using postgres connection "list_dbtsales_public_stg"
[0m19:30:27  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:30:27  SQL status: SELECT 1 in 0.0 seconds
[0m19:30:27  On list_dbtsales_public_stg: ROLLBACK
[0m19:30:27  On list_dbtsales_public_stg: Close
[0m19:30:27  Using postgres connection "master"
[0m19:30:27  On master: BEGIN
[0m19:30:27  Opening a new connection, currently in state init
[0m19:30:27  SQL status: BEGIN in 0.0 seconds
[0m19:30:27  Using postgres connection "master"
[0m19:30:27  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:30:27  SQL status: SELECT 1 in 0.0 seconds
[0m19:30:27  On master: ROLLBACK
[0m19:30:27  Using postgres connection "master"
[0m19:30:27  On master: BEGIN
[0m19:30:27  SQL status: BEGIN in 0.0 seconds
[0m19:30:27  On master: COMMIT
[0m19:30:27  Using postgres connection "master"
[0m19:30:27  On master: COMMIT
[0m19:30:27  SQL status: COMMIT in 0.0 seconds
[0m19:30:27  On master: Close
[0m19:30:27  Concurrency: 1 threads (target='dev')
[0m19:30:27  
[0m19:30:27  Began running node model.jaffle_shop.int_customers
[0m19:30:27  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m19:30:27  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m19:30:27  Began compiling node model.jaffle_shop.int_customers
[0m19:30:27  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m19:30:27  Timing info for model.jaffle_shop.int_customers (compile): 21:30:27.907453 => 21:30:27.915453
[0m19:30:27  Began executing node model.jaffle_shop.int_customers
[0m19:30:27  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m19:30:27  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:30:27  On model.jaffle_shop.int_customers: BEGIN
[0m19:30:27  Opening a new connection, currently in state init
[0m19:30:28  SQL status: BEGIN in 0.0 seconds
[0m19:30:28  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:30:28  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        max(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        now() as dtupdated,
        'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname
        'null' as dtupdated,
        now() as dtinserted,
        dtloaded

    FROM using_clause

    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m19:30:28  Postgres adapter: Postgres error: syntax error at or near "inserts"
LINE 66: SELECT * FROM updates UNION inserts
                                     ^

[0m19:30:28  On model.jaffle_shop.int_customers: ROLLBACK
[0m19:30:28  Timing info for model.jaffle_shop.int_customers (execute): 21:30:27.918450 => 21:30:28.034590
[0m19:30:28  On model.jaffle_shop.int_customers: Close
[0m19:30:28  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "inserts"
  LINE 66: SELECT * FROM updates UNION inserts
                                       ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:30:28  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.14s]
[0m19:30:28  Finished running node model.jaffle_shop.int_customers
[0m19:30:28  Began running node model.jaffle_shop.int_sales
[0m19:30:28  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m19:30:28  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m19:30:28  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m19:30:28  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m19:30:28  Began compiling node model.jaffle_shop.int_sales
[0m19:30:28  CANCEL query model.jaffle_shop.int_customers ................................... [[31mCANCEL[0m]
[0m19:30:28  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m19:30:28  Timing info for model.jaffle_shop.int_sales (compile): 21:30:28.052110 => 21:30:28.056113
[0m19:30:28  Began executing node model.jaffle_shop.int_sales
[0m19:30:28  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m19:30:28  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:30:28  On model.jaffle_shop.int_sales: BEGIN
[0m19:30:28  Opening a new connection, currently in state closed
[0m19:30:28  SQL status: BEGIN in 0.0 seconds
[0m19:30:28  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:30:28  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m19:30:28  SQL status: SELECT 2823 in 0.0 seconds
[0m19:30:28  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:30:28  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m19:30:28  SQL status: ALTER TABLE in 0.0 seconds
[0m19:30:28  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:30:28  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m19:30:28  SQL status: ALTER TABLE in 0.0 seconds
[0m19:30:28  On model.jaffle_shop.int_sales: COMMIT
[0m19:30:28  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:30:28  On model.jaffle_shop.int_sales: COMMIT
[0m19:30:28  SQL status: COMMIT in 0.0 seconds
[0m19:30:28  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:30:28  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m19:30:28  SQL status: DROP TABLE in 0.0 seconds
[0m19:30:28  Timing info for model.jaffle_shop.int_sales (execute): 21:30:28.059111 => 21:30:28.183600
[0m19:30:28  On model.jaffle_shop.int_sales: Close
[0m19:30:28  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.14s]
[0m19:30:28  Finished running node model.jaffle_shop.int_sales
[0m19:30:28  
[0m19:30:28  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m19:30:28    syntax error at or near "inserts"
[0m19:30:28    LINE 66: SELECT * FROM updates UNION inserts
[0m19:30:28                                         ^
[0m19:30:28    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:30:28  Connection 'master' was properly closed.
[0m19:30:28  Connection 'list_dbtsales' was properly closed.
[0m19:30:28  Connection 'list_dbtsales_public_stg' was properly closed.
[0m19:30:28  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m19:30:28  
[0m19:30:28  Finished running 1 incremental model in 0 hours 0 minutes and 0.53 seconds (0.53s).
[0m19:30:28  Encountered an error:
FailFast Error in model int_customers (models\integration\int_customers.sql)
  Failing early due to test failure or runtime error
[0m19:30:28  Command `dbt run` failed at 21:30:28.205732 after 0.91 seconds
[0m19:30:28  Flushing usage events
[0m19:31:07  Running with dbt=1.5.4
[0m19:31:07  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m19:31:07  Registered adapter: postgres=1.5.4
[0m19:31:07  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m19:31:07  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m19:31:07  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m19:31:07  1603: static parser failed on integration\int_customers.sql
[0m19:31:07  1602: parser fallback to jinja rendering on integration\int_customers.sql
[0m19:31:07  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m19:31:07  
[0m19:31:07  Acquiring new postgres connection 'master'
[0m19:31:07  Acquiring new postgres connection 'list_dbtsales'
[0m19:31:07  Using postgres connection "list_dbtsales"
[0m19:31:07  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m19:31:07  Opening a new connection, currently in state init
[0m19:31:07  SQL status: SELECT 5 in 0.0 seconds
[0m19:31:07  On list_dbtsales: Close
[0m19:31:07  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m19:31:07  Using postgres connection "list_dbtsales_public_stg"
[0m19:31:07  On list_dbtsales_public_stg: BEGIN
[0m19:31:07  Opening a new connection, currently in state init
[0m19:31:07  SQL status: BEGIN in 0.0 seconds
[0m19:31:07  Using postgres connection "list_dbtsales_public_stg"
[0m19:31:07  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m19:31:07  SQL status: SELECT 1 in 0.0 seconds
[0m19:31:07  On list_dbtsales_public_stg: ROLLBACK
[0m19:31:07  On list_dbtsales_public_stg: Close
[0m19:31:07  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m19:31:07  Using postgres connection "list_dbtsales_public"
[0m19:31:07  On list_dbtsales_public: BEGIN
[0m19:31:07  Opening a new connection, currently in state closed
[0m19:31:07  SQL status: BEGIN in 0.0 seconds
[0m19:31:07  Using postgres connection "list_dbtsales_public"
[0m19:31:07  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m19:31:07  SQL status: SELECT 3 in 0.0 seconds
[0m19:31:07  On list_dbtsales_public: ROLLBACK
[0m19:31:07  On list_dbtsales_public: Close
[0m19:31:07  Using postgres connection "master"
[0m19:31:07  On master: BEGIN
[0m19:31:07  Opening a new connection, currently in state init
[0m19:31:07  SQL status: BEGIN in 0.0 seconds
[0m19:31:07  Using postgres connection "master"
[0m19:31:07  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m19:31:07  SQL status: SELECT 1 in 0.0 seconds
[0m19:31:07  On master: ROLLBACK
[0m19:31:07  Using postgres connection "master"
[0m19:31:07  On master: BEGIN
[0m19:31:07  SQL status: BEGIN in 0.0 seconds
[0m19:31:07  On master: COMMIT
[0m19:31:07  Using postgres connection "master"
[0m19:31:07  On master: COMMIT
[0m19:31:08  SQL status: COMMIT in 0.0 seconds
[0m19:31:08  On master: Close
[0m19:31:08  Concurrency: 1 threads (target='dev')
[0m19:31:08  
[0m19:31:08  Began running node model.jaffle_shop.int_customers
[0m19:31:08  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m19:31:08  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m19:31:08  Began compiling node model.jaffle_shop.int_customers
[0m19:31:08  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m19:31:08  Timing info for model.jaffle_shop.int_customers (compile): 21:31:08.016068 => 21:31:08.021067
[0m19:31:08  Began executing node model.jaffle_shop.int_customers
[0m19:31:08  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:31:08  On model.jaffle_shop.int_customers: BEGIN
[0m19:31:08  Opening a new connection, currently in state init
[0m19:31:08  SQL status: BEGIN in 0.0 seconds
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_customers"
[0m19:31:08  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        max(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        -- now() as dtupdated,
        -- 'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname
        -- 'null' as dtupdated,
        -- now() as dtinserted,
        dtloaded

    FROM using_clause

    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m19:31:08  Postgres adapter: Postgres error: syntax error at or near "inserts"
LINE 66: SELECT * FROM updates UNION inserts
                                     ^

[0m19:31:08  On model.jaffle_shop.int_customers: ROLLBACK
[0m19:31:08  Timing info for model.jaffle_shop.int_customers (execute): 21:31:08.025171 => 21:31:08.113839
[0m19:31:08  On model.jaffle_shop.int_customers: Close
[0m19:31:08  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "inserts"
  LINE 66: SELECT * FROM updates UNION inserts
                                       ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:31:08  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.11s]
[0m19:31:08  Finished running node model.jaffle_shop.int_customers
[0m19:31:08  Began running node model.jaffle_shop.int_sales
[0m19:31:08  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m19:31:08  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m19:31:08  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m19:31:08  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m19:31:08  Began compiling node model.jaffle_shop.int_sales
[0m19:31:08  CANCEL query model.jaffle_shop.int_customers ................................... [[31mCANCEL[0m]
[0m19:31:08  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m19:31:08  Timing info for model.jaffle_shop.int_sales (compile): 21:31:08.130837 => 21:31:08.136021
[0m19:31:08  Began executing node model.jaffle_shop.int_sales
[0m19:31:08  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:31:08  On model.jaffle_shop.int_sales: BEGIN
[0m19:31:08  Opening a new connection, currently in state closed
[0m19:31:08  SQL status: BEGIN in 0.0 seconds
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:31:08  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m19:31:08  SQL status: SELECT 2823 in 0.0 seconds
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:31:08  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m19:31:08  SQL status: ALTER TABLE in 0.0 seconds
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:31:08  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m19:31:08  SQL status: ALTER TABLE in 0.0 seconds
[0m19:31:08  On model.jaffle_shop.int_sales: COMMIT
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:31:08  On model.jaffle_shop.int_sales: COMMIT
[0m19:31:08  SQL status: COMMIT in 0.0 seconds
[0m19:31:08  Using postgres connection "model.jaffle_shop.int_sales"
[0m19:31:08  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m19:31:08  SQL status: DROP TABLE in 0.0 seconds
[0m19:31:08  Timing info for model.jaffle_shop.int_sales (execute): 21:31:08.138024 => 21:31:08.266190
[0m19:31:08  On model.jaffle_shop.int_sales: Close
[0m19:31:08  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.14s]
[0m19:31:08  Finished running node model.jaffle_shop.int_sales
[0m19:31:08  
[0m19:31:08  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m19:31:08    syntax error at or near "inserts"
[0m19:31:08    LINE 66: SELECT * FROM updates UNION inserts
[0m19:31:08                                         ^
[0m19:31:08    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m19:31:08  Connection 'master' was properly closed.
[0m19:31:08  Connection 'list_dbtsales' was properly closed.
[0m19:31:08  Connection 'list_dbtsales_public' was properly closed.
[0m19:31:08  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m19:31:08  
[0m19:31:08  Finished running 1 incremental model in 0 hours 0 minutes and 0.46 seconds (0.46s).
[0m19:31:08  Encountered an error:
FailFast Error in model int_customers (models\integration\int_customers.sql)
  Failing early due to test failure or runtime error
[0m19:31:08  Command `dbt run` failed at 21:31:08.289751 after 0.79 seconds
[0m19:31:08  Flushing usage events
[0m05:09:57  Running with dbt=1.5.4
[0m05:09:57  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'log_format': 'text', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m05:09:57  Registered adapter: postgres=1.5.4
[0m05:09:57  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m05:09:57  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m05:09:57  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m05:09:57  1603: static parser failed on integration\int_customers.sql
[0m05:09:57  1602: parser fallback to jinja rendering on integration\int_customers.sql
[0m05:09:57  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m05:09:57  
[0m05:09:57  Acquiring new postgres connection 'master'
[0m05:09:57  Acquiring new postgres connection 'list_dbtsales'
[0m05:09:57  Using postgres connection "list_dbtsales"
[0m05:09:57  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:09:57  Opening a new connection, currently in state init
[0m05:09:57  SQL status: SELECT 5 in 0.0 seconds
[0m05:09:57  On list_dbtsales: Close
[0m05:09:57  Acquiring new postgres connection 'list_dbtsales_public'
[0m05:09:57  Using postgres connection "list_dbtsales_public"
[0m05:09:57  On list_dbtsales_public: BEGIN
[0m05:09:57  Opening a new connection, currently in state init
[0m05:09:57  SQL status: BEGIN in 0.0 seconds
[0m05:09:57  Using postgres connection "list_dbtsales_public"
[0m05:09:57  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m05:09:57  SQL status: SELECT 3 in 0.0 seconds
[0m05:09:57  On list_dbtsales_public: ROLLBACK
[0m05:09:57  On list_dbtsales_public: Close
[0m05:09:57  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m05:09:57  Using postgres connection "list_dbtsales_public_stg"
[0m05:09:57  On list_dbtsales_public_stg: BEGIN
[0m05:09:57  Opening a new connection, currently in state closed
[0m05:09:57  SQL status: BEGIN in 0.0 seconds
[0m05:09:57  Using postgres connection "list_dbtsales_public_stg"
[0m05:09:57  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m05:09:57  SQL status: SELECT 1 in 0.0 seconds
[0m05:09:57  On list_dbtsales_public_stg: ROLLBACK
[0m05:09:57  On list_dbtsales_public_stg: Close
[0m05:09:57  Using postgres connection "master"
[0m05:09:57  On master: BEGIN
[0m05:09:57  Opening a new connection, currently in state init
[0m05:09:57  SQL status: BEGIN in 0.0 seconds
[0m05:09:57  Using postgres connection "master"
[0m05:09:57  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:09:57  SQL status: SELECT 1 in 0.0 seconds
[0m05:09:57  On master: ROLLBACK
[0m05:09:57  Using postgres connection "master"
[0m05:09:57  On master: BEGIN
[0m05:09:57  SQL status: BEGIN in 0.0 seconds
[0m05:09:57  On master: COMMIT
[0m05:09:57  Using postgres connection "master"
[0m05:09:57  On master: COMMIT
[0m05:09:57  SQL status: COMMIT in 0.0 seconds
[0m05:09:57  On master: Close
[0m05:09:57  Concurrency: 1 threads (target='dev')
[0m05:09:57  
[0m05:09:57  Began running node model.jaffle_shop.int_customers
[0m05:09:57  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:09:57  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:09:57  Began compiling node model.jaffle_shop.int_customers
[0m05:09:57  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:09:57  Timing info for model.jaffle_shop.int_customers (compile): 07:09:57.937028 => 07:09:57.943029
[0m05:09:57  Began executing node model.jaffle_shop.int_customers
[0m05:09:57  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:09:58  On model.jaffle_shop.int_customers: BEGIN
[0m05:09:58  Opening a new connection, currently in state init
[0m05:09:58  SQL status: BEGIN in 0.0 seconds
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:09:58  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        max(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    group by customer_id,
        customer_name,
        contact_firstname,
        contact_lastname

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        now() as dtupdated,
        'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        customer_id,
        customer_name,
        contact_firstname,
        contact_lastname
        'null' as dtupdated,
        now() as dtinserted,
        dtloaded

    FROM using_clause

    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m05:09:58  Postgres adapter: Postgres error: syntax error at or near "inserts"
LINE 71: SELECT * FROM updates UNION inserts
                                     ^

[0m05:09:58  On model.jaffle_shop.int_customers: ROLLBACK
[0m05:09:58  Timing info for model.jaffle_shop.int_customers (execute): 07:09:57.945031 => 07:09:58.044845
[0m05:09:58  On model.jaffle_shop.int_customers: Close
[0m05:09:58  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "inserts"
  LINE 71: SELECT * FROM updates UNION inserts
                                       ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:09:58  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.12s]
[0m05:09:58  Finished running node model.jaffle_shop.int_customers
[0m05:09:58  Began running node model.jaffle_shop.int_sales
[0m05:09:58  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:09:58  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m05:09:58  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:09:58  CANCEL query list_dbtsales_public_stg .......................................... [[31mCANCEL[0m]
[0m05:09:58  Began compiling node model.jaffle_shop.int_sales
[0m05:09:58  CANCEL query model.jaffle_shop.int_customers ................................... [[31mCANCEL[0m]
[0m05:09:58  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:09:58  Timing info for model.jaffle_shop.int_sales (compile): 07:09:58.063238 => 07:09:58.070247
[0m05:09:58  Began executing node model.jaffle_shop.int_sales
[0m05:09:58  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:09:58  On model.jaffle_shop.int_sales: BEGIN
[0m05:09:58  Opening a new connection, currently in state closed
[0m05:09:58  SQL status: BEGIN in 0.0 seconds
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:09:58  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m05:09:58  SQL status: SELECT 2823 in 0.0 seconds
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:09:58  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m05:09:58  SQL status: ALTER TABLE in 0.0 seconds
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:09:58  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m05:09:58  SQL status: ALTER TABLE in 0.0 seconds
[0m05:09:58  On model.jaffle_shop.int_sales: COMMIT
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:09:58  On model.jaffle_shop.int_sales: COMMIT
[0m05:09:58  SQL status: COMMIT in 0.0 seconds
[0m05:09:58  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:09:58  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m05:09:58  SQL status: DROP TABLE in 0.0 seconds
[0m05:09:58  Timing info for model.jaffle_shop.int_sales (execute): 07:09:58.072244 => 07:09:58.203876
[0m05:09:58  On model.jaffle_shop.int_sales: Close
[0m05:09:58  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.15s]
[0m05:09:58  Finished running node model.jaffle_shop.int_sales
[0m05:09:58  
[0m05:09:58  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:09:58    syntax error at or near "inserts"
[0m05:09:58    LINE 71: SELECT * FROM updates UNION inserts
[0m05:09:58                                         ^
[0m05:09:58    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:09:58  Connection 'master' was properly closed.
[0m05:09:58  Connection 'list_dbtsales' was properly closed.
[0m05:09:58  Connection 'list_dbtsales_public_stg' was properly closed.
[0m05:09:58  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:09:58  
[0m05:09:58  Finished running 1 incremental model in 0 hours 0 minutes and 0.49 seconds (0.49s).
[0m05:09:58  Encountered an error:
FailFast Error in model int_customers (models\integration\int_customers.sql)
  Failing early due to test failure or runtime error
[0m05:09:58  Command `dbt run` failed at 07:09:58.224611 after 0.89 seconds
[0m05:09:58  Flushing usage events
[0m05:13:16  Running with dbt=1.5.4
[0m05:13:16  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m05:13:16  Registered adapter: postgres=1.5.4
[0m05:13:16  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m05:13:16  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m05:13:16  Partial parsing enabled, no changes found, skipping parsing
[0m05:13:16  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m05:13:16  
[0m05:13:16  Acquiring new postgres connection 'master'
[0m05:13:16  Acquiring new postgres connection 'list_dbtsales'
[0m05:13:16  Using postgres connection "list_dbtsales"
[0m05:13:16  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:13:16  Opening a new connection, currently in state init
[0m05:13:16  SQL status: SELECT 5 in 0.0 seconds
[0m05:13:16  On list_dbtsales: Close
[0m05:13:16  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m05:13:16  Using postgres connection "list_dbtsales_public_stg"
[0m05:13:16  On list_dbtsales_public_stg: BEGIN
[0m05:13:16  Opening a new connection, currently in state init
[0m05:13:16  SQL status: BEGIN in 0.0 seconds
[0m05:13:16  Using postgres connection "list_dbtsales_public_stg"
[0m05:13:16  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m05:13:16  SQL status: SELECT 1 in 0.0 seconds
[0m05:13:16  On list_dbtsales_public_stg: ROLLBACK
[0m05:13:16  On list_dbtsales_public_stg: Close
[0m05:13:16  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m05:13:16  Using postgres connection "list_dbtsales_public"
[0m05:13:16  On list_dbtsales_public: BEGIN
[0m05:13:16  Opening a new connection, currently in state closed
[0m05:13:16  SQL status: BEGIN in 0.0 seconds
[0m05:13:16  Using postgres connection "list_dbtsales_public"
[0m05:13:16  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m05:13:16  SQL status: SELECT 3 in 0.0 seconds
[0m05:13:16  On list_dbtsales_public: ROLLBACK
[0m05:13:16  On list_dbtsales_public: Close
[0m05:13:16  Using postgres connection "master"
[0m05:13:16  On master: BEGIN
[0m05:13:16  Opening a new connection, currently in state init
[0m05:13:16  SQL status: BEGIN in 0.0 seconds
[0m05:13:16  Using postgres connection "master"
[0m05:13:16  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:13:16  SQL status: SELECT 1 in 0.0 seconds
[0m05:13:16  On master: ROLLBACK
[0m05:13:16  Using postgres connection "master"
[0m05:13:16  On master: BEGIN
[0m05:13:16  SQL status: BEGIN in 0.0 seconds
[0m05:13:16  On master: COMMIT
[0m05:13:16  Using postgres connection "master"
[0m05:13:16  On master: COMMIT
[0m05:13:16  SQL status: COMMIT in 0.0 seconds
[0m05:13:16  On master: Close
[0m05:13:16  Concurrency: 1 threads (target='dev')
[0m05:13:16  
[0m05:13:16  Began running node model.jaffle_shop.stg_customers
[0m05:13:16  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m05:13:16  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m05:13:16  Began compiling node model.jaffle_shop.stg_customers
[0m05:13:16  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m05:13:16  Timing info for model.jaffle_shop.stg_customers (compile): 07:13:16.851656 => 07:13:16.856656
[0m05:13:16  Began executing node model.jaffle_shop.stg_customers
[0m05:13:16  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m05:13:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:13:16  On model.jaffle_shop.stg_customers: BEGIN
[0m05:13:16  Opening a new connection, currently in state init
[0m05:13:16  SQL status: BEGIN in 0.0 seconds
[0m05:13:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:13:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select customerid,
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select distinct
        customerid as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select *
from source
  );
[0m05:13:16  SQL status: CREATE VIEW in 0.0 seconds
[0m05:13:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:13:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m05:13:16  SQL status: ALTER TABLE in 0.0 seconds
[0m05:13:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:13:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m05:13:16  SQL status: ALTER TABLE in 0.0 seconds
[0m05:13:16  On model.jaffle_shop.stg_customers: COMMIT
[0m05:13:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:13:16  On model.jaffle_shop.stg_customers: COMMIT
[0m05:13:16  SQL status: COMMIT in 0.0 seconds
[0m05:13:16  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:13:16  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m05:13:17  SQL status: DROP VIEW in 0.0 seconds
[0m05:13:17  Timing info for model.jaffle_shop.stg_customers (execute): 07:13:16.860656 => 07:13:17.004638
[0m05:13:17  On model.jaffle_shop.stg_customers: Close
[0m05:13:17  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.16s]
[0m05:13:17  Finished running node model.jaffle_shop.stg_customers
[0m05:13:17  Using postgres connection "master"
[0m05:13:17  On master: BEGIN
[0m05:13:17  Opening a new connection, currently in state closed
[0m05:13:17  SQL status: BEGIN in 0.0 seconds
[0m05:13:17  On master: COMMIT
[0m05:13:17  Using postgres connection "master"
[0m05:13:17  On master: COMMIT
[0m05:13:17  SQL status: COMMIT in 0.0 seconds
[0m05:13:17  On master: Close
[0m05:13:17  Connection 'master' was properly closed.
[0m05:13:17  Connection 'list_dbtsales' was properly closed.
[0m05:13:17  Connection 'list_dbtsales_public' was properly closed.
[0m05:13:17  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m05:13:17  
[0m05:13:17  Finished running 1 view model in 0 hours 0 minutes and 0.37 seconds (0.37s).
[0m05:13:17  Command end result
[0m05:13:17  
[0m05:13:17  [32mCompleted successfully[0m
[0m05:13:17  
[0m05:13:17  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m05:13:17  Command `dbt run` succeeded at 07:13:17.061969 after 0.66 seconds
[0m05:13:17  Flushing usage events
[0m05:13:59  Running with dbt=1.5.4
[0m05:13:59  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m05:13:59  Registered adapter: postgres=1.5.4
[0m05:13:59  checksum: 5d6b65bf0937b31c1cb174f5650843d5ea9953bdf3de7df3d9ed5979670d6d21, vars: {}, profile: , target: , version: 1.5.4
[0m05:13:59  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m05:13:59  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m05:13:59  1699: static parser successfully parsed staging\stg_customers.sql
[0m05:13:59  Found 5 models, 4 tests, 0 snapshots, 0 analyses, 645 macros, 0 operations, 0 seed files, 1 source, 0 exposures, 0 metrics, 0 groups
[0m05:13:59  
[0m05:13:59  Acquiring new postgres connection 'master'
[0m05:13:59  Acquiring new postgres connection 'list_dbtsales'
[0m05:13:59  Using postgres connection "list_dbtsales"
[0m05:13:59  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:13:59  Opening a new connection, currently in state init
[0m05:13:59  SQL status: SELECT 5 in 0.0 seconds
[0m05:13:59  On list_dbtsales: Close
[0m05:13:59  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m05:13:59  Using postgres connection "list_dbtsales_public_stg"
[0m05:13:59  On list_dbtsales_public_stg: BEGIN
[0m05:13:59  Opening a new connection, currently in state init
[0m05:13:59  SQL status: BEGIN in 0.0 seconds
[0m05:13:59  Using postgres connection "list_dbtsales_public_stg"
[0m05:13:59  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
  
[0m05:13:59  SQL status: SELECT 1 in 0.0 seconds
[0m05:13:59  On list_dbtsales_public_stg: ROLLBACK
[0m05:13:59  On list_dbtsales_public_stg: Close
[0m05:13:59  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m05:13:59  Using postgres connection "list_dbtsales_public"
[0m05:13:59  On list_dbtsales_public: BEGIN
[0m05:13:59  Opening a new connection, currently in state closed
[0m05:13:59  SQL status: BEGIN in 0.0 seconds
[0m05:13:59  Using postgres connection "list_dbtsales_public"
[0m05:13:59  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m05:13:59  SQL status: SELECT 3 in 0.0 seconds
[0m05:13:59  On list_dbtsales_public: ROLLBACK
[0m05:13:59  On list_dbtsales_public: Close
[0m05:13:59  Using postgres connection "master"
[0m05:13:59  On master: BEGIN
[0m05:13:59  Opening a new connection, currently in state init
[0m05:13:59  SQL status: BEGIN in 0.0 seconds
[0m05:13:59  Using postgres connection "master"
[0m05:13:59  On master: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:13:59  SQL status: SELECT 1 in 0.0 seconds
[0m05:13:59  On master: ROLLBACK
[0m05:13:59  Using postgres connection "master"
[0m05:13:59  On master: BEGIN
[0m05:13:59  SQL status: BEGIN in 0.0 seconds
[0m05:13:59  On master: COMMIT
[0m05:13:59  Using postgres connection "master"
[0m05:13:59  On master: COMMIT
[0m05:13:59  SQL status: COMMIT in 0.0 seconds
[0m05:13:59  On master: Close
[0m05:13:59  Concurrency: 1 threads (target='dev')
[0m05:13:59  
[0m05:13:59  Began running node model.jaffle_shop.stg_customers
[0m05:13:59  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m05:13:59  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m05:13:59  Began compiling node model.jaffle_shop.stg_customers
[0m05:13:59  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m05:13:59  Timing info for model.jaffle_shop.stg_customers (compile): 07:13:59.985959 => 07:13:59.989958
[0m05:13:59  Began executing node model.jaffle_shop.stg_customers
[0m05:14:00  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m05:14:00  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:14:00  On model.jaffle_shop.stg_customers: BEGIN
[0m05:14:00  Opening a new connection, currently in state init
[0m05:14:00  SQL status: BEGIN in 0.0 seconds
[0m05:14:00  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:14:00  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select customerid,
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select distinct
        customerid as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select *
from renamed
  );
[0m05:14:00  SQL status: CREATE VIEW in 0.0 seconds
[0m05:14:00  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:14:00  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m05:14:00  SQL status: ALTER TABLE in 0.0 seconds
[0m05:14:00  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:14:00  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m05:14:00  SQL status: ALTER TABLE in 0.0 seconds
[0m05:14:00  On model.jaffle_shop.stg_customers: COMMIT
[0m05:14:00  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:14:00  On model.jaffle_shop.stg_customers: COMMIT
[0m05:14:00  SQL status: COMMIT in 0.0 seconds
[0m05:14:00  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:14:00  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.4", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m05:14:00  SQL status: DROP VIEW in 0.0 seconds
[0m05:14:00  Timing info for model.jaffle_shop.stg_customers (execute): 07:13:59.992307 => 07:14:00.147266
[0m05:14:00  On model.jaffle_shop.stg_customers: Close
[0m05:14:00  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.17s]
[0m05:14:00  Finished running node model.jaffle_shop.stg_customers
[0m05:14:00  Using postgres connection "master"
[0m05:14:00  On master: BEGIN
[0m05:14:00  Opening a new connection, currently in state closed
[0m05:14:00  SQL status: BEGIN in 0.0 seconds
[0m05:14:00  On master: COMMIT
[0m05:14:00  Using postgres connection "master"
[0m05:14:00  On master: COMMIT
[0m05:14:00  SQL status: COMMIT in 0.0 seconds
[0m05:14:00  On master: Close
[0m05:14:00  Connection 'master' was properly closed.
[0m05:14:00  Connection 'list_dbtsales' was properly closed.
[0m05:14:00  Connection 'list_dbtsales_public' was properly closed.
[0m05:14:00  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m05:14:00  
[0m05:14:00  Finished running 1 view model in 0 hours 0 minutes and 0.45 seconds (0.45s).
[0m05:14:00  Command end result
[0m05:14:00  
[0m05:14:00  [32mCompleted successfully[0m
[0m05:14:00  
[0m05:14:00  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m05:14:00  Command `dbt run` succeeded at 07:14:00.219042 after 0.83 seconds
[0m05:14:00  Flushing usage events
[0m05:35:30  Running with dbt=1.6.0
[0m05:35:30  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'invocation_command': 'dbt run -m integration', 'send_anonymous_usage_stats': 'False'}
[0m05:35:30  Registered adapter: postgres=1.6.0
[0m05:35:31  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:35:31  Unable to do partial parsing because of a version mismatch
[0m05:35:33  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:35:33  
[0m05:35:33  Acquiring new postgres connection 'master'
[0m05:35:33  Acquiring new postgres connection 'list_dbtsales'
[0m05:35:33  Using postgres connection "list_dbtsales"
[0m05:35:33  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:35:33  Opening a new connection, currently in state init
[0m05:35:33  SQL status: SELECT 5 in 0.0 seconds
[0m05:35:33  On list_dbtsales: Close
[0m05:35:33  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m05:35:33  Using postgres connection "list_dbtsales_public_stg"
[0m05:35:33  On list_dbtsales_public_stg: BEGIN
[0m05:35:33  Opening a new connection, currently in state init
[0m05:35:33  SQL status: BEGIN in 0.0 seconds
[0m05:35:33  Using postgres connection "list_dbtsales_public_stg"
[0m05:35:33  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:35:33  SQL status: SELECT 1 in 0.0 seconds
[0m05:35:33  On list_dbtsales_public_stg: ROLLBACK
[0m05:35:33  On list_dbtsales_public_stg: Close
[0m05:35:33  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m05:35:33  Using postgres connection "list_dbtsales_public"
[0m05:35:33  On list_dbtsales_public: BEGIN
[0m05:35:33  Opening a new connection, currently in state closed
[0m05:35:33  SQL status: BEGIN in 0.0 seconds
[0m05:35:33  Using postgres connection "list_dbtsales_public"
[0m05:35:33  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:35:33  SQL status: SELECT 3 in 0.0 seconds
[0m05:35:33  On list_dbtsales_public: ROLLBACK
[0m05:35:33  On list_dbtsales_public: Close
[0m05:35:33  Using postgres connection "master"
[0m05:35:33  On master: BEGIN
[0m05:35:33  Opening a new connection, currently in state init
[0m05:35:33  SQL status: BEGIN in 0.0 seconds
[0m05:35:33  Using postgres connection "master"
[0m05:35:33  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:35:33  SQL status: SELECT 1 in 0.0 seconds
[0m05:35:33  On master: ROLLBACK
[0m05:35:33  Using postgres connection "master"
[0m05:35:33  On master: BEGIN
[0m05:35:33  SQL status: BEGIN in 0.0 seconds
[0m05:35:33  On master: COMMIT
[0m05:35:33  Using postgres connection "master"
[0m05:35:33  On master: COMMIT
[0m05:35:33  SQL status: COMMIT in 0.0 seconds
[0m05:35:33  On master: Close
[0m05:35:33  Concurrency: 1 threads (target='dev')
[0m05:35:33  
[0m05:35:33  Began running node model.jaffle_shop.int_customers
[0m05:35:33  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:35:33  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:35:33  Began compiling node model.jaffle_shop.int_customers
[0m05:35:33  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:35:33  Timing info for model.jaffle_shop.int_customers (compile): 07:35:33.768821 => 07:35:33.777259
[0m05:35:33  Began executing node model.jaffle_shop.int_customers
[0m05:35:33  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:35:33  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:35:33  On model.jaffle_shop.int_customers: BEGIN
[0m05:35:33  Opening a new connection, currently in state init
[0m05:35:33  SQL status: BEGIN in 0.0 seconds
[0m05:35:33  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:35:33  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    GROUP BY customer_name

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        now() as dtupdated,
        'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        'null' as dtupdated,
        now() as dtinserted,
        dtloaded

    FROM using_clause

    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m05:35:33  Postgres adapter: Postgres error: syntax error at or near "inserts"
LINE 61: SELECT * FROM updates UNION inserts
                                     ^

[0m05:35:33  On model.jaffle_shop.int_customers: ROLLBACK
[0m05:35:33  Timing info for model.jaffle_shop.int_customers (execute): 07:35:33.779259 => 07:35:33.866816
[0m05:35:33  On model.jaffle_shop.int_customers: Close
[0m05:35:33  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "inserts"
  LINE 61: SELECT * FROM updates UNION inserts
                                       ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:35:33  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.11s]
[0m05:35:33  Finished running node model.jaffle_shop.int_customers
[0m05:35:33  Began running node model.jaffle_shop.int_sales
[0m05:35:33  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:35:33  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:35:33  Opening a new connection, currently in state closed
[0m05:35:33  Began compiling node model.jaffle_shop.int_sales
[0m05:35:33  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:35:33  Timing info for model.jaffle_shop.int_sales (compile): 07:35:33.882909 => 07:35:33.890927
[0m05:35:33  Began executing node model.jaffle_shop.int_sales
[0m05:35:33  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:35:33  Postgres adapter: Cancelling query 'model.jaffle_shop.int_sales' (663)
[0m05:35:33  Using postgres connection "master"
[0m05:35:33  On master: BEGIN
[0m05:35:33  Opening a new connection, currently in state closed
[0m05:35:33  SQL status: BEGIN in 0.0 seconds
[0m05:35:33  Using postgres connection "master"
[0m05:35:33  On master: select pg_terminate_backend(663)
[0m05:35:33  SQL status: SELECT 1 in 0.0 seconds
[0m05:35:33  Postgres adapter: Cancel query 'model.jaffle_shop.int_sales': (True,)
[0m05:35:33  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m05:35:33  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:35:33  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m05:35:33  On model.jaffle_shop.int_sales: BEGIN
[0m05:35:33  CANCEL query model.jaffle_shop.int_sales ....................................... [[31mCANCEL[0m]
[0m05:35:33  Postgres adapter: Postgres error: could not receive data from server: Software caused connection abort (0x00002745/10053)

[0m05:35:33  On master: ROLLBACK
[0m05:35:33  Timing info for model.jaffle_shop.int_sales (execute): 07:35:33.893493 => 07:35:33.966352
[0m05:35:33  On model.jaffle_shop.int_sales: Close
[0m05:35:33  On master: Close
[0m05:35:33  Database Error in model int_sales (models\integration\int_sales.sql)
  could not receive data from server: Software caused connection abort (0x00002745/10053)
  compiled Code at target\run\jaffle_shop\models\integration\int_sales.sql
[0m05:35:33  2 of 2 ERROR creating sql table model public.int_sales ......................... [[31mERROR[0m in 0.09s]
[0m05:35:33  Finished running node model.jaffle_shop.int_sales
[0m05:35:33  
[0m05:35:33  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:35:33    syntax error at or near "inserts"
[0m05:35:33    LINE 61: SELECT * FROM updates UNION inserts
[0m05:35:33                                         ^
[0m05:35:33    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:35:33  Using postgres connection "master"
[0m05:35:33  On master: BEGIN
[0m05:35:33  Opening a new connection, currently in state closed
[0m05:35:34  SQL status: BEGIN in 0.0 seconds
[0m05:35:34  On master: COMMIT
[0m05:35:34  Using postgres connection "master"
[0m05:35:34  On master: COMMIT
[0m05:35:34  SQL status: COMMIT in 0.0 seconds
[0m05:35:34  On master: Close
[0m05:35:34  Connection 'master' was properly closed.
[0m05:35:34  Connection 'list_dbtsales' was properly closed.
[0m05:35:34  Connection 'list_dbtsales_public' was properly closed.
[0m05:35:34  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:35:34  
[0m05:35:34  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.50 seconds (0.50s).
[0m05:35:34  Command end result
[0m05:35:34  
[0m05:35:34  [31mCompleted with 2 errors and 0 warnings:[0m
[0m05:35:34  
[0m05:35:34  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:35:34    syntax error at or near "inserts"
[0m05:35:34    LINE 61: SELECT * FROM updates UNION inserts
[0m05:35:34                                         ^
[0m05:35:34    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:35:34  
[0m05:35:34  [33mSkipping due to fail_fast[0m
[0m05:35:34  
[0m05:35:34  Done. PASS=0 WARN=0 ERROR=1 SKIP=1 TOTAL=2
[0m05:35:34  Command `dbt run` failed at 07:35:34.041411 after 3.17 seconds
[0m05:35:34  Flushing usage events
[0m05:36:48  Running with dbt=1.6.0
[0m05:36:48  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'invocation_command': 'dbt run -m integration', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'False'}
[0m05:36:48  Registered adapter: postgres=1.6.0
[0m05:36:48  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:36:49  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m05:36:49  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m05:36:49  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:36:49  
[0m05:36:49  Acquiring new postgres connection 'master'
[0m05:36:49  Acquiring new postgres connection 'list_dbtsales'
[0m05:36:49  Using postgres connection "list_dbtsales"
[0m05:36:49  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:36:49  Opening a new connection, currently in state init
[0m05:36:49  SQL status: SELECT 5 in 0.0 seconds
[0m05:36:49  On list_dbtsales: Close
[0m05:36:49  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m05:36:49  Using postgres connection "list_dbtsales_public_stg"
[0m05:36:49  On list_dbtsales_public_stg: BEGIN
[0m05:36:49  Opening a new connection, currently in state init
[0m05:36:49  SQL status: BEGIN in 0.0 seconds
[0m05:36:49  Using postgres connection "list_dbtsales_public_stg"
[0m05:36:49  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:36:49  SQL status: SELECT 1 in 0.0 seconds
[0m05:36:49  On list_dbtsales_public_stg: ROLLBACK
[0m05:36:49  On list_dbtsales_public_stg: Close
[0m05:36:49  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m05:36:49  Using postgres connection "list_dbtsales_public"
[0m05:36:49  On list_dbtsales_public: BEGIN
[0m05:36:49  Opening a new connection, currently in state closed
[0m05:36:49  SQL status: BEGIN in 0.0 seconds
[0m05:36:49  Using postgres connection "list_dbtsales_public"
[0m05:36:49  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:36:49  SQL status: SELECT 3 in 0.0 seconds
[0m05:36:49  On list_dbtsales_public: ROLLBACK
[0m05:36:49  On list_dbtsales_public: Close
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: BEGIN
[0m05:36:49  Opening a new connection, currently in state init
[0m05:36:49  SQL status: BEGIN in 0.0 seconds
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:36:49  SQL status: SELECT 1 in 0.0 seconds
[0m05:36:49  On master: ROLLBACK
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: BEGIN
[0m05:36:49  SQL status: BEGIN in 0.0 seconds
[0m05:36:49  On master: COMMIT
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: COMMIT
[0m05:36:49  SQL status: COMMIT in 0.0 seconds
[0m05:36:49  On master: Close
[0m05:36:49  Concurrency: 1 threads (target='dev')
[0m05:36:49  
[0m05:36:49  Began running node model.jaffle_shop.int_customers
[0m05:36:49  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:36:49  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:36:49  Began compiling node model.jaffle_shop.int_customers
[0m05:36:49  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:36:49  Timing info for model.jaffle_shop.int_customers (compile): 07:36:49.441118 => 07:36:49.448171
[0m05:36:49  Began executing node model.jaffle_shop.int_customers
[0m05:36:49  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:36:49  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:36:49  On model.jaffle_shop.int_customers: BEGIN
[0m05:36:49  Opening a new connection, currently in state init
[0m05:36:49  SQL status: BEGIN in 0.0 seconds
[0m05:36:49  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:36:49  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    GROUP BY customer_name

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        -- now() as dtupdated,
        -- 'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        -- 'null' as dtupdated,
        -- now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m05:36:49  Postgres adapter: Postgres error: syntax error at or near "inserts"
LINE 59: SELECT * FROM updates UNION inserts
                                     ^

[0m05:36:49  On model.jaffle_shop.int_customers: ROLLBACK
[0m05:36:49  Timing info for model.jaffle_shop.int_customers (execute): 07:36:49.450177 => 07:36:49.543203
[0m05:36:49  On model.jaffle_shop.int_customers: Close
[0m05:36:49  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "inserts"
  LINE 59: SELECT * FROM updates UNION inserts
                                       ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:36:49  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.11s]
[0m05:36:49  Finished running node model.jaffle_shop.int_customers
[0m05:36:49  Began running node model.jaffle_shop.int_sales
[0m05:36:49  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:36:49  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:36:49  Opening a new connection, currently in state closed
[0m05:36:49  Began compiling node model.jaffle_shop.int_sales
[0m05:36:49  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:36:49  Timing info for model.jaffle_shop.int_sales (compile): 07:36:49.564463 => 07:36:49.571498
[0m05:36:49  Began executing node model.jaffle_shop.int_sales
[0m05:36:49  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:36:49  Postgres adapter: Cancelling query 'model.jaffle_shop.int_sales' (675)
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: BEGIN
[0m05:36:49  Opening a new connection, currently in state closed
[0m05:36:49  SQL status: BEGIN in 0.0 seconds
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: select pg_terminate_backend(675)
[0m05:36:49  SQL status: SELECT 1 in 0.0 seconds
[0m05:36:49  Postgres adapter: Cancel query 'model.jaffle_shop.int_sales': (True,)
[0m05:36:49  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m05:36:49  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:36:49  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m05:36:49  On model.jaffle_shop.int_sales: BEGIN
[0m05:36:49  CANCEL query model.jaffle_shop.int_sales ....................................... [[31mCANCEL[0m]
[0m05:36:49  Postgres adapter: Postgres error: could not receive data from server: Software caused connection abort (0x00002745/10053)

[0m05:36:49  On master: ROLLBACK
[0m05:36:49  Timing info for model.jaffle_shop.int_sales (execute): 07:36:49.574498 => 07:36:49.630947
[0m05:36:49  On model.jaffle_shop.int_sales: Close
[0m05:36:49  On master: Close
[0m05:36:49  Database Error in model int_sales (models\integration\int_sales.sql)
  could not receive data from server: Software caused connection abort (0x00002745/10053)
  compiled Code at target\run\jaffle_shop\models\integration\int_sales.sql
[0m05:36:49  2 of 2 ERROR creating sql table model public.int_sales ......................... [[31mERROR[0m in 0.08s]
[0m05:36:49  Finished running node model.jaffle_shop.int_sales
[0m05:36:49  
[0m05:36:49  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:36:49    syntax error at or near "inserts"
[0m05:36:49    LINE 59: SELECT * FROM updates UNION inserts
[0m05:36:49                                         ^
[0m05:36:49    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: BEGIN
[0m05:36:49  Opening a new connection, currently in state closed
[0m05:36:49  SQL status: BEGIN in 0.0 seconds
[0m05:36:49  On master: COMMIT
[0m05:36:49  Using postgres connection "master"
[0m05:36:49  On master: COMMIT
[0m05:36:49  SQL status: COMMIT in 0.0 seconds
[0m05:36:49  On master: Close
[0m05:36:49  Connection 'master' was properly closed.
[0m05:36:49  Connection 'list_dbtsales' was properly closed.
[0m05:36:49  Connection 'list_dbtsales_public' was properly closed.
[0m05:36:49  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:36:49  
[0m05:36:49  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.52 seconds (0.52s).
[0m05:36:49  Command end result
[0m05:36:49  
[0m05:36:49  [31mCompleted with 2 errors and 0 warnings:[0m
[0m05:36:49  
[0m05:36:49  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:36:49    syntax error at or near "inserts"
[0m05:36:49    LINE 59: SELECT * FROM updates UNION inserts
[0m05:36:49                                         ^
[0m05:36:49    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:36:49  
[0m05:36:49  [33mSkipping due to fail_fast[0m
[0m05:36:49  
[0m05:36:49  Done. PASS=0 WARN=0 ERROR=1 SKIP=1 TOTAL=2
[0m05:36:49  Command `dbt run` failed at 07:36:49.713187 after 0.89 seconds
[0m05:36:49  Flushing usage events
[0m05:37:10  Running with dbt=1.6.0
[0m05:37:10  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'invocation_command': 'dbt run -m integration', 'send_anonymous_usage_stats': 'False'}
[0m05:37:10  Registered adapter: postgres=1.6.0
[0m05:37:10  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:37:10  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m05:37:10  Partial parsing enabled, no changes found, skipping parsing
[0m05:37:10  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:37:10  
[0m05:37:10  Acquiring new postgres connection 'master'
[0m05:37:10  Acquiring new postgres connection 'list_dbtsales'
[0m05:37:10  Using postgres connection "list_dbtsales"
[0m05:37:10  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:37:10  Opening a new connection, currently in state init
[0m05:37:10  SQL status: SELECT 5 in 0.0 seconds
[0m05:37:10  On list_dbtsales: Close
[0m05:37:10  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m05:37:10  Using postgres connection "list_dbtsales_public_stg"
[0m05:37:10  On list_dbtsales_public_stg: BEGIN
[0m05:37:10  Opening a new connection, currently in state init
[0m05:37:10  SQL status: BEGIN in 0.0 seconds
[0m05:37:10  Using postgres connection "list_dbtsales_public_stg"
[0m05:37:10  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:37:10  SQL status: SELECT 1 in 0.0 seconds
[0m05:37:10  On list_dbtsales_public_stg: ROLLBACK
[0m05:37:10  On list_dbtsales_public_stg: Close
[0m05:37:10  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m05:37:10  Using postgres connection "list_dbtsales_public"
[0m05:37:10  On list_dbtsales_public: BEGIN
[0m05:37:10  Opening a new connection, currently in state closed
[0m05:37:10  SQL status: BEGIN in 0.0 seconds
[0m05:37:10  Using postgres connection "list_dbtsales_public"
[0m05:37:10  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:37:10  SQL status: SELECT 3 in 0.0 seconds
[0m05:37:10  On list_dbtsales_public: ROLLBACK
[0m05:37:10  On list_dbtsales_public: Close
[0m05:37:10  Using postgres connection "master"
[0m05:37:10  On master: BEGIN
[0m05:37:10  Opening a new connection, currently in state init
[0m05:37:10  SQL status: BEGIN in 0.0 seconds
[0m05:37:10  Using postgres connection "master"
[0m05:37:10  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:37:10  SQL status: SELECT 1 in 0.0 seconds
[0m05:37:10  On master: ROLLBACK
[0m05:37:10  Using postgres connection "master"
[0m05:37:10  On master: BEGIN
[0m05:37:10  SQL status: BEGIN in 0.0 seconds
[0m05:37:10  On master: COMMIT
[0m05:37:10  Using postgres connection "master"
[0m05:37:10  On master: COMMIT
[0m05:37:10  SQL status: COMMIT in 0.0 seconds
[0m05:37:10  On master: Close
[0m05:37:10  Concurrency: 1 threads (target='dev')
[0m05:37:10  
[0m05:37:10  Began running node model.jaffle_shop.int_customers
[0m05:37:10  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:37:10  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:37:10  Began compiling node model.jaffle_shop.int_customers
[0m05:37:10  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:37:10  Timing info for model.jaffle_shop.int_customers (compile): 07:37:10.752619 => 07:37:10.776734
[0m05:37:10  Began executing node model.jaffle_shop.int_customers
[0m05:37:10  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:37:10  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:37:10  On model.jaffle_shop.int_customers: BEGIN
[0m05:37:10  Opening a new connection, currently in state init
[0m05:37:10  SQL status: BEGIN in 0.0 seconds
[0m05:37:10  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:37:10  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    GROUP BY customer_name

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        -- now() as dtupdated,
        -- 'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        -- 'null' as dtupdated,
        -- now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT * FROM updates UNION inserts
  );
  
  
[0m05:37:10  Postgres adapter: Postgres error: syntax error at or near "inserts"
LINE 59: SELECT * FROM updates UNION inserts
                                     ^

[0m05:37:10  On model.jaffle_shop.int_customers: ROLLBACK
[0m05:37:10  Timing info for model.jaffle_shop.int_customers (execute): 07:37:10.779757 => 07:37:10.870159
[0m05:37:10  On model.jaffle_shop.int_customers: Close
[0m05:37:10  Database Error in model int_customers (models\integration\int_customers.sql)
  syntax error at or near "inserts"
  LINE 59: SELECT * FROM updates UNION inserts
                                       ^
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:37:10  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.13s]
[0m05:37:10  Finished running node model.jaffle_shop.int_customers
[0m05:37:10  Began running node model.jaffle_shop.int_sales
[0m05:37:10  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:37:10  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:37:10  Opening a new connection, currently in state closed
[0m05:37:10  Began compiling node model.jaffle_shop.int_sales
[0m05:37:10  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:37:10  Timing info for model.jaffle_shop.int_sales (compile): 07:37:10.887391 => 07:37:10.894910
[0m05:37:10  Began executing node model.jaffle_shop.int_sales
[0m05:37:10  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:37:10  Postgres adapter: Cancelling query 'model.jaffle_shop.int_sales' (684)
[0m05:37:10  Using postgres connection "master"
[0m05:37:10  On master: BEGIN
[0m05:37:10  Opening a new connection, currently in state closed
[0m05:37:10  SQL status: BEGIN in 0.0 seconds
[0m05:37:10  Using postgres connection "master"
[0m05:37:10  On master: select pg_terminate_backend(684)
[0m05:37:10  SQL status: SELECT 1 in 0.0 seconds
[0m05:37:10  Postgres adapter: Cancel query 'model.jaffle_shop.int_sales': (True,)
[0m05:37:10  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m05:37:10  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:37:10  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m05:37:10  On model.jaffle_shop.int_sales: BEGIN
[0m05:37:10  CANCEL query model.jaffle_shop.int_sales ....................................... [[31mCANCEL[0m]
[0m05:37:10  Postgres adapter: Postgres error: could not receive data from server: Software caused connection abort (0x00002745/10053)

[0m05:37:10  On master: ROLLBACK
[0m05:37:10  Timing info for model.jaffle_shop.int_sales (execute): 07:37:10.898905 => 07:37:10.964413
[0m05:37:10  On model.jaffle_shop.int_sales: Close
[0m05:37:10  On master: Close
[0m05:37:10  Database Error in model int_sales (models\integration\int_sales.sql)
  could not receive data from server: Software caused connection abort (0x00002745/10053)
  compiled Code at target\run\jaffle_shop\models\integration\int_sales.sql
[0m05:37:10  2 of 2 ERROR creating sql table model public.int_sales ......................... [[31mERROR[0m in 0.09s]
[0m05:37:10  Finished running node model.jaffle_shop.int_sales
[0m05:37:10  
[0m05:37:10  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:37:10    syntax error at or near "inserts"
[0m05:37:10    LINE 59: SELECT * FROM updates UNION inserts
[0m05:37:10                                         ^
[0m05:37:10    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:37:10  Using postgres connection "master"
[0m05:37:10  On master: BEGIN
[0m05:37:10  Opening a new connection, currently in state closed
[0m05:37:10  SQL status: BEGIN in 0.0 seconds
[0m05:37:11  On master: COMMIT
[0m05:37:11  Using postgres connection "master"
[0m05:37:11  On master: COMMIT
[0m05:37:11  SQL status: COMMIT in 0.0 seconds
[0m05:37:11  On master: Close
[0m05:37:11  Connection 'master' was properly closed.
[0m05:37:11  Connection 'list_dbtsales' was properly closed.
[0m05:37:11  Connection 'list_dbtsales_public' was properly closed.
[0m05:37:11  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:37:11  
[0m05:37:11  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.46 seconds (0.46s).
[0m05:37:11  Command end result
[0m05:37:11  
[0m05:37:11  [31mCompleted with 2 errors and 0 warnings:[0m
[0m05:37:11  
[0m05:37:11  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:37:11    syntax error at or near "inserts"
[0m05:37:11    LINE 59: SELECT * FROM updates UNION inserts
[0m05:37:11                                         ^
[0m05:37:11    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:37:11  
[0m05:37:11  [33mSkipping due to fail_fast[0m
[0m05:37:11  
[0m05:37:11  Done. PASS=0 WARN=0 ERROR=1 SKIP=1 TOTAL=2
[0m05:37:11  Command `dbt run` failed at 07:37:11.085925 after 0.81 seconds
[0m05:37:11  Flushing usage events
[0m05:49:06  Running with dbt=1.6.0
[0m05:49:06  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'invocation_command': 'dbt run -m staging', 'target_path': 'None', 'log_format': 'text', 'send_anonymous_usage_stats': 'False'}
[0m05:49:06  Registered adapter: postgres=1.6.0
[0m05:49:06  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:49:06  Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m05:49:06  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m05:49:06  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m05:49:06  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:49:06  
[0m05:49:06  Acquiring new postgres connection 'master'
[0m05:49:06  Acquiring new postgres connection 'list_dbtsales'
[0m05:49:06  Using postgres connection "list_dbtsales"
[0m05:49:06  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:49:07  Opening a new connection, currently in state init
[0m05:49:07  SQL status: SELECT 5 in 0.0 seconds
[0m05:49:07  On list_dbtsales: Close
[0m05:49:07  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m05:49:07  Using postgres connection "list_dbtsales_public_stg"
[0m05:49:07  On list_dbtsales_public_stg: BEGIN
[0m05:49:07  Opening a new connection, currently in state init
[0m05:49:07  SQL status: BEGIN in 0.0 seconds
[0m05:49:07  Using postgres connection "list_dbtsales_public_stg"
[0m05:49:07  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:49:07  SQL status: SELECT 1 in 0.0 seconds
[0m05:49:07  On list_dbtsales_public_stg: ROLLBACK
[0m05:49:07  On list_dbtsales_public_stg: Close
[0m05:49:07  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m05:49:07  Using postgres connection "list_dbtsales_public"
[0m05:49:07  On list_dbtsales_public: BEGIN
[0m05:49:07  Opening a new connection, currently in state closed
[0m05:49:07  SQL status: BEGIN in 0.0 seconds
[0m05:49:07  Using postgres connection "list_dbtsales_public"
[0m05:49:07  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:49:07  SQL status: SELECT 4 in 0.0 seconds
[0m05:49:07  On list_dbtsales_public: ROLLBACK
[0m05:49:07  On list_dbtsales_public: Close
[0m05:49:07  Using postgres connection "master"
[0m05:49:07  On master: BEGIN
[0m05:49:07  Opening a new connection, currently in state init
[0m05:49:07  SQL status: BEGIN in 0.0 seconds
[0m05:49:07  Using postgres connection "master"
[0m05:49:07  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:49:07  SQL status: SELECT 1 in 0.0 seconds
[0m05:49:07  On master: ROLLBACK
[0m05:49:07  Using postgres connection "master"
[0m05:49:07  On master: BEGIN
[0m05:49:07  SQL status: BEGIN in 0.0 seconds
[0m05:49:07  On master: COMMIT
[0m05:49:07  Using postgres connection "master"
[0m05:49:07  On master: COMMIT
[0m05:49:07  SQL status: COMMIT in 0.0 seconds
[0m05:49:07  On master: Close
[0m05:49:07  Concurrency: 1 threads (target='dev')
[0m05:49:07  
[0m05:49:07  Began running node model.jaffle_shop.stg_customers
[0m05:49:07  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m05:49:07  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m05:49:07  Began compiling node model.jaffle_shop.stg_customers
[0m05:49:07  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m05:49:07  Timing info for model.jaffle_shop.stg_customers (compile): 07:49:07.211344 => 07:49:07.219258
[0m05:49:07  Began executing node model.jaffle_shop.stg_customers
[0m05:49:07  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m05:49:07  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:49:07  On model.jaffle_shop.stg_customers: BEGIN
[0m05:49:07  Opening a new connection, currently in state init
[0m05:49:07  SQL status: BEGIN in 0.0 seconds
[0m05:49:07  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:49:07  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select distinct
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select 
        md5(cast(coalesce(cast(customername as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select  customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        dtloaded
from renamed
  );
[0m05:49:07  SQL status: CREATE VIEW in 0.0 seconds
[0m05:49:07  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:49:07  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m05:49:07  SQL status: ALTER TABLE in 0.0 seconds
[0m05:49:07  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:49:07  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m05:49:07  SQL status: ALTER TABLE in 0.0 seconds
[0m05:49:07  On model.jaffle_shop.stg_customers: COMMIT
[0m05:49:07  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:49:07  On model.jaffle_shop.stg_customers: COMMIT
[0m05:49:07  SQL status: COMMIT in 0.0 seconds
[0m05:49:07  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:49:07  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m05:49:07  SQL status: DROP VIEW in 0.0 seconds
[0m05:49:07  Timing info for model.jaffle_shop.stg_customers (execute): 07:49:07.222257 => 07:49:07.395713
[0m05:49:07  On model.jaffle_shop.stg_customers: Close
[0m05:49:07  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.19s]
[0m05:49:07  Finished running node model.jaffle_shop.stg_customers
[0m05:49:07  Using postgres connection "master"
[0m05:49:07  On master: BEGIN
[0m05:49:07  Opening a new connection, currently in state closed
[0m05:49:07  SQL status: BEGIN in 0.0 seconds
[0m05:49:07  On master: COMMIT
[0m05:49:07  Using postgres connection "master"
[0m05:49:07  On master: COMMIT
[0m05:49:07  SQL status: COMMIT in 0.0 seconds
[0m05:49:07  On master: Close
[0m05:49:07  Connection 'master' was properly closed.
[0m05:49:07  Connection 'list_dbtsales' was properly closed.
[0m05:49:07  Connection 'list_dbtsales_public' was properly closed.
[0m05:49:07  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m05:49:07  
[0m05:49:07  Finished running 1 view model in 0 hours 0 minutes and 0.48 seconds (0.48s).
[0m05:49:07  Command end result
[0m05:49:07  
[0m05:49:07  [32mCompleted successfully[0m
[0m05:49:07  
[0m05:49:07  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m05:49:07  Command `dbt run` succeeded at 07:49:07.488167 after 0.92 seconds
[0m05:49:07  Flushing usage events
[0m05:50:08  Running with dbt=1.6.0
[0m05:50:08  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'invocation_command': 'dbt run -m staging', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'False'}
[0m05:50:08  Registered adapter: postgres=1.6.0
[0m05:50:08  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:50:08  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m05:50:08  Partial parsing enabled, no changes found, skipping parsing
[0m05:50:08  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:50:08  
[0m05:50:08  Acquiring new postgres connection 'master'
[0m05:50:08  Acquiring new postgres connection 'list_dbtsales'
[0m05:50:08  Using postgres connection "list_dbtsales"
[0m05:50:08  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:50:08  Opening a new connection, currently in state init
[0m05:50:08  SQL status: SELECT 5 in 0.0 seconds
[0m05:50:08  On list_dbtsales: Close
[0m05:50:08  Acquiring new postgres connection 'list_dbtsales_public'
[0m05:50:08  Using postgres connection "list_dbtsales_public"
[0m05:50:08  On list_dbtsales_public: BEGIN
[0m05:50:08  Opening a new connection, currently in state init
[0m05:50:08  SQL status: BEGIN in 0.0 seconds
[0m05:50:08  Using postgres connection "list_dbtsales_public"
[0m05:50:08  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:50:08  SQL status: SELECT 4 in 0.0 seconds
[0m05:50:08  On list_dbtsales_public: ROLLBACK
[0m05:50:08  On list_dbtsales_public: Close
[0m05:50:08  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m05:50:08  Using postgres connection "list_dbtsales_public_stg"
[0m05:50:08  On list_dbtsales_public_stg: BEGIN
[0m05:50:08  Opening a new connection, currently in state closed
[0m05:50:08  SQL status: BEGIN in 0.0 seconds
[0m05:50:08  Using postgres connection "list_dbtsales_public_stg"
[0m05:50:08  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:50:08  SQL status: SELECT 0 in 0.0 seconds
[0m05:50:08  On list_dbtsales_public_stg: ROLLBACK
[0m05:50:08  On list_dbtsales_public_stg: Close
[0m05:50:08  Using postgres connection "master"
[0m05:50:08  On master: BEGIN
[0m05:50:08  Opening a new connection, currently in state init
[0m05:50:08  SQL status: BEGIN in 0.0 seconds
[0m05:50:08  Using postgres connection "master"
[0m05:50:08  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:50:08  SQL status: SELECT 0 in 0.0 seconds
[0m05:50:08  On master: ROLLBACK
[0m05:50:08  Using postgres connection "master"
[0m05:50:08  On master: BEGIN
[0m05:50:08  SQL status: BEGIN in 0.0 seconds
[0m05:50:08  On master: COMMIT
[0m05:50:08  Using postgres connection "master"
[0m05:50:08  On master: COMMIT
[0m05:50:08  SQL status: COMMIT in 0.0 seconds
[0m05:50:08  On master: Close
[0m05:50:08  Concurrency: 1 threads (target='dev')
[0m05:50:08  
[0m05:50:08  Began running node model.jaffle_shop.stg_customers
[0m05:50:08  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m05:50:08  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m05:50:08  Began compiling node model.jaffle_shop.stg_customers
[0m05:50:08  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m05:50:08  Timing info for model.jaffle_shop.stg_customers (compile): 07:50:08.816367 => 07:50:08.835701
[0m05:50:08  Began executing node model.jaffle_shop.stg_customers
[0m05:50:08  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m05:50:08  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:50:08  On model.jaffle_shop.stg_customers: BEGIN
[0m05:50:08  Opening a new connection, currently in state init
[0m05:50:08  SQL status: BEGIN in 0.0 seconds
[0m05:50:08  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:50:08  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select distinct
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select 
        md5(cast(coalesce(cast(customername as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select  customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        dtloaded
from renamed
  );
[0m05:50:08  SQL status: CREATE VIEW in 0.0 seconds
[0m05:50:08  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:50:08  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m05:50:08  SQL status: ALTER TABLE in 0.0 seconds
[0m05:50:08  On model.jaffle_shop.stg_customers: COMMIT
[0m05:50:08  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:50:08  On model.jaffle_shop.stg_customers: COMMIT
[0m05:50:08  SQL status: COMMIT in 0.0 seconds
[0m05:50:08  Using postgres connection "model.jaffle_shop.stg_customers"
[0m05:50:08  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m05:50:08  SQL status: DROP VIEW in 0.0 seconds
[0m05:50:08  Timing info for model.jaffle_shop.stg_customers (execute): 07:50:08.837699 => 07:50:08.967998
[0m05:50:08  On model.jaffle_shop.stg_customers: Close
[0m05:50:08  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.16s]
[0m05:50:08  Finished running node model.jaffle_shop.stg_customers
[0m05:50:08  Using postgres connection "master"
[0m05:50:08  On master: BEGIN
[0m05:50:08  Opening a new connection, currently in state closed
[0m05:50:09  SQL status: BEGIN in 0.0 seconds
[0m05:50:09  On master: COMMIT
[0m05:50:09  Using postgres connection "master"
[0m05:50:09  On master: COMMIT
[0m05:50:09  SQL status: COMMIT in 0.0 seconds
[0m05:50:09  On master: Close
[0m05:50:09  Connection 'master' was properly closed.
[0m05:50:09  Connection 'list_dbtsales' was properly closed.
[0m05:50:09  Connection 'list_dbtsales_public_stg' was properly closed.
[0m05:50:09  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m05:50:09  
[0m05:50:09  Finished running 1 view model in 0 hours 0 minutes and 0.45 seconds (0.45s).
[0m05:50:09  Command end result
[0m05:50:09  
[0m05:50:09  [32mCompleted successfully[0m
[0m05:50:09  
[0m05:50:09  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m05:50:09  Command `dbt run` succeeded at 07:50:09.092631 after 0.81 seconds
[0m05:50:09  Flushing usage events
[0m05:52:30  Running with dbt=1.6.0
[0m05:52:30  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run -m integration', 'target_path': 'None', 'log_format': 'text', 'send_anonymous_usage_stats': 'False'}
[0m05:52:30  Registered adapter: postgres=1.6.0
[0m05:52:30  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:52:30  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m05:52:30  Partial parsing enabled, no changes found, skipping parsing
[0m05:52:30  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:52:30  
[0m05:52:30  Acquiring new postgres connection 'master'
[0m05:52:30  Acquiring new postgres connection 'list_dbtsales'
[0m05:52:30  Using postgres connection "list_dbtsales"
[0m05:52:30  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:52:30  Opening a new connection, currently in state init
[0m05:52:30  SQL status: SELECT 5 in 0.0 seconds
[0m05:52:30  On list_dbtsales: Close
[0m05:52:30  Acquiring new postgres connection 'list_dbtsales_public'
[0m05:52:30  Using postgres connection "list_dbtsales_public"
[0m05:52:30  On list_dbtsales_public: BEGIN
[0m05:52:30  Opening a new connection, currently in state init
[0m05:52:30  SQL status: BEGIN in 0.0 seconds
[0m05:52:30  Using postgres connection "list_dbtsales_public"
[0m05:52:30  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:52:30  SQL status: SELECT 4 in 0.0 seconds
[0m05:52:30  On list_dbtsales_public: ROLLBACK
[0m05:52:30  On list_dbtsales_public: Close
[0m05:52:30  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m05:52:30  Using postgres connection "list_dbtsales_public_stg"
[0m05:52:30  On list_dbtsales_public_stg: BEGIN
[0m05:52:30  Opening a new connection, currently in state closed
[0m05:52:30  SQL status: BEGIN in 0.0 seconds
[0m05:52:30  Using postgres connection "list_dbtsales_public_stg"
[0m05:52:30  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:52:30  SQL status: SELECT 1 in 0.0 seconds
[0m05:52:30  On list_dbtsales_public_stg: ROLLBACK
[0m05:52:30  On list_dbtsales_public_stg: Close
[0m05:52:30  Using postgres connection "master"
[0m05:52:30  On master: BEGIN
[0m05:52:30  Opening a new connection, currently in state init
[0m05:52:30  SQL status: BEGIN in 0.0 seconds
[0m05:52:30  Using postgres connection "master"
[0m05:52:30  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:52:30  SQL status: SELECT 1 in 0.0 seconds
[0m05:52:30  On master: ROLLBACK
[0m05:52:31  Using postgres connection "master"
[0m05:52:31  On master: BEGIN
[0m05:52:31  SQL status: BEGIN in 0.0 seconds
[0m05:52:31  On master: COMMIT
[0m05:52:31  Using postgres connection "master"
[0m05:52:31  On master: COMMIT
[0m05:52:31  SQL status: COMMIT in 0.0 seconds
[0m05:52:31  On master: Close
[0m05:52:31  Concurrency: 1 threads (target='dev')
[0m05:52:31  
[0m05:52:31  Began running node model.jaffle_shop.int_customers
[0m05:52:31  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:52:31  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:52:31  Began compiling node model.jaffle_shop.int_customers
[0m05:52:31  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:52:31  Timing info for model.jaffle_shop.int_customers (compile): 07:52:31.022992 => 07:52:31.057513
[0m05:52:31  Began executing node model.jaffle_shop.int_customers
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:52:31  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

    
  
    

  create temporary table "int_customers__dbt_tmp075231101618"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

        WHERE dtloaded > (SELECT MAX(dtloaded) FROM "dbtsales"."public"."int_customers")

    

    GROUP BY customer_name, customer_id

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        -- now() as dtupdated,
        -- 'null' as dtinserted,
        dtloaded

    FROM using_clause

    

        WHERE customer_name IN (SELECT customer_name FROM "dbtsales"."public"."int_customers")

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        -- 'null' as dtupdated,
        -- now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT customer_id,customer_name,dtloaded
FROM updates
UNION
SELECT customer_id,customer_name,dtloaded
FROM inserts
  );
  
  
[0m05:52:31  Opening a new connection, currently in state init
[0m05:52:31  SQL status: SELECT 0 in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:52:31  On model.jaffle_shop.int_customers: BEGIN
[0m05:52:31  SQL status: BEGIN in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:52:31  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from INFORMATION_SCHEMA.columns
      where table_name = 'int_customers__dbt_tmp075231101618'
        
      order by ordinal_position

  
[0m05:52:31  SQL status: SELECT 3 in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:52:31  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'int_customers'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m05:52:31  SQL status: SELECT 3 in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:52:31  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'int_customers'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m05:52:31  SQL status: SELECT 3 in 0.0 seconds
[0m05:52:31  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:52:31  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      -- back compat for old kwarg name
  
  
        
            
            
        
    

    

    merge into "dbtsales"."public"."int_customers" as DBT_INTERNAL_DEST
        using "int_customers__dbt_tmp075231101618" as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.customer_name = DBT_INTERNAL_DEST.customer_name
            )

    
    when matched then update set
        "customer_id" = DBT_INTERNAL_SOURCE."customer_id","customer_name" = DBT_INTERNAL_SOURCE."customer_name","dtloaded" = DBT_INTERNAL_SOURCE."dtloaded"
    

    when not matched then insert
        ("customer_id", "customer_name", "dtloaded")
    values
        ("customer_id", "customer_name", "dtloaded")


  
[0m05:52:31  SQL status: MERGE 0 in 0.0 seconds
[0m05:52:31  On model.jaffle_shop.int_customers: COMMIT
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:52:31  On model.jaffle_shop.int_customers: COMMIT
[0m05:52:31  SQL status: COMMIT in 0.0 seconds
[0m05:52:31  Timing info for model.jaffle_shop.int_customers (execute): 07:52:31.066517 => 07:52:31.357292
[0m05:52:31  On model.jaffle_shop.int_customers: Close
[0m05:52:31  1 of 2 OK created sql incremental model public.int_customers ................... [[32mMERGE 0[0m in 0.34s]
[0m05:52:31  Finished running node model.jaffle_shop.int_customers
[0m05:52:31  Began running node model.jaffle_shop.int_sales
[0m05:52:31  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:52:31  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:52:31  Began compiling node model.jaffle_shop.int_sales
[0m05:52:31  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:52:31  Timing info for model.jaffle_shop.int_sales (compile): 07:52:31.368289 => 07:52:31.373295
[0m05:52:31  Began executing node model.jaffle_shop.int_sales
[0m05:52:31  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:52:31  On model.jaffle_shop.int_sales: BEGIN
[0m05:52:31  Opening a new connection, currently in state closed
[0m05:52:31  SQL status: BEGIN in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:52:31  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m05:52:31  SQL status: SELECT 2823 in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:52:31  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m05:52:31  SQL status: ALTER TABLE in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:52:31  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m05:52:31  SQL status: ALTER TABLE in 0.0 seconds
[0m05:52:31  On model.jaffle_shop.int_sales: COMMIT
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:52:31  On model.jaffle_shop.int_sales: COMMIT
[0m05:52:31  SQL status: COMMIT in 0.0 seconds
[0m05:52:31  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:52:31  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m05:52:31  SQL status: DROP TABLE in 0.0 seconds
[0m05:52:31  Timing info for model.jaffle_shop.int_sales (execute): 07:52:31.377299 => 07:52:31.484856
[0m05:52:31  On model.jaffle_shop.int_sales: Close
[0m05:52:31  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.12s]
[0m05:52:31  Finished running node model.jaffle_shop.int_sales
[0m05:52:31  Using postgres connection "master"
[0m05:52:31  On master: BEGIN
[0m05:52:31  Opening a new connection, currently in state closed
[0m05:52:31  SQL status: BEGIN in 0.0 seconds
[0m05:52:31  On master: COMMIT
[0m05:52:31  Using postgres connection "master"
[0m05:52:31  On master: COMMIT
[0m05:52:31  SQL status: COMMIT in 0.0 seconds
[0m05:52:31  On master: Close
[0m05:52:31  Connection 'master' was properly closed.
[0m05:52:31  Connection 'list_dbtsales' was properly closed.
[0m05:52:31  Connection 'list_dbtsales_public_stg' was properly closed.
[0m05:52:31  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:52:31  
[0m05:52:31  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.80 seconds (0.80s).
[0m05:52:31  Command end result
[0m05:52:31  
[0m05:52:31  [32mCompleted successfully[0m
[0m05:52:31  
[0m05:52:31  Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
[0m05:52:31  Command `dbt run` succeeded at 07:52:31.566413 after 1.10 seconds
[0m05:52:31  Flushing usage events
[0m05:53:05  Running with dbt=1.6.0
[0m05:53:05  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run --full-refresh -m integration', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'False'}
[0m05:53:05  Registered adapter: postgres=1.6.0
[0m05:53:05  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:53:05  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m05:53:05  Partial parsing enabled, no changes found, skipping parsing
[0m05:53:05  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:53:05  
[0m05:53:05  Acquiring new postgres connection 'master'
[0m05:53:05  Acquiring new postgres connection 'list_dbtsales'
[0m05:53:05  Using postgres connection "list_dbtsales"
[0m05:53:05  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:53:05  Opening a new connection, currently in state init
[0m05:53:05  SQL status: SELECT 7 in 0.0 seconds
[0m05:53:05  On list_dbtsales: Close
[0m05:53:05  Acquiring new postgres connection 'list_dbtsales_public'
[0m05:53:05  Using postgres connection "list_dbtsales_public"
[0m05:53:05  On list_dbtsales_public: BEGIN
[0m05:53:05  Opening a new connection, currently in state init
[0m05:53:05  SQL status: BEGIN in 0.0 seconds
[0m05:53:05  Using postgres connection "list_dbtsales_public"
[0m05:53:05  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:53:05  SQL status: SELECT 4 in 0.0 seconds
[0m05:53:05  On list_dbtsales_public: ROLLBACK
[0m05:53:05  On list_dbtsales_public: Close
[0m05:53:05  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m05:53:05  Using postgres connection "list_dbtsales_public_stg"
[0m05:53:05  On list_dbtsales_public_stg: BEGIN
[0m05:53:05  Opening a new connection, currently in state closed
[0m05:53:05  SQL status: BEGIN in 0.0 seconds
[0m05:53:05  Using postgres connection "list_dbtsales_public_stg"
[0m05:53:05  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:53:05  SQL status: SELECT 1 in 0.0 seconds
[0m05:53:05  On list_dbtsales_public_stg: ROLLBACK
[0m05:53:05  On list_dbtsales_public_stg: Close
[0m05:53:05  Using postgres connection "master"
[0m05:53:05  On master: BEGIN
[0m05:53:05  Opening a new connection, currently in state init
[0m05:53:05  SQL status: BEGIN in 0.0 seconds
[0m05:53:05  Using postgres connection "master"
[0m05:53:05  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:53:05  SQL status: SELECT 1 in 0.0 seconds
[0m05:53:05  On master: ROLLBACK
[0m05:53:05  Using postgres connection "master"
[0m05:53:05  On master: BEGIN
[0m05:53:05  SQL status: BEGIN in 0.0 seconds
[0m05:53:05  On master: COMMIT
[0m05:53:05  Using postgres connection "master"
[0m05:53:05  On master: COMMIT
[0m05:53:05  SQL status: COMMIT in 0.0 seconds
[0m05:53:05  On master: Close
[0m05:53:05  Concurrency: 1 threads (target='dev')
[0m05:53:05  
[0m05:53:05  Began running node model.jaffle_shop.int_customers
[0m05:53:05  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:53:05  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:53:05  Began compiling node model.jaffle_shop.int_customers
[0m05:53:05  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:53:05  Timing info for model.jaffle_shop.int_customers (compile): 07:53:05.737044 => 07:53:05.762177
[0m05:53:05  Began executing node model.jaffle_shop.int_customers
[0m05:53:05  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:53:05  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:53:05  On model.jaffle_shop.int_customers: BEGIN
[0m05:53:05  Opening a new connection, currently in state init
[0m05:53:05  SQL status: BEGIN in 0.0 seconds
[0m05:53:05  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:53:05  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers__dbt_tmp"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    GROUP BY customer_name, customer_id

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        -- now() as dtupdated,
        -- 'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        -- 'null' as dtupdated,
        -- now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT customer_id,customer_name,dtloaded
FROM updates
UNION
SELECT customer_id,customer_name,dtloaded
FROM inserts
  );
  
  
[0m05:53:05  SQL status: SELECT 92 in 0.0 seconds
[0m05:53:05  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:53:05  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */
alter table "dbtsales"."public"."int_customers" rename to "int_customers__dbt_backup"
[0m05:53:05  SQL status: ALTER TABLE in 0.0 seconds
[0m05:53:05  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:53:05  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */
alter table "dbtsales"."public"."int_customers__dbt_tmp" rename to "int_customers"
[0m05:53:05  SQL status: ALTER TABLE in 0.0 seconds
[0m05:53:05  On model.jaffle_shop.int_customers: COMMIT
[0m05:53:05  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:53:05  On model.jaffle_shop.int_customers: COMMIT
[0m05:53:05  SQL status: COMMIT in 0.0 seconds
[0m05:53:05  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:53:05  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */
drop table if exists "dbtsales"."public"."int_customers__dbt_backup" cascade
[0m05:53:05  SQL status: DROP TABLE in 0.0 seconds
[0m05:53:05  Timing info for model.jaffle_shop.int_customers (execute): 07:53:05.764474 => 07:53:05.983424
[0m05:53:05  On model.jaffle_shop.int_customers: Close
[0m05:53:05  1 of 2 OK created sql incremental model public.int_customers ................... [[32mSELECT 92[0m in 0.25s]
[0m05:53:05  Finished running node model.jaffle_shop.int_customers
[0m05:53:05  Began running node model.jaffle_shop.int_sales
[0m05:53:05  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:53:05  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:53:05  Began compiling node model.jaffle_shop.int_sales
[0m05:53:05  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:53:06  Timing info for model.jaffle_shop.int_sales (compile): 07:53:05.996422 => 07:53:06.000424
[0m05:53:06  Began executing node model.jaffle_shop.int_sales
[0m05:53:06  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:53:06  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:53:06  On model.jaffle_shop.int_sales: BEGIN
[0m05:53:06  Opening a new connection, currently in state closed
[0m05:53:06  SQL status: BEGIN in 0.0 seconds
[0m05:53:06  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:53:06  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m05:53:06  SQL status: SELECT 2823 in 0.0 seconds
[0m05:53:06  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:53:06  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m05:53:06  SQL status: ALTER TABLE in 0.0 seconds
[0m05:53:06  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:53:06  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m05:53:06  SQL status: ALTER TABLE in 0.0 seconds
[0m05:53:06  On model.jaffle_shop.int_sales: COMMIT
[0m05:53:06  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:53:06  On model.jaffle_shop.int_sales: COMMIT
[0m05:53:06  SQL status: COMMIT in 0.0 seconds
[0m05:53:06  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:53:06  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m05:53:06  SQL status: DROP TABLE in 0.0 seconds
[0m05:53:06  Timing info for model.jaffle_shop.int_sales (execute): 07:53:06.003425 => 07:53:06.129247
[0m05:53:06  On model.jaffle_shop.int_sales: Close
[0m05:53:06  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.14s]
[0m05:53:06  Finished running node model.jaffle_shop.int_sales
[0m05:53:06  Using postgres connection "master"
[0m05:53:06  On master: BEGIN
[0m05:53:06  Opening a new connection, currently in state closed
[0m05:53:06  SQL status: BEGIN in 0.0 seconds
[0m05:53:06  On master: COMMIT
[0m05:53:06  Using postgres connection "master"
[0m05:53:06  On master: COMMIT
[0m05:53:06  SQL status: COMMIT in 0.0 seconds
[0m05:53:06  On master: Close
[0m05:53:06  Connection 'master' was properly closed.
[0m05:53:06  Connection 'list_dbtsales' was properly closed.
[0m05:53:06  Connection 'list_dbtsales_public_stg' was properly closed.
[0m05:53:06  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:53:06  
[0m05:53:06  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.70 seconds (0.70s).
[0m05:53:06  Command end result
[0m05:53:06  
[0m05:53:06  [32mCompleted successfully[0m
[0m05:53:06  
[0m05:53:06  Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
[0m05:53:06  Command `dbt run` succeeded at 07:53:06.218113 after 1.00 seconds
[0m05:53:06  Flushing usage events
[0m05:57:41  Running with dbt=1.6.0
[0m05:57:41  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'invocation_command': 'dbt run --full-refresh -m integration', 'static_parser': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'False'}
[0m05:57:41  Registered adapter: postgres=1.6.0
[0m05:57:41  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:57:41  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m05:57:41  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m05:57:41  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:57:41  
[0m05:57:41  Acquiring new postgres connection 'master'
[0m05:57:41  Acquiring new postgres connection 'list_dbtsales'
[0m05:57:41  Using postgres connection "list_dbtsales"
[0m05:57:41  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:57:41  Opening a new connection, currently in state init
[0m05:57:41  SQL status: SELECT 7 in 0.0 seconds
[0m05:57:41  On list_dbtsales: Close
[0m05:57:41  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m05:57:41  Using postgres connection "list_dbtsales_public_stg"
[0m05:57:41  On list_dbtsales_public_stg: BEGIN
[0m05:57:41  Opening a new connection, currently in state init
[0m05:57:41  SQL status: BEGIN in 0.0 seconds
[0m05:57:41  Using postgres connection "list_dbtsales_public_stg"
[0m05:57:41  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:57:41  SQL status: SELECT 1 in 0.0 seconds
[0m05:57:41  On list_dbtsales_public_stg: ROLLBACK
[0m05:57:41  On list_dbtsales_public_stg: Close
[0m05:57:41  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m05:57:41  Using postgres connection "list_dbtsales_public"
[0m05:57:41  On list_dbtsales_public: BEGIN
[0m05:57:41  Opening a new connection, currently in state closed
[0m05:57:41  SQL status: BEGIN in 0.0 seconds
[0m05:57:41  Using postgres connection "list_dbtsales_public"
[0m05:57:41  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:57:41  SQL status: SELECT 4 in 0.0 seconds
[0m05:57:41  On list_dbtsales_public: ROLLBACK
[0m05:57:41  On list_dbtsales_public: Close
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: BEGIN
[0m05:57:41  Opening a new connection, currently in state init
[0m05:57:41  SQL status: BEGIN in 0.0 seconds
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:57:41  SQL status: SELECT 1 in 0.0 seconds
[0m05:57:41  On master: ROLLBACK
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: BEGIN
[0m05:57:41  SQL status: BEGIN in 0.0 seconds
[0m05:57:41  On master: COMMIT
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: COMMIT
[0m05:57:41  SQL status: COMMIT in 0.0 seconds
[0m05:57:41  On master: Close
[0m05:57:41  Concurrency: 1 threads (target='dev')
[0m05:57:41  
[0m05:57:41  Began running node model.jaffle_shop.int_customers
[0m05:57:41  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:57:41  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:57:41  Began compiling node model.jaffle_shop.int_customers
[0m05:57:41  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:57:41  Timing info for model.jaffle_shop.int_customers (compile): 07:57:41.687978 => 07:57:41.696980
[0m05:57:41  Began executing node model.jaffle_shop.int_customers
[0m05:57:41  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:57:41  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:57:41  On model.jaffle_shop.int_customers: BEGIN
[0m05:57:41  Opening a new connection, currently in state init
[0m05:57:41  SQL status: BEGIN in 0.0 seconds
[0m05:57:41  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:57:41  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers__dbt_tmp"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    GROUP BY customer_name, customer_id

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        now() as dtupdated,
        'null' as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        'null' as dtupdated,
        now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT customer_id,customer_name,dtloaded,dtupdated,cast(dtinserted as timestamp)
FROM updates
UNION
SELECT customer_id,customer_name,dtloaded,cast(dtupdated as timestamp),dtinserted
FROM inserts
  );
  
  
[0m05:57:41  Postgres adapter: Postgres error: invalid input syntax for type timestamp: "null"

[0m05:57:41  On model.jaffle_shop.int_customers: ROLLBACK
[0m05:57:41  Timing info for model.jaffle_shop.int_customers (execute): 07:57:41.699484 => 07:57:41.819975
[0m05:57:41  On model.jaffle_shop.int_customers: Close
[0m05:57:41  Database Error in model int_customers (models\integration\int_customers.sql)
  invalid input syntax for type timestamp: "null"
  compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:57:41  1 of 2 ERROR creating sql incremental model public.int_customers ............... [[31mERROR[0m in 0.15s]
[0m05:57:41  Finished running node model.jaffle_shop.int_customers
[0m05:57:41  Began running node model.jaffle_shop.int_sales
[0m05:57:41  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:57:41  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:57:41  Opening a new connection, currently in state closed
[0m05:57:41  Began compiling node model.jaffle_shop.int_sales
[0m05:57:41  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:57:41  Timing info for model.jaffle_shop.int_sales (compile): 07:57:41.838178 => 07:57:41.843180
[0m05:57:41  Began executing node model.jaffle_shop.int_sales
[0m05:57:41  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:57:41  Postgres adapter: Cancelling query 'model.jaffle_shop.int_sales' (780)
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: BEGIN
[0m05:57:41  Opening a new connection, currently in state closed
[0m05:57:41  SQL status: BEGIN in 0.0 seconds
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: select pg_terminate_backend(780)
[0m05:57:41  SQL status: SELECT 1 in 0.0 seconds
[0m05:57:41  Postgres adapter: Cancel query 'model.jaffle_shop.int_sales': (True,)
[0m05:57:41  CANCEL query list_dbtsales ..................................................... [[31mCANCEL[0m]
[0m05:57:41  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:57:41  CANCEL query list_dbtsales_public .............................................. [[31mCANCEL[0m]
[0m05:57:41  On model.jaffle_shop.int_sales: BEGIN
[0m05:57:41  CANCEL query model.jaffle_shop.int_sales ....................................... [[31mCANCEL[0m]
[0m05:57:41  On master: ROLLBACK
[0m05:57:41  Postgres adapter: Postgres error: could not receive data from server: Software caused connection abort (0x00002745/10053)

[0m05:57:41  Timing info for model.jaffle_shop.int_sales (execute): 07:57:41.846178 => 07:57:41.893832
[0m05:57:41  On master: Close
[0m05:57:41  On model.jaffle_shop.int_sales: Close
[0m05:57:41  Database Error in model int_sales (models\integration\int_sales.sql)
  could not receive data from server: Software caused connection abort (0x00002745/10053)
  compiled Code at target\run\jaffle_shop\models\integration\int_sales.sql
[0m05:57:41  2 of 2 ERROR creating sql table model public.int_sales ......................... [[31mERROR[0m in 0.07s]
[0m05:57:41  Finished running node model.jaffle_shop.int_sales
[0m05:57:41  
[0m05:57:41  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:57:41    invalid input syntax for type timestamp: "null"
[0m05:57:41    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: BEGIN
[0m05:57:41  Opening a new connection, currently in state closed
[0m05:57:41  SQL status: BEGIN in 0.0 seconds
[0m05:57:41  On master: COMMIT
[0m05:57:41  Using postgres connection "master"
[0m05:57:41  On master: COMMIT
[0m05:57:41  SQL status: COMMIT in 0.0 seconds
[0m05:57:41  On master: Close
[0m05:57:41  Connection 'master' was properly closed.
[0m05:57:41  Connection 'list_dbtsales' was properly closed.
[0m05:57:41  Connection 'list_dbtsales_public' was properly closed.
[0m05:57:41  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:57:41  
[0m05:57:41  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.54 seconds (0.54s).
[0m05:57:41  Command end result
[0m05:57:41  
[0m05:57:41  [31mCompleted with 2 errors and 0 warnings:[0m
[0m05:57:41  
[0m05:57:41  [33mDatabase Error in model int_customers (models\integration\int_customers.sql)[0m
[0m05:57:41    invalid input syntax for type timestamp: "null"
[0m05:57:41    compiled Code at target\run\jaffle_shop\models\integration\int_customers.sql
[0m05:57:41  
[0m05:57:41  [33mSkipping due to fail_fast[0m
[0m05:57:41  
[0m05:57:41  Done. PASS=0 WARN=0 ERROR=1 SKIP=1 TOTAL=2
[0m05:57:41  Command `dbt run` failed at 07:57:41.975129 after 0.91 seconds
[0m05:57:41  Flushing usage events
[0m05:58:17  Running with dbt=1.6.0
[0m05:58:17  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'invocation_command': 'dbt run --full-refresh -m integration', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'False'}
[0m05:58:17  Registered adapter: postgres=1.6.0
[0m05:58:17  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:58:17  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m05:58:17  Partial parsing: updated file: jaffle_shop://models\integration\int_customers.sql
[0m05:58:18  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:58:18  
[0m05:58:18  Acquiring new postgres connection 'master'
[0m05:58:18  Acquiring new postgres connection 'list_dbtsales'
[0m05:58:18  Using postgres connection "list_dbtsales"
[0m05:58:18  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:58:18  Opening a new connection, currently in state init
[0m05:58:18  SQL status: SELECT 7 in 0.0 seconds
[0m05:58:18  On list_dbtsales: Close
[0m05:58:18  Acquiring new postgres connection 'list_dbtsales_public'
[0m05:58:18  Using postgres connection "list_dbtsales_public"
[0m05:58:18  On list_dbtsales_public: BEGIN
[0m05:58:18  Opening a new connection, currently in state init
[0m05:58:18  SQL status: BEGIN in 0.0 seconds
[0m05:58:18  Using postgres connection "list_dbtsales_public"
[0m05:58:18  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:58:18  SQL status: SELECT 4 in 0.0 seconds
[0m05:58:18  On list_dbtsales_public: ROLLBACK
[0m05:58:18  On list_dbtsales_public: Close
[0m05:58:18  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m05:58:18  Using postgres connection "list_dbtsales_public_stg"
[0m05:58:18  On list_dbtsales_public_stg: BEGIN
[0m05:58:18  Opening a new connection, currently in state closed
[0m05:58:18  SQL status: BEGIN in 0.0 seconds
[0m05:58:18  Using postgres connection "list_dbtsales_public_stg"
[0m05:58:18  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:58:18  SQL status: SELECT 1 in 0.0 seconds
[0m05:58:18  On list_dbtsales_public_stg: ROLLBACK
[0m05:58:18  On list_dbtsales_public_stg: Close
[0m05:58:18  Using postgres connection "master"
[0m05:58:18  On master: BEGIN
[0m05:58:18  Opening a new connection, currently in state init
[0m05:58:18  SQL status: BEGIN in 0.0 seconds
[0m05:58:18  Using postgres connection "master"
[0m05:58:18  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:58:18  SQL status: SELECT 1 in 0.0 seconds
[0m05:58:18  On master: ROLLBACK
[0m05:58:18  Using postgres connection "master"
[0m05:58:18  On master: BEGIN
[0m05:58:18  SQL status: BEGIN in 0.0 seconds
[0m05:58:18  On master: COMMIT
[0m05:58:18  Using postgres connection "master"
[0m05:58:18  On master: COMMIT
[0m05:58:18  SQL status: COMMIT in 0.0 seconds
[0m05:58:18  On master: Close
[0m05:58:18  Concurrency: 1 threads (target='dev')
[0m05:58:18  
[0m05:58:18  Began running node model.jaffle_shop.int_customers
[0m05:58:18  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:58:18  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:58:18  Began compiling node model.jaffle_shop.int_customers
[0m05:58:18  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:58:18  Timing info for model.jaffle_shop.int_customers (compile): 07:58:18.310699 => 07:58:18.320298
[0m05:58:18  Began executing node model.jaffle_shop.int_customers
[0m05:58:18  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:18  On model.jaffle_shop.int_customers: BEGIN
[0m05:58:18  Opening a new connection, currently in state init
[0m05:58:18  SQL status: BEGIN in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:18  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers__dbt_tmp"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    GROUP BY customer_name, customer_id

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        now() as dtupdated,
        NULL as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        NULL as dtupdated,
        now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT customer_id,customer_name,dtloaded,dtupdated,cast(dtinserted as timestamp)
FROM updates
UNION
SELECT customer_id,customer_name,dtloaded,cast(dtupdated as timestamp),dtinserted
FROM inserts
  );
  
  
[0m05:58:18  SQL status: SELECT 92 in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:18  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */
alter table "dbtsales"."public"."int_customers" rename to "int_customers__dbt_backup"
[0m05:58:18  SQL status: ALTER TABLE in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:18  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */
alter table "dbtsales"."public"."int_customers__dbt_tmp" rename to "int_customers"
[0m05:58:18  SQL status: ALTER TABLE in 0.0 seconds
[0m05:58:18  On model.jaffle_shop.int_customers: COMMIT
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:18  On model.jaffle_shop.int_customers: COMMIT
[0m05:58:18  SQL status: COMMIT in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:18  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */
drop table if exists "dbtsales"."public"."int_customers__dbt_backup" cascade
[0m05:58:18  SQL status: DROP TABLE in 0.0 seconds
[0m05:58:18  Timing info for model.jaffle_shop.int_customers (execute): 07:58:18.323303 => 07:58:18.491805
[0m05:58:18  On model.jaffle_shop.int_customers: Close
[0m05:58:18  1 of 2 OK created sql incremental model public.int_customers ................... [[32mSELECT 92[0m in 0.19s]
[0m05:58:18  Finished running node model.jaffle_shop.int_customers
[0m05:58:18  Began running node model.jaffle_shop.int_sales
[0m05:58:18  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:58:18  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:58:18  Began compiling node model.jaffle_shop.int_sales
[0m05:58:18  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:58:18  Timing info for model.jaffle_shop.int_sales (compile): 07:58:18.505164 => 07:58:18.510171
[0m05:58:18  Began executing node model.jaffle_shop.int_sales
[0m05:58:18  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:18  On model.jaffle_shop.int_sales: BEGIN
[0m05:58:18  Opening a new connection, currently in state closed
[0m05:58:18  SQL status: BEGIN in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:18  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m05:58:18  SQL status: SELECT 2823 in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:18  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m05:58:18  SQL status: ALTER TABLE in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:18  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m05:58:18  SQL status: ALTER TABLE in 0.0 seconds
[0m05:58:18  On model.jaffle_shop.int_sales: COMMIT
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:18  On model.jaffle_shop.int_sales: COMMIT
[0m05:58:18  SQL status: COMMIT in 0.0 seconds
[0m05:58:18  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:18  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m05:58:18  SQL status: DROP TABLE in 0.0 seconds
[0m05:58:18  Timing info for model.jaffle_shop.int_sales (execute): 07:58:18.512485 => 07:58:18.616655
[0m05:58:18  On model.jaffle_shop.int_sales: Close
[0m05:58:18  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.12s]
[0m05:58:18  Finished running node model.jaffle_shop.int_sales
[0m05:58:18  Using postgres connection "master"
[0m05:58:18  On master: BEGIN
[0m05:58:18  Opening a new connection, currently in state closed
[0m05:58:18  SQL status: BEGIN in 0.0 seconds
[0m05:58:18  On master: COMMIT
[0m05:58:18  Using postgres connection "master"
[0m05:58:18  On master: COMMIT
[0m05:58:18  SQL status: COMMIT in 0.0 seconds
[0m05:58:18  On master: Close
[0m05:58:18  Connection 'master' was properly closed.
[0m05:58:18  Connection 'list_dbtsales' was properly closed.
[0m05:58:18  Connection 'list_dbtsales_public_stg' was properly closed.
[0m05:58:18  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:58:18  
[0m05:58:18  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.61 seconds (0.61s).
[0m05:58:18  Command end result
[0m05:58:18  
[0m05:58:18  [32mCompleted successfully[0m
[0m05:58:18  
[0m05:58:18  Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
[0m05:58:18  Command `dbt run` succeeded at 07:58:18.698029 after 0.99 seconds
[0m05:58:18  Flushing usage events
[0m05:58:45  Running with dbt=1.6.0
[0m05:58:45  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'invocation_command': 'dbt run -m integration', 'send_anonymous_usage_stats': 'False'}
[0m05:58:45  Registered adapter: postgres=1.6.0
[0m05:58:45  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m05:58:45  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m05:58:45  Partial parsing enabled, no changes found, skipping parsing
[0m05:58:45  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m05:58:45  
[0m05:58:45  Acquiring new postgres connection 'master'
[0m05:58:45  Acquiring new postgres connection 'list_dbtsales'
[0m05:58:45  Using postgres connection "list_dbtsales"
[0m05:58:45  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m05:58:45  Opening a new connection, currently in state init
[0m05:58:45  SQL status: SELECT 7 in 0.0 seconds
[0m05:58:45  On list_dbtsales: Close
[0m05:58:45  Acquiring new postgres connection 'list_dbtsales_public'
[0m05:58:45  Using postgres connection "list_dbtsales_public"
[0m05:58:45  On list_dbtsales_public: BEGIN
[0m05:58:45  Opening a new connection, currently in state init
[0m05:58:45  SQL status: BEGIN in 0.0 seconds
[0m05:58:45  Using postgres connection "list_dbtsales_public"
[0m05:58:45  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m05:58:45  SQL status: SELECT 3 in 0.0 seconds
[0m05:58:45  On list_dbtsales_public: ROLLBACK
[0m05:58:45  On list_dbtsales_public: Close
[0m05:58:45  Re-using an available connection from the pool (formerly list_dbtsales_public, now list_dbtsales_public_stg)
[0m05:58:45  Using postgres connection "list_dbtsales_public_stg"
[0m05:58:45  On list_dbtsales_public_stg: BEGIN
[0m05:58:45  Opening a new connection, currently in state closed
[0m05:58:45  SQL status: BEGIN in 0.0 seconds
[0m05:58:45  Using postgres connection "list_dbtsales_public_stg"
[0m05:58:45  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m05:58:45  SQL status: SELECT 1 in 0.0 seconds
[0m05:58:45  On list_dbtsales_public_stg: ROLLBACK
[0m05:58:45  On list_dbtsales_public_stg: Close
[0m05:58:45  Using postgres connection "master"
[0m05:58:45  On master: BEGIN
[0m05:58:45  Opening a new connection, currently in state init
[0m05:58:45  SQL status: BEGIN in 0.0 seconds
[0m05:58:45  Using postgres connection "master"
[0m05:58:45  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m05:58:45  SQL status: SELECT 1 in 0.0 seconds
[0m05:58:45  On master: ROLLBACK
[0m05:58:45  Using postgres connection "master"
[0m05:58:45  On master: BEGIN
[0m05:58:45  SQL status: BEGIN in 0.0 seconds
[0m05:58:45  On master: COMMIT
[0m05:58:45  Using postgres connection "master"
[0m05:58:45  On master: COMMIT
[0m05:58:45  SQL status: COMMIT in 0.0 seconds
[0m05:58:45  On master: Close
[0m05:58:45  Concurrency: 1 threads (target='dev')
[0m05:58:45  
[0m05:58:45  Began running node model.jaffle_shop.int_customers
[0m05:58:45  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m05:58:45  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m05:58:45  Began compiling node model.jaffle_shop.int_customers
[0m05:58:46  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m05:58:46  Timing info for model.jaffle_shop.int_customers (compile): 07:58:45.992580 => 07:58:46.018095
[0m05:58:46  Began executing node model.jaffle_shop.int_customers
[0m05:58:46  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:46  On model.jaffle_shop.int_customers: BEGIN
[0m05:58:46  Opening a new connection, currently in state init
[0m05:58:46  SQL status: BEGIN in 0.0 seconds
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:46  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      
  
    

  create  table "dbtsales"."public"."int_customers"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

    GROUP BY customer_name, customer_id

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        now() as dtupdated,
        NULL as dtinserted,
        dtloaded

    FROM using_clause

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        NULL as dtupdated,
        now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT customer_id,customer_name,dtloaded,dtupdated,cast(dtinserted as timestamp)
FROM updates
UNION
SELECT customer_id,customer_name,dtloaded,cast(dtupdated as timestamp),dtinserted
FROM inserts
  );
  
  
[0m05:58:46  SQL status: SELECT 92 in 0.0 seconds
[0m05:58:46  On model.jaffle_shop.int_customers: COMMIT
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_customers"
[0m05:58:46  On model.jaffle_shop.int_customers: COMMIT
[0m05:58:46  SQL status: COMMIT in 0.0 seconds
[0m05:58:46  Timing info for model.jaffle_shop.int_customers (execute): 07:58:46.021095 => 07:58:46.165897
[0m05:58:46  On model.jaffle_shop.int_customers: Close
[0m05:58:46  1 of 2 OK created sql incremental model public.int_customers ................... [[32mSELECT 92[0m in 0.18s]
[0m05:58:46  Finished running node model.jaffle_shop.int_customers
[0m05:58:46  Began running node model.jaffle_shop.int_sales
[0m05:58:46  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m05:58:46  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m05:58:46  Began compiling node model.jaffle_shop.int_sales
[0m05:58:46  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m05:58:46  Timing info for model.jaffle_shop.int_sales (compile): 07:58:46.179791 => 07:58:46.184796
[0m05:58:46  Began executing node model.jaffle_shop.int_sales
[0m05:58:46  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:46  On model.jaffle_shop.int_sales: BEGIN
[0m05:58:46  Opening a new connection, currently in state closed
[0m05:58:46  SQL status: BEGIN in 0.0 seconds
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:46  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m05:58:46  SQL status: SELECT 2823 in 0.0 seconds
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:46  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m05:58:46  SQL status: ALTER TABLE in 0.0 seconds
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:46  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m05:58:46  SQL status: ALTER TABLE in 0.0 seconds
[0m05:58:46  On model.jaffle_shop.int_sales: COMMIT
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:46  On model.jaffle_shop.int_sales: COMMIT
[0m05:58:46  SQL status: COMMIT in 0.0 seconds
[0m05:58:46  Using postgres connection "model.jaffle_shop.int_sales"
[0m05:58:46  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m05:58:46  SQL status: DROP TABLE in 0.0 seconds
[0m05:58:46  Timing info for model.jaffle_shop.int_sales (execute): 07:58:46.186798 => 07:58:46.335951
[0m05:58:46  On model.jaffle_shop.int_sales: Close
[0m05:58:46  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.16s]
[0m05:58:46  Finished running node model.jaffle_shop.int_sales
[0m05:58:46  Using postgres connection "master"
[0m05:58:46  On master: BEGIN
[0m05:58:46  Opening a new connection, currently in state closed
[0m05:58:46  SQL status: BEGIN in 0.0 seconds
[0m05:58:46  On master: COMMIT
[0m05:58:46  Using postgres connection "master"
[0m05:58:46  On master: COMMIT
[0m05:58:46  SQL status: COMMIT in 0.0 seconds
[0m05:58:46  On master: Close
[0m05:58:46  Connection 'master' was properly closed.
[0m05:58:46  Connection 'list_dbtsales' was properly closed.
[0m05:58:46  Connection 'list_dbtsales_public_stg' was properly closed.
[0m05:58:46  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m05:58:46  
[0m05:58:46  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.57 seconds (0.57s).
[0m05:58:46  Command end result
[0m05:58:46  
[0m05:58:46  [32mCompleted successfully[0m
[0m05:58:46  
[0m05:58:46  Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
[0m05:58:46  Command `dbt run` succeeded at 07:58:46.400010 after 0.89 seconds
[0m05:58:46  Flushing usage events
[0m06:02:41  Running with dbt=1.6.0
[0m06:02:41  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run --full-refresh -m staging', 'target_path': 'None', 'log_format': 'text', 'send_anonymous_usage_stats': 'False'}
[0m06:02:41  Registered adapter: postgres=1.6.0
[0m06:02:41  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m06:02:41  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m06:02:41  Partial parsing: updated file: jaffle_shop://models\staging\stg_customers.sql
[0m06:02:41  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m06:02:41  
[0m06:02:41  Acquiring new postgres connection 'master'
[0m06:02:41  Acquiring new postgres connection 'list_dbtsales'
[0m06:02:41  Using postgres connection "list_dbtsales"
[0m06:02:41  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m06:02:41  Opening a new connection, currently in state init
[0m06:02:41  SQL status: SELECT 7 in 0.0 seconds
[0m06:02:41  On list_dbtsales: Close
[0m06:02:41  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m06:02:41  Using postgres connection "list_dbtsales_public_stg"
[0m06:02:41  On list_dbtsales_public_stg: BEGIN
[0m06:02:41  Opening a new connection, currently in state init
[0m06:02:41  SQL status: BEGIN in 0.0 seconds
[0m06:02:41  Using postgres connection "list_dbtsales_public_stg"
[0m06:02:41  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m06:02:41  SQL status: SELECT 1 in 0.0 seconds
[0m06:02:41  On list_dbtsales_public_stg: ROLLBACK
[0m06:02:41  On list_dbtsales_public_stg: Close
[0m06:02:41  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m06:02:41  Using postgres connection "list_dbtsales_public"
[0m06:02:41  On list_dbtsales_public: BEGIN
[0m06:02:41  Opening a new connection, currently in state closed
[0m06:02:41  SQL status: BEGIN in 0.0 seconds
[0m06:02:41  Using postgres connection "list_dbtsales_public"
[0m06:02:41  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m06:02:41  SQL status: SELECT 4 in 0.0 seconds
[0m06:02:41  On list_dbtsales_public: ROLLBACK
[0m06:02:41  On list_dbtsales_public: Close
[0m06:02:41  Using postgres connection "master"
[0m06:02:41  On master: BEGIN
[0m06:02:41  Opening a new connection, currently in state init
[0m06:02:41  SQL status: BEGIN in 0.0 seconds
[0m06:02:41  Using postgres connection "master"
[0m06:02:41  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m06:02:41  SQL status: SELECT 1 in 0.0 seconds
[0m06:02:41  On master: ROLLBACK
[0m06:02:41  Using postgres connection "master"
[0m06:02:41  On master: BEGIN
[0m06:02:41  SQL status: BEGIN in 0.0 seconds
[0m06:02:41  On master: COMMIT
[0m06:02:41  Using postgres connection "master"
[0m06:02:41  On master: COMMIT
[0m06:02:41  SQL status: COMMIT in 0.0 seconds
[0m06:02:41  On master: Close
[0m06:02:41  Concurrency: 1 threads (target='dev')
[0m06:02:41  
[0m06:02:41  Began running node model.jaffle_shop.stg_customers
[0m06:02:41  1 of 1 START sql view model public_stg.stg_customers ........................... [RUN]
[0m06:02:41  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m06:02:41  Began compiling node model.jaffle_shop.stg_customers
[0m06:02:41  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m06:02:41  Timing info for model.jaffle_shop.stg_customers (compile): 08:02:41.908584 => 08:02:41.916595
[0m06:02:41  Began executing node model.jaffle_shop.stg_customers
[0m06:02:41  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m06:02:41  Using postgres connection "model.jaffle_shop.stg_customers"
[0m06:02:41  On model.jaffle_shop.stg_customers: BEGIN
[0m06:02:41  Opening a new connection, currently in state init
[0m06:02:41  SQL status: BEGIN in 0.0 seconds
[0m06:02:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m06:02:42  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "dbtsales"."public_stg"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (

    select distinct
        customername,
        contactfirstname,
        contactlastname,
        dtloaded
    from "dbtsales"."public"."raw_sales"

),

renamed as (

    select 
        md5(cast(coalesce(cast(customername as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customername as customer_name,
        contactfirstname as contact_firstname,
        contactlastname as contact_lastname,
        dtloaded
    from source

)

select  customer_id,
        customer_name,
        contact_firstname,
        contact_lastname,
        dtloaded
from renamed
UNION
select  'a',
        'b',
        NULL,
        NULL,
        now()
from renamed
  );
[0m06:02:42  SQL status: CREATE VIEW in 0.0 seconds
[0m06:02:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m06:02:42  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers" rename to "stg_customers__dbt_backup"
[0m06:02:42  SQL status: ALTER TABLE in 0.0 seconds
[0m06:02:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m06:02:42  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "dbtsales"."public_stg"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m06:02:42  SQL status: ALTER TABLE in 0.0 seconds
[0m06:02:42  On model.jaffle_shop.stg_customers: COMMIT
[0m06:02:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m06:02:42  On model.jaffle_shop.stg_customers: COMMIT
[0m06:02:42  SQL status: COMMIT in 0.0 seconds
[0m06:02:42  Using postgres connection "model.jaffle_shop.stg_customers"
[0m06:02:42  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "dbtsales"."public_stg"."stg_customers__dbt_backup" cascade
[0m06:02:42  SQL status: DROP VIEW in 0.0 seconds
[0m06:02:42  Timing info for model.jaffle_shop.stg_customers (execute): 08:02:41.918596 => 08:02:42.079515
[0m06:02:42  On model.jaffle_shop.stg_customers: Close
[0m06:02:42  1 of 1 OK created sql view model public_stg.stg_customers ...................... [[32mCREATE VIEW[0m in 0.18s]
[0m06:02:42  Finished running node model.jaffle_shop.stg_customers
[0m06:02:42  Using postgres connection "master"
[0m06:02:42  On master: BEGIN
[0m06:02:42  Opening a new connection, currently in state closed
[0m06:02:42  SQL status: BEGIN in 0.0 seconds
[0m06:02:42  On master: COMMIT
[0m06:02:42  Using postgres connection "master"
[0m06:02:42  On master: COMMIT
[0m06:02:42  SQL status: COMMIT in 0.0 seconds
[0m06:02:42  On master: Close
[0m06:02:42  Connection 'master' was properly closed.
[0m06:02:42  Connection 'list_dbtsales' was properly closed.
[0m06:02:42  Connection 'list_dbtsales_public' was properly closed.
[0m06:02:42  Connection 'model.jaffle_shop.stg_customers' was properly closed.
[0m06:02:42  
[0m06:02:42  Finished running 1 view model in 0 hours 0 minutes and 0.47 seconds (0.47s).
[0m06:02:42  Command end result
[0m06:02:42  
[0m06:02:42  [32mCompleted successfully[0m
[0m06:02:42  
[0m06:02:42  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m06:02:42  Command `dbt run` succeeded at 08:02:42.150800 after 0.96 seconds
[0m06:02:42  Flushing usage events
[0m06:03:02  Running with dbt=1.6.0
[0m06:03:02  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Louw\\GitHub\\dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt run -m integration', 'introspect': 'True', 'target_path': 'None', 'log_format': 'text', 'send_anonymous_usage_stats': 'False'}
[0m06:03:03  Registered adapter: postgres=1.6.0
[0m06:03:03  checksum: 08dabea3fc65f9f8dd48613681c2bcd827397a7ba9ce4c6d52980aba1215e8c9, vars: {}, profile: , target: , version: 1.6.0
[0m06:03:03  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m06:03:03  Partial parsing enabled, no changes found, skipping parsing
[0m06:03:03  Found 5 models, 4 tests, 1 source, 0 exposures, 0 metrics, 687 macros, 0 groups, 0 semantic models
[0m06:03:03  
[0m06:03:03  Acquiring new postgres connection 'master'
[0m06:03:03  Acquiring new postgres connection 'list_dbtsales'
[0m06:03:03  Using postgres connection "list_dbtsales"
[0m06:03:03  On list_dbtsales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales"} */

    select distinct nspname from pg_namespace
  
[0m06:03:03  Opening a new connection, currently in state init
[0m06:03:03  SQL status: SELECT 7 in 0.0 seconds
[0m06:03:03  On list_dbtsales: Close
[0m06:03:03  Acquiring new postgres connection 'list_dbtsales_public_stg'
[0m06:03:03  Using postgres connection "list_dbtsales_public_stg"
[0m06:03:03  On list_dbtsales_public_stg: BEGIN
[0m06:03:03  Opening a new connection, currently in state init
[0m06:03:03  SQL status: BEGIN in 0.0 seconds
[0m06:03:03  Using postgres connection "list_dbtsales_public_stg"
[0m06:03:03  On list_dbtsales_public_stg: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public_stg"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public_stg'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public_stg'
  
[0m06:03:03  SQL status: SELECT 1 in 0.0 seconds
[0m06:03:03  On list_dbtsales_public_stg: ROLLBACK
[0m06:03:03  On list_dbtsales_public_stg: Close
[0m06:03:03  Re-using an available connection from the pool (formerly list_dbtsales_public_stg, now list_dbtsales_public)
[0m06:03:03  Using postgres connection "list_dbtsales_public"
[0m06:03:03  On list_dbtsales_public: BEGIN
[0m06:03:03  Opening a new connection, currently in state closed
[0m06:03:03  SQL status: BEGIN in 0.0 seconds
[0m06:03:03  Using postgres connection "list_dbtsales_public"
[0m06:03:03  On list_dbtsales_public: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_dbtsales_public"} */
select
      'dbtsales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
    union all
    select
      'dbtsales' as database,
      matviewname as name,
      schemaname as schema,
      'materialized_view' as type
    from pg_matviews
    where schemaname ilike 'public'
  
[0m06:03:03  SQL status: SELECT 4 in 0.0 seconds
[0m06:03:03  On list_dbtsales_public: ROLLBACK
[0m06:03:03  On list_dbtsales_public: Close
[0m06:03:03  Using postgres connection "master"
[0m06:03:03  On master: BEGIN
[0m06:03:03  Opening a new connection, currently in state init
[0m06:03:03  SQL status: BEGIN in 0.0 seconds
[0m06:03:03  Using postgres connection "master"
[0m06:03:03  On master: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v', 'm')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m06:03:03  SQL status: SELECT 1 in 0.0 seconds
[0m06:03:03  On master: ROLLBACK
[0m06:03:03  Using postgres connection "master"
[0m06:03:03  On master: BEGIN
[0m06:03:03  SQL status: BEGIN in 0.0 seconds
[0m06:03:03  On master: COMMIT
[0m06:03:03  Using postgres connection "master"
[0m06:03:03  On master: COMMIT
[0m06:03:03  SQL status: COMMIT in 0.0 seconds
[0m06:03:03  On master: Close
[0m06:03:03  Concurrency: 1 threads (target='dev')
[0m06:03:03  
[0m06:03:03  Began running node model.jaffle_shop.int_customers
[0m06:03:03  1 of 2 START sql incremental model public.int_customers ........................ [RUN]
[0m06:03:03  Acquiring new postgres connection 'model.jaffle_shop.int_customers'
[0m06:03:03  Began compiling node model.jaffle_shop.int_customers
[0m06:03:03  Writing injected SQL for node "model.jaffle_shop.int_customers"
[0m06:03:03  Timing info for model.jaffle_shop.int_customers (compile): 08:03:03.484647 => 08:03:03.509652
[0m06:03:03  Began executing node model.jaffle_shop.int_customers
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_customers"
[0m06:03:03  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

    
  
    

  create temporary table "int_customers__dbt_tmp080303552078"
  
  
    as
  
  (
    

WITH

using_clause AS (

    SELECT
        customer_id,
        customer_name,
        MAX(dtloaded) as dtloaded

    FROM "dbtsales"."public_stg"."stg_customers"


    

        WHERE dtloaded > (SELECT MAX(dtloaded) FROM "dbtsales"."public"."int_customers")

    

    GROUP BY customer_name, customer_id

),

updates AS (

    SELECT
        customer_id,
        customer_name,
        now() as dtupdated,
        NULL as dtinserted,
        dtloaded

    FROM using_clause

    

        WHERE customer_name IN (SELECT customer_name FROM "dbtsales"."public"."int_customers")

    

),

inserts AS (

    SELECT
        md5(cast(coalesce(cast(customer_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_id,
        customer_name,
        NULL as dtupdated,
        now() as dtinserted,
        dtloaded
    FROM using_clause
    WHERE customer_name NOT IN (SELECT customer_name FROM updates)
 )

SELECT customer_id,customer_name,dtloaded,dtupdated,cast(dtinserted as timestamp)
FROM updates
UNION
SELECT customer_id,customer_name,dtloaded,cast(dtupdated as timestamp),dtinserted
FROM inserts
  );
  
  
[0m06:03:03  Opening a new connection, currently in state init
[0m06:03:03  SQL status: SELECT 1 in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_customers"
[0m06:03:03  On model.jaffle_shop.int_customers: BEGIN
[0m06:03:03  SQL status: BEGIN in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_customers"
[0m06:03:03  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from INFORMATION_SCHEMA.columns
      where table_name = 'int_customers__dbt_tmp080303552078'
        
      order by ordinal_position

  
[0m06:03:03  SQL status: SELECT 5 in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_customers"
[0m06:03:03  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'int_customers'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m06:03:03  SQL status: SELECT 5 in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_customers"
[0m06:03:03  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      select
          column_name,
          data_type,
          character_maximum_length,
          numeric_precision,
          numeric_scale

      from "dbtsales".INFORMATION_SCHEMA.columns
      where table_name = 'int_customers'
        
        and table_schema = 'public'
        
      order by ordinal_position

  
[0m06:03:03  SQL status: SELECT 5 in 0.0 seconds
[0m06:03:03  Writing runtime sql for node "model.jaffle_shop.int_customers"
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_customers"
[0m06:03:03  On model.jaffle_shop.int_customers: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_customers"} */

      -- back compat for old kwarg name
  
  
        
            
            
        
    

    

    merge into "dbtsales"."public"."int_customers" as DBT_INTERNAL_DEST
        using "int_customers__dbt_tmp080303552078" as DBT_INTERNAL_SOURCE
        on (
                DBT_INTERNAL_SOURCE.customer_name = DBT_INTERNAL_DEST.customer_name
            )

    
    when matched then update set
        "customer_id" = DBT_INTERNAL_SOURCE."customer_id","customer_name" = DBT_INTERNAL_SOURCE."customer_name","dtloaded" = DBT_INTERNAL_SOURCE."dtloaded","dtupdated" = DBT_INTERNAL_SOURCE."dtupdated","dtinserted" = DBT_INTERNAL_SOURCE."dtinserted"
    

    when not matched then insert
        ("customer_id", "customer_name", "dtloaded", "dtupdated", "dtinserted")
    values
        ("customer_id", "customer_name", "dtloaded", "dtupdated", "dtinserted")


  
[0m06:03:03  SQL status: MERGE 1 in 0.0 seconds
[0m06:03:03  On model.jaffle_shop.int_customers: COMMIT
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_customers"
[0m06:03:03  On model.jaffle_shop.int_customers: COMMIT
[0m06:03:03  SQL status: COMMIT in 0.0 seconds
[0m06:03:03  Timing info for model.jaffle_shop.int_customers (execute): 08:03:03.513903 => 08:03:03.792395
[0m06:03:03  On model.jaffle_shop.int_customers: Close
[0m06:03:03  1 of 2 OK created sql incremental model public.int_customers ................... [[32mMERGE 1[0m in 0.31s]
[0m06:03:03  Finished running node model.jaffle_shop.int_customers
[0m06:03:03  Began running node model.jaffle_shop.int_sales
[0m06:03:03  2 of 2 START sql table model public.int_sales .................................. [RUN]
[0m06:03:03  Re-using an available connection from the pool (formerly model.jaffle_shop.int_customers, now model.jaffle_shop.int_sales)
[0m06:03:03  Began compiling node model.jaffle_shop.int_sales
[0m06:03:03  Writing injected SQL for node "model.jaffle_shop.int_sales"
[0m06:03:03  Timing info for model.jaffle_shop.int_sales (compile): 08:03:03.805993 => 08:03:03.812018
[0m06:03:03  Began executing node model.jaffle_shop.int_sales
[0m06:03:03  Writing runtime sql for node "model.jaffle_shop.int_sales"
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_sales"
[0m06:03:03  On model.jaffle_shop.int_sales: BEGIN
[0m06:03:03  Opening a new connection, currently in state closed
[0m06:03:03  SQL status: BEGIN in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_sales"
[0m06:03:03  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */

  
    

  create  table "dbtsales"."public"."int_sales__dbt_tmp"
  
  
    as
  
  (
    with source as (

      
    select *
    from "dbtsales"."public"."raw_sales"

),

renamed as (
    -- apply transformations

    select
        
    from source

)

select *
from renamed
  );
  
[0m06:03:03  SQL status: SELECT 2823 in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_sales"
[0m06:03:03  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales" rename to "int_sales__dbt_backup"
[0m06:03:03  SQL status: ALTER TABLE in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_sales"
[0m06:03:03  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
alter table "dbtsales"."public"."int_sales__dbt_tmp" rename to "int_sales"
[0m06:03:03  SQL status: ALTER TABLE in 0.0 seconds
[0m06:03:03  On model.jaffle_shop.int_sales: COMMIT
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_sales"
[0m06:03:03  On model.jaffle_shop.int_sales: COMMIT
[0m06:03:03  SQL status: COMMIT in 0.0 seconds
[0m06:03:03  Using postgres connection "model.jaffle_shop.int_sales"
[0m06:03:03  On model.jaffle_shop.int_sales: /* {"app": "dbt", "dbt_version": "1.6.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.int_sales"} */
drop table if exists "dbtsales"."public"."int_sales__dbt_backup" cascade
[0m06:03:03  SQL status: DROP TABLE in 0.0 seconds
[0m06:03:03  Timing info for model.jaffle_shop.int_sales (execute): 08:03:03.815471 => 08:03:03.930022
[0m06:03:03  On model.jaffle_shop.int_sales: Close
[0m06:03:03  2 of 2 OK created sql table model public.int_sales ............................. [[32mSELECT 2823[0m in 0.13s]
[0m06:03:03  Finished running node model.jaffle_shop.int_sales
[0m06:03:03  Using postgres connection "master"
[0m06:03:03  On master: BEGIN
[0m06:03:03  Opening a new connection, currently in state closed
[0m06:03:03  SQL status: BEGIN in 0.0 seconds
[0m06:03:03  On master: COMMIT
[0m06:03:03  Using postgres connection "master"
[0m06:03:03  On master: COMMIT
[0m06:03:03  SQL status: COMMIT in 0.0 seconds
[0m06:03:03  On master: Close
[0m06:03:03  Connection 'master' was properly closed.
[0m06:03:03  Connection 'list_dbtsales' was properly closed.
[0m06:03:03  Connection 'list_dbtsales_public' was properly closed.
[0m06:03:03  Connection 'model.jaffle_shop.int_sales' was properly closed.
[0m06:03:03  
[0m06:03:03  Finished running 1 incremental model, 1 table model in 0 hours 0 minutes and 0.71 seconds (0.71s).
[0m06:03:03  Command end result
[0m06:03:03  
[0m06:03:03  [32mCompleted successfully[0m
[0m06:03:03  
[0m06:03:03  Done. PASS=2 WARN=0 ERROR=0 SKIP=0 TOTAL=2
[0m06:03:03  Command `dbt run` succeeded at 08:03:03.993430 after 1.02 seconds
[0m06:03:03  Flushing usage events
