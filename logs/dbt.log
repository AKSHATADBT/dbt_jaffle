[0m10:52:03  Running with dbt=1.5.0
[0m10:52:03  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m10:52:04  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m10:52:04  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m10:52:04  Partial parsing enabled, no changes found, skipping parsing
[0m10:52:04  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m10:52:04  
[0m10:52:04  Acquiring new postgres connection 'master'
[0m10:52:04  Acquiring new postgres connection 'list_sales'
[0m10:52:04  Using postgres connection "list_sales"
[0m10:52:04  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m10:52:04  Opening a new connection, currently in state init
[0m10:52:04  SQL status: SELECT 4 in 0.0 seconds
[0m10:52:04  On list_sales: Close
[0m10:52:04  Acquiring new postgres connection 'list_sales_public'
[0m10:52:04  Using postgres connection "list_sales_public"
[0m10:52:04  On list_sales_public: BEGIN
[0m10:52:04  Opening a new connection, currently in state init
[0m10:52:04  SQL status: BEGIN in 0.0 seconds
[0m10:52:04  Using postgres connection "list_sales_public"
[0m10:52:04  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m10:52:04  SQL status: SELECT 0 in 0.0 seconds
[0m10:52:04  On list_sales_public: ROLLBACK
[0m10:52:04  On list_sales_public: Close
[0m10:52:04  Using postgres connection "master"
[0m10:52:04  On master: BEGIN
[0m10:52:04  Opening a new connection, currently in state init
[0m10:52:04  SQL status: BEGIN in 0.0 seconds
[0m10:52:04  Using postgres connection "master"
[0m10:52:04  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m10:52:04  SQL status: SELECT 0 in 0.0 seconds
[0m10:52:04  On master: ROLLBACK
[0m10:52:04  Using postgres connection "master"
[0m10:52:04  On master: BEGIN
[0m10:52:04  SQL status: BEGIN in 0.0 seconds
[0m10:52:04  On master: COMMIT
[0m10:52:04  Using postgres connection "master"
[0m10:52:04  On master: COMMIT
[0m10:52:04  SQL status: COMMIT in 0.0 seconds
[0m10:52:04  On master: Close
[0m10:52:04  Concurrency: 1 threads (target='dev')
[0m10:52:04  
[0m10:52:04  Began running node model.jaffle_shop.stg_customers
[0m10:52:04  1 of 5 START sql view model public.stg_customers ............................... [RUN]
[0m10:52:04  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m10:52:04  Began compiling node model.jaffle_shop.stg_customers
[0m10:52:04  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m10:52:04  Timing info for model.jaffle_shop.stg_customers (compile): 12:52:04.462134 => 12:52:04.468144
[0m10:52:04  Began executing node model.jaffle_shop.stg_customers
[0m10:52:04  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m10:52:04  Using postgres connection "model.jaffle_shop.stg_customers"
[0m10:52:04  On model.jaffle_shop.stg_customers: BEGIN
[0m10:52:04  Opening a new connection, currently in state init
[0m10:52:04  SQL status: BEGIN in 0.0 seconds
[0m10:52:04  Using postgres connection "model.jaffle_shop.stg_customers"
[0m10:52:04  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m10:52:04  Postgres adapter: Postgres error: relation "public.raw_customers" does not exist
LINE 8:     select * from "sales"."public"."raw_customers"
                          ^

[0m10:52:04  On model.jaffle_shop.stg_customers: ROLLBACK
[0m10:52:04  Timing info for model.jaffle_shop.stg_customers (execute): 12:52:04.471224 => 12:52:04.667892
[0m10:52:04  On model.jaffle_shop.stg_customers: Close
[0m10:52:04  Database Error in model stg_customers (models\staging\stg_customers.sql)
  relation "public.raw_customers" does not exist
  LINE 8:     select * from "sales"."public"."raw_customers"
                            ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_customers.sql
[0m10:52:04  1 of 5 ERROR creating sql view model public.stg_customers ...................... [[31mERROR[0m in 0.22s]
[0m10:52:04  Finished running node model.jaffle_shop.stg_customers
[0m10:52:04  Began running node model.jaffle_shop.stg_orders
[0m10:52:04  2 of 5 START sql view model public.stg_orders .................................. [RUN]
[0m10:52:04  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m10:52:04  Began compiling node model.jaffle_shop.stg_orders
[0m10:52:04  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m10:52:04  Timing info for model.jaffle_shop.stg_orders (compile): 12:52:04.686154 => 12:52:04.690156
[0m10:52:04  Began executing node model.jaffle_shop.stg_orders
[0m10:52:04  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m10:52:04  Using postgres connection "model.jaffle_shop.stg_orders"
[0m10:52:04  On model.jaffle_shop.stg_orders: BEGIN
[0m10:52:04  Opening a new connection, currently in state closed
[0m10:52:04  SQL status: BEGIN in 0.0 seconds
[0m10:52:04  Using postgres connection "model.jaffle_shop.stg_orders"
[0m10:52:04  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  create view "sales"."public"."stg_orders__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
[0m10:52:04  Postgres adapter: Postgres error: relation "public.raw_orders" does not exist
LINE 8:     select * from "sales"."public"."raw_orders"
                          ^

[0m10:52:04  On model.jaffle_shop.stg_orders: ROLLBACK
[0m10:52:04  Timing info for model.jaffle_shop.stg_orders (execute): 12:52:04.692109 => 12:52:04.747969
[0m10:52:04  On model.jaffle_shop.stg_orders: Close
[0m10:52:04  Database Error in model stg_orders (models\staging\stg_orders.sql)
  relation "public.raw_orders" does not exist
  LINE 8:     select * from "sales"."public"."raw_orders"
                            ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_orders.sql
[0m10:52:04  2 of 5 ERROR creating sql view model public.stg_orders ......................... [[31mERROR[0m in 0.07s]
[0m10:52:04  Finished running node model.jaffle_shop.stg_orders
[0m10:52:04  Began running node model.jaffle_shop.stg_payments
[0m10:52:04  3 of 5 START sql view model public.stg_payments ................................ [RUN]
[0m10:52:04  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m10:52:04  Began compiling node model.jaffle_shop.stg_payments
[0m10:52:04  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m10:52:04  Timing info for model.jaffle_shop.stg_payments (compile): 12:52:04.760472 => 12:52:04.765481
[0m10:52:04  Began executing node model.jaffle_shop.stg_payments
[0m10:52:04  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m10:52:04  Using postgres connection "model.jaffle_shop.stg_payments"
[0m10:52:04  On model.jaffle_shop.stg_payments: BEGIN
[0m10:52:04  Opening a new connection, currently in state closed
[0m10:52:04  SQL status: BEGIN in 0.0 seconds
[0m10:52:04  Using postgres connection "model.jaffle_shop.stg_payments"
[0m10:52:04  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m10:52:04  Postgres adapter: Postgres error: relation "public.raw_payments" does not exist
LINE 8:     select * from "sales"."public"."raw_payments"
                          ^

[0m10:52:04  On model.jaffle_shop.stg_payments: ROLLBACK
[0m10:52:04  Timing info for model.jaffle_shop.stg_payments (execute): 12:52:04.768474 => 12:52:04.930139
[0m10:52:04  On model.jaffle_shop.stg_payments: Close
[0m10:52:04  Database Error in model stg_payments (models\staging\stg_payments.sql)
  relation "public.raw_payments" does not exist
  LINE 8:     select * from "sales"."public"."raw_payments"
                            ^
  compiled Code at target\run\jaffle_shop\models\staging\stg_payments.sql
[0m10:52:04  3 of 5 ERROR creating sql view model public.stg_payments ....................... [[31mERROR[0m in 0.18s]
[0m10:52:04  Finished running node model.jaffle_shop.stg_payments
[0m10:52:04  CANCEL query list_sales ........................................................ [[31mCANCEL[0m]
[0m10:52:04  CANCEL query list_sales_public ................................................. [[31mCANCEL[0m]
[0m10:52:04  CANCEL query model.jaffle_shop.stg_payments .................................... [[31mCANCEL[0m]
[0m10:52:04  
[0m10:52:04  [33mDatabase Error in model stg_payments (models\staging\stg_payments.sql)[0m
[0m10:52:04    relation "public.raw_payments" does not exist
[0m10:52:04    LINE 8:     select * from "sales"."public"."raw_payments"
[0m10:52:04                              ^
[0m10:52:04    compiled Code at target\run\jaffle_shop\models\staging\stg_payments.sql
[0m10:52:04  Connection 'master' was properly closed.
[0m10:52:04  Connection 'list_sales' was properly closed.
[0m10:52:04  Connection 'list_sales_public' was properly closed.
[0m10:52:04  Connection 'model.jaffle_shop.stg_payments' was properly closed.
[0m10:52:04  
[0m10:52:04  Finished running 3 view models in 0 hours 0 minutes and 0.83 seconds (0.83s).
[0m10:52:04  Encountered an error:
FailFast Error in model stg_payments (models\staging\stg_payments.sql)
  Failing early due to test failure or runtime error
[0m10:52:04  Command `dbt run` failed at 12:52:04.957074 after 1.05 seconds
[0m10:52:04  Flushing usage events
[0m11:01:45  Running with dbt=1.5.0
[0m11:01:45  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'version_check': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:01:45  dbt version: 1.5.0
[0m11:01:45  python version: 3.10.11
[0m11:01:45  python path: C:\Louw\GitHub\dbt\dbt-env\Scripts\python.exe
[0m11:01:45  os info: Windows-10-10.0.22621-SP0
[0m11:01:45  Using profiles.yml file at C:\Users\lfouc\.dbt\profiles.yml
[0m11:01:45  Using dbt_project.yml file at C:\Louw\GitHub\dbt\jaffle_shop\dbt_project.yml
[0m11:01:45  Configuration:
[0m11:01:45    profiles.yml file [[32mOK found and valid[0m]
[0m11:01:45    dbt_project.yml file [[32mOK found and valid[0m]
[0m11:01:45  Required dependencies:
[0m11:01:45  Executing "git --help"
[0m11:01:45  STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m11:01:45  STDERR: "b''"
[0m11:01:45   - git [[32mOK found[0m]

[0m11:01:45  Connection:
[0m11:01:45    host: localhost
[0m11:01:45    port: 5432
[0m11:01:45    user: postgres
[0m11:01:45    database: sales
[0m11:01:45    schema: public
[0m11:01:45    search_path: None
[0m11:01:45    keepalives_idle: 0
[0m11:01:45    sslmode: None
[0m11:01:45  Acquiring new postgres connection 'debug'
[0m11:01:45  Using postgres connection "debug"
[0m11:01:45  On debug: select 1 as id
[0m11:01:45  Opening a new connection, currently in state init
[0m11:01:45  SQL status: SELECT 1 in 0.0 seconds
[0m11:01:45  On debug: Close
[0m11:01:45    Connection test: [[32mOK connection ok[0m]

[0m11:01:45  [32mAll checks passed![0m
[0m11:01:45  Command `dbt debug` succeeded at 13:01:45.844085 after 0.25 seconds
[0m11:01:45  Connection 'debug' was properly closed.
[0m11:01:45  Flushing usage events
[0m11:01:53  Running with dbt=1.5.0
[0m11:01:53  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:01:53  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:01:53  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:01:53  Partial parsing enabled, no changes found, skipping parsing
[0m11:01:53  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:01:53  
[0m11:01:53  Acquiring new postgres connection 'master'
[0m11:01:53  Acquiring new postgres connection 'list_sales'
[0m11:01:53  Using postgres connection "list_sales"
[0m11:01:53  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:01:53  Opening a new connection, currently in state init
[0m11:01:54  SQL status: SELECT 4 in 0.0 seconds
[0m11:01:54  On list_sales: Close
[0m11:01:54  Acquiring new postgres connection 'list_sales_public'
[0m11:01:54  Using postgres connection "list_sales_public"
[0m11:01:54  On list_sales_public: BEGIN
[0m11:01:54  Opening a new connection, currently in state init
[0m11:01:54  SQL status: BEGIN in 0.0 seconds
[0m11:01:54  Using postgres connection "list_sales_public"
[0m11:01:54  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:01:54  SQL status: SELECT 0 in 0.0 seconds
[0m11:01:54  On list_sales_public: ROLLBACK
[0m11:01:54  On list_sales_public: Close
[0m11:01:54  Using postgres connection "master"
[0m11:01:54  On master: BEGIN
[0m11:01:54  Opening a new connection, currently in state init
[0m11:01:54  SQL status: BEGIN in 0.0 seconds
[0m11:01:54  Using postgres connection "master"
[0m11:01:54  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:01:54  SQL status: SELECT 0 in 0.0 seconds
[0m11:01:54  On master: ROLLBACK
[0m11:01:54  Using postgres connection "master"
[0m11:01:54  On master: BEGIN
[0m11:01:54  SQL status: BEGIN in 0.0 seconds
[0m11:01:54  On master: COMMIT
[0m11:01:54  Using postgres connection "master"
[0m11:01:54  On master: COMMIT
[0m11:01:54  SQL status: COMMIT in 0.0 seconds
[0m11:01:54  On master: Close
[0m11:01:54  Concurrency: 1 threads (target='dev')
[0m11:01:54  
[0m11:01:54  Began running node seed.jaffle_shop.raw_customers
[0m11:01:54  1 of 3 START seed file public.raw_customers .................................... [RUN]
[0m11:01:54  Acquiring new postgres connection 'seed.jaffle_shop.raw_customers'
[0m11:01:54  Began compiling node seed.jaffle_shop.raw_customers
[0m11:01:54  Timing info for seed.jaffle_shop.raw_customers (compile): 13:01:54.373827 => 13:01:54.373827
[0m11:01:54  Began executing node seed.jaffle_shop.raw_customers
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m11:01:54  On seed.jaffle_shop.raw_customers: BEGIN
[0m11:01:54  Opening a new connection, currently in state init
[0m11:01:54  SQL status: BEGIN in 0.0 seconds
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m11:01:54  On seed.jaffle_shop.raw_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "seed.jaffle_shop.raw_customers"} */

    create table "sales"."public"."raw_customers" ("id" integer,"first_name" text,"last_name" text)
  
[0m11:01:54  SQL status: CREATE TABLE in 0.0 seconds
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m11:01:54  On seed.jaffle_shop.raw_customers: 
          insert into "sales"."public"."raw_customers" ("id", "first_name", "last_name") values
          (%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s),(%s,%s,%s...
[0m11:01:54  SQL status: INSERT 0 100 in 0.0 seconds
[0m11:01:54  Writing runtime SQL for node "seed.jaffle_shop.raw_customers"
[0m11:01:54  On seed.jaffle_shop.raw_customers: COMMIT
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_customers"
[0m11:01:54  On seed.jaffle_shop.raw_customers: COMMIT
[0m11:01:54  SQL status: COMMIT in 0.0 seconds
[0m11:01:54  Timing info for seed.jaffle_shop.raw_customers (execute): 13:01:54.376814 => 13:01:54.585567
[0m11:01:54  On seed.jaffle_shop.raw_customers: Close
[0m11:01:54  1 of 3 OK loaded seed file public.raw_customers ................................ [[32mINSERT 100[0m in 0.22s]
[0m11:01:54  Finished running node seed.jaffle_shop.raw_customers
[0m11:01:54  Began running node seed.jaffle_shop.raw_orders
[0m11:01:54  2 of 3 START seed file public.raw_orders ....................................... [RUN]
[0m11:01:54  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_customers, now seed.jaffle_shop.raw_orders)
[0m11:01:54  Began compiling node seed.jaffle_shop.raw_orders
[0m11:01:54  Timing info for seed.jaffle_shop.raw_orders (compile): 13:01:54.599089 => 13:01:54.599089
[0m11:01:54  Began executing node seed.jaffle_shop.raw_orders
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m11:01:54  On seed.jaffle_shop.raw_orders: BEGIN
[0m11:01:54  Opening a new connection, currently in state closed
[0m11:01:54  SQL status: BEGIN in 0.0 seconds
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m11:01:54  On seed.jaffle_shop.raw_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "seed.jaffle_shop.raw_orders"} */

    create table "sales"."public"."raw_orders" ("id" integer,"user_id" integer,"order_date" date,"status" text)
  
[0m11:01:54  SQL status: CREATE TABLE in 0.0 seconds
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m11:01:54  On seed.jaffle_shop.raw_orders: 
          insert into "sales"."public"."raw_orders" ("id", "user_id", "order_date", "status") values
          (%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%...
[0m11:01:54  SQL status: INSERT 0 99 in 0.0 seconds
[0m11:01:54  Writing runtime SQL for node "seed.jaffle_shop.raw_orders"
[0m11:01:54  On seed.jaffle_shop.raw_orders: COMMIT
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_orders"
[0m11:01:54  On seed.jaffle_shop.raw_orders: COMMIT
[0m11:01:54  SQL status: COMMIT in 0.0 seconds
[0m11:01:54  Timing info for seed.jaffle_shop.raw_orders (execute): 13:01:54.600934 => 13:01:54.770263
[0m11:01:54  On seed.jaffle_shop.raw_orders: Close
[0m11:01:54  2 of 3 OK loaded seed file public.raw_orders ................................... [[32mINSERT 99[0m in 0.18s]
[0m11:01:54  Finished running node seed.jaffle_shop.raw_orders
[0m11:01:54  Began running node seed.jaffle_shop.raw_payments
[0m11:01:54  3 of 3 START seed file public.raw_payments ..................................... [RUN]
[0m11:01:54  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_orders, now seed.jaffle_shop.raw_payments)
[0m11:01:54  Began compiling node seed.jaffle_shop.raw_payments
[0m11:01:54  Timing info for seed.jaffle_shop.raw_payments (compile): 13:01:54.783428 => 13:01:54.783428
[0m11:01:54  Began executing node seed.jaffle_shop.raw_payments
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m11:01:54  On seed.jaffle_shop.raw_payments: BEGIN
[0m11:01:54  Opening a new connection, currently in state closed
[0m11:01:54  SQL status: BEGIN in 0.0 seconds
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m11:01:54  On seed.jaffle_shop.raw_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "seed.jaffle_shop.raw_payments"} */

    create table "sales"."public"."raw_payments" ("id" integer,"order_id" integer,"payment_method" text,"amount" integer)
  
[0m11:01:54  SQL status: CREATE TABLE in 0.0 seconds
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m11:01:54  On seed.jaffle_shop.raw_payments: 
          insert into "sales"."public"."raw_payments" ("id", "order_id", "payment_method", "amount") values
          (%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(%s,%s,%s,%s),(...
[0m11:01:54  SQL status: INSERT 0 113 in 0.0 seconds
[0m11:01:54  Writing runtime SQL for node "seed.jaffle_shop.raw_payments"
[0m11:01:54  On seed.jaffle_shop.raw_payments: COMMIT
[0m11:01:54  Using postgres connection "seed.jaffle_shop.raw_payments"
[0m11:01:54  On seed.jaffle_shop.raw_payments: COMMIT
[0m11:01:54  SQL status: COMMIT in 0.0 seconds
[0m11:01:54  Timing info for seed.jaffle_shop.raw_payments (execute): 13:01:54.784420 => 13:01:54.984773
[0m11:01:54  On seed.jaffle_shop.raw_payments: Close
[0m11:01:54  3 of 3 OK loaded seed file public.raw_payments ................................. [[32mINSERT 113[0m in 0.21s]
[0m11:01:54  Finished running node seed.jaffle_shop.raw_payments
[0m11:01:54  Using postgres connection "master"
[0m11:01:54  On master: BEGIN
[0m11:01:54  Opening a new connection, currently in state closed
[0m11:01:55  SQL status: BEGIN in 0.0 seconds
[0m11:01:55  On master: COMMIT
[0m11:01:55  Using postgres connection "master"
[0m11:01:55  On master: COMMIT
[0m11:01:55  SQL status: COMMIT in 0.0 seconds
[0m11:01:55  On master: Close
[0m11:01:55  Connection 'master' was properly closed.
[0m11:01:55  Connection 'list_sales' was properly closed.
[0m11:01:55  Connection 'list_sales_public' was properly closed.
[0m11:01:55  Connection 'seed.jaffle_shop.raw_payments' was properly closed.
[0m11:01:55  
[0m11:01:55  Finished running 3 seeds in 0 hours 0 minutes and 1.25 seconds (1.25s).
[0m11:01:55  Command end result
[0m11:01:55  
[0m11:01:55  [32mCompleted successfully[0m
[0m11:01:55  
[0m11:01:55  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m11:01:55  Command `dbt seed` succeeded at 13:01:55.181044 after 1.45 seconds
[0m11:01:55  Flushing usage events
[0m11:02:03  Running with dbt=1.5.0
[0m11:02:03  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:02:03  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:02:03  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:02:03  Partial parsing enabled, no changes found, skipping parsing
[0m11:02:03  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:02:03  
[0m11:02:03  Acquiring new postgres connection 'master'
[0m11:02:03  Acquiring new postgres connection 'list_sales'
[0m11:02:03  Using postgres connection "list_sales"
[0m11:02:03  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:02:03  Opening a new connection, currently in state init
[0m11:02:03  SQL status: SELECT 4 in 0.0 seconds
[0m11:02:03  On list_sales: Close
[0m11:02:03  Acquiring new postgres connection 'list_sales_public'
[0m11:02:03  Using postgres connection "list_sales_public"
[0m11:02:03  On list_sales_public: BEGIN
[0m11:02:03  Opening a new connection, currently in state init
[0m11:02:03  SQL status: BEGIN in 0.0 seconds
[0m11:02:03  Using postgres connection "list_sales_public"
[0m11:02:03  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:02:03  SQL status: SELECT 3 in 0.0 seconds
[0m11:02:03  On list_sales_public: ROLLBACK
[0m11:02:03  On list_sales_public: Close
[0m11:02:03  Using postgres connection "master"
[0m11:02:03  On master: BEGIN
[0m11:02:03  Opening a new connection, currently in state init
[0m11:02:03  SQL status: BEGIN in 0.0 seconds
[0m11:02:03  Using postgres connection "master"
[0m11:02:03  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:02:03  SQL status: SELECT 0 in 0.0 seconds
[0m11:02:03  On master: ROLLBACK
[0m11:02:03  Using postgres connection "master"
[0m11:02:03  On master: BEGIN
[0m11:02:03  SQL status: BEGIN in 0.0 seconds
[0m11:02:03  On master: COMMIT
[0m11:02:03  Using postgres connection "master"
[0m11:02:03  On master: COMMIT
[0m11:02:03  SQL status: COMMIT in 0.0 seconds
[0m11:02:03  On master: Close
[0m11:02:03  Concurrency: 1 threads (target='dev')
[0m11:02:03  
[0m11:02:03  Began running node model.jaffle_shop.stg_customers
[0m11:02:03  1 of 5 START sql view model public.stg_customers ............................... [RUN]
[0m11:02:03  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m11:02:03  Began compiling node model.jaffle_shop.stg_customers
[0m11:02:03  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:02:03  Timing info for model.jaffle_shop.stg_customers (compile): 13:02:03.745766 => 13:02:03.748627
[0m11:02:03  Began executing node model.jaffle_shop.stg_customers
[0m11:02:03  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m11:02:03  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:02:03  On model.jaffle_shop.stg_customers: BEGIN
[0m11:02:03  Opening a new connection, currently in state init
[0m11:02:03  SQL status: BEGIN in 0.0 seconds
[0m11:02:03  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:02:03  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m11:02:03  SQL status: CREATE VIEW in 0.0 seconds
[0m11:02:03  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:02:03  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m11:02:03  SQL status: ALTER TABLE in 0.0 seconds
[0m11:02:03  On model.jaffle_shop.stg_customers: COMMIT
[0m11:02:03  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:02:04  On model.jaffle_shop.stg_customers: COMMIT
[0m11:02:04  SQL status: COMMIT in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:02:04  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "sales"."public"."stg_customers__dbt_backup" cascade
[0m11:02:04  SQL status: DROP VIEW in 0.0 seconds
[0m11:02:04  Timing info for model.jaffle_shop.stg_customers (execute): 13:02:03.750649 => 13:02:04.016117
[0m11:02:04  On model.jaffle_shop.stg_customers: Close
[0m11:02:04  1 of 5 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.27s]
[0m11:02:04  Finished running node model.jaffle_shop.stg_customers
[0m11:02:04  Began running node model.jaffle_shop.stg_orders
[0m11:02:04  2 of 5 START sql view model public.stg_orders .................................. [RUN]
[0m11:02:04  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:02:04  Began compiling node model.jaffle_shop.stg_orders
[0m11:02:04  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:02:04  Timing info for model.jaffle_shop.stg_orders (compile): 13:02:04.028122 => 13:02:04.032124
[0m11:02:04  Began executing node model.jaffle_shop.stg_orders
[0m11:02:04  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:02:04  On model.jaffle_shop.stg_orders: BEGIN
[0m11:02:04  Opening a new connection, currently in state closed
[0m11:02:04  SQL status: BEGIN in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:02:04  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  create view "sales"."public"."stg_orders__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
[0m11:02:04  SQL status: CREATE VIEW in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:02:04  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m11:02:04  SQL status: ALTER TABLE in 0.0 seconds
[0m11:02:04  On model.jaffle_shop.stg_orders: COMMIT
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:02:04  On model.jaffle_shop.stg_orders: COMMIT
[0m11:02:04  SQL status: COMMIT in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:02:04  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop view if exists "sales"."public"."stg_orders__dbt_backup" cascade
[0m11:02:04  SQL status: DROP VIEW in 0.0 seconds
[0m11:02:04  Timing info for model.jaffle_shop.stg_orders (execute): 13:02:04.034124 => 13:02:04.129104
[0m11:02:04  On model.jaffle_shop.stg_orders: Close
[0m11:02:04  2 of 5 OK created sql view model public.stg_orders ............................. [[32mCREATE VIEW[0m in 0.11s]
[0m11:02:04  Finished running node model.jaffle_shop.stg_orders
[0m11:02:04  Began running node model.jaffle_shop.stg_payments
[0m11:02:04  3 of 5 START sql view model public.stg_payments ................................ [RUN]
[0m11:02:04  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:02:04  Began compiling node model.jaffle_shop.stg_payments
[0m11:02:04  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:02:04  Timing info for model.jaffle_shop.stg_payments (compile): 13:02:04.139072 => 13:02:04.144070
[0m11:02:04  Began executing node model.jaffle_shop.stg_payments
[0m11:02:04  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:02:04  On model.jaffle_shop.stg_payments: BEGIN
[0m11:02:04  Opening a new connection, currently in state closed
[0m11:02:04  SQL status: BEGIN in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:02:04  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m11:02:04  SQL status: CREATE VIEW in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:02:04  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m11:02:04  SQL status: ALTER TABLE in 0.0 seconds
[0m11:02:04  On model.jaffle_shop.stg_payments: COMMIT
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:02:04  On model.jaffle_shop.stg_payments: COMMIT
[0m11:02:04  SQL status: COMMIT in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:02:04  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "sales"."public"."stg_payments__dbt_backup" cascade
[0m11:02:04  SQL status: DROP VIEW in 0.0 seconds
[0m11:02:04  Timing info for model.jaffle_shop.stg_payments (execute): 13:02:04.146070 => 13:02:04.237456
[0m11:02:04  On model.jaffle_shop.stg_payments: Close
[0m11:02:04  3 of 5 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.11s]
[0m11:02:04  Finished running node model.jaffle_shop.stg_payments
[0m11:02:04  Began running node model.jaffle_shop.customers
[0m11:02:04  4 of 5 START sql table model public.customers .................................. [RUN]
[0m11:02:04  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.customers)
[0m11:02:04  Began compiling node model.jaffle_shop.customers
[0m11:02:04  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:02:04  Timing info for model.jaffle_shop.customers (compile): 13:02:04.250240 => 13:02:04.254238
[0m11:02:04  Began executing node model.jaffle_shop.customers
[0m11:02:04  Writing runtime sql for node "model.jaffle_shop.customers"
[0m11:02:04  Using postgres connection "model.jaffle_shop.customers"
[0m11:02:04  On model.jaffle_shop.customers: BEGIN
[0m11:02:04  Opening a new connection, currently in state closed
[0m11:02:04  SQL status: BEGIN in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.customers"
[0m11:02:04  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "sales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select * from "sales"."public"."stg_customers"

),

orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m11:02:04  SQL status: SELECT 100 in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.customers"
[0m11:02:04  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers__dbt_tmp" rename to "customers"
[0m11:02:04  SQL status: ALTER TABLE in 0.0 seconds
[0m11:02:04  On model.jaffle_shop.customers: COMMIT
[0m11:02:04  Using postgres connection "model.jaffle_shop.customers"
[0m11:02:04  On model.jaffle_shop.customers: COMMIT
[0m11:02:04  SQL status: COMMIT in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.customers"
[0m11:02:04  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop table if exists "sales"."public"."customers__dbt_backup" cascade
[0m11:02:04  SQL status: DROP TABLE in 0.0 seconds
[0m11:02:04  Timing info for model.jaffle_shop.customers (execute): 13:02:04.258249 => 13:02:04.377389
[0m11:02:04  On model.jaffle_shop.customers: Close
[0m11:02:04  4 of 5 OK created sql table model public.customers ............................. [[32mSELECT 100[0m in 0.13s]
[0m11:02:04  Finished running node model.jaffle_shop.customers
[0m11:02:04  Began running node model.jaffle_shop.orders
[0m11:02:04  5 of 5 START sql table model public.orders ..................................... [RUN]
[0m11:02:04  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m11:02:04  Began compiling node model.jaffle_shop.orders
[0m11:02:04  Writing injected SQL for node "model.jaffle_shop.orders"
[0m11:02:04  Timing info for model.jaffle_shop.orders (compile): 13:02:04.387389 => 13:02:04.394794
[0m11:02:04  Began executing node model.jaffle_shop.orders
[0m11:02:04  Writing runtime sql for node "model.jaffle_shop.orders"
[0m11:02:04  Using postgres connection "model.jaffle_shop.orders"
[0m11:02:04  On model.jaffle_shop.orders: BEGIN
[0m11:02:04  Opening a new connection, currently in state closed
[0m11:02:04  SQL status: BEGIN in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.orders"
[0m11:02:04  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "sales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    

with orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.credit_card_amount,

        order_payments.coupon_amount,

        order_payments.bank_transfer_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m11:02:04  SQL status: SELECT 99 in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.orders"
[0m11:02:04  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders__dbt_tmp" rename to "orders"
[0m11:02:04  SQL status: ALTER TABLE in 0.0 seconds
[0m11:02:04  On model.jaffle_shop.orders: COMMIT
[0m11:02:04  Using postgres connection "model.jaffle_shop.orders"
[0m11:02:04  On model.jaffle_shop.orders: COMMIT
[0m11:02:04  SQL status: COMMIT in 0.0 seconds
[0m11:02:04  Using postgres connection "model.jaffle_shop.orders"
[0m11:02:04  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "sales"."public"."orders__dbt_backup" cascade
[0m11:02:04  SQL status: DROP TABLE in 0.0 seconds
[0m11:02:04  Timing info for model.jaffle_shop.orders (execute): 13:02:04.395793 => 13:02:04.492891
[0m11:02:04  On model.jaffle_shop.orders: Close
[0m11:02:04  5 of 5 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.11s]
[0m11:02:04  Finished running node model.jaffle_shop.orders
[0m11:02:04  Using postgres connection "master"
[0m11:02:04  On master: BEGIN
[0m11:02:04  Opening a new connection, currently in state closed
[0m11:02:04  SQL status: BEGIN in 0.0 seconds
[0m11:02:04  On master: COMMIT
[0m11:02:04  Using postgres connection "master"
[0m11:02:04  On master: COMMIT
[0m11:02:04  SQL status: COMMIT in 0.0 seconds
[0m11:02:04  On master: Close
[0m11:02:04  Connection 'master' was properly closed.
[0m11:02:04  Connection 'list_sales' was properly closed.
[0m11:02:04  Connection 'list_sales_public' was properly closed.
[0m11:02:04  Connection 'model.jaffle_shop.orders' was properly closed.
[0m11:02:04  
[0m11:02:04  Finished running 3 view models, 2 table models in 0 hours 0 minutes and 1.06 seconds (1.06s).
[0m11:02:04  Command end result
[0m11:02:04  
[0m11:02:04  [32mCompleted successfully[0m
[0m11:02:04  
[0m11:02:04  Done. PASS=5 WARN=0 ERROR=0 SKIP=0 TOTAL=5
[0m11:02:04  Command `dbt run` succeeded at 13:02:04.566933 after 1.26 seconds
[0m11:02:04  Flushing usage events
[0m11:02:18  Running with dbt=1.5.0
[0m11:02:18  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:02:18  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:02:18  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:02:18  Partial parsing enabled, no changes found, skipping parsing
[0m11:02:18  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:02:18  
[0m11:02:18  Acquiring new postgres connection 'master'
[0m11:02:18  Acquiring new postgres connection 'list_sales_public'
[0m11:02:18  Using postgres connection "list_sales_public"
[0m11:02:18  On list_sales_public: BEGIN
[0m11:02:18  Opening a new connection, currently in state init
[0m11:02:18  SQL status: BEGIN in 0.0 seconds
[0m11:02:18  Using postgres connection "list_sales_public"
[0m11:02:18  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:02:18  SQL status: SELECT 8 in 0.0 seconds
[0m11:02:18  On list_sales_public: ROLLBACK
[0m11:02:18  On list_sales_public: Close
[0m11:02:18  Using postgres connection "master"
[0m11:02:18  On master: BEGIN
[0m11:02:18  Opening a new connection, currently in state init
[0m11:02:18  SQL status: BEGIN in 0.0 seconds
[0m11:02:18  Using postgres connection "master"
[0m11:02:18  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:02:18  SQL status: SELECT 3 in 0.0 seconds
[0m11:02:18  On master: ROLLBACK
[0m11:02:18  Using postgres connection "master"
[0m11:02:18  On master: BEGIN
[0m11:02:18  SQL status: BEGIN in 0.0 seconds
[0m11:02:18  On master: COMMIT
[0m11:02:18  Using postgres connection "master"
[0m11:02:18  On master: COMMIT
[0m11:02:18  SQL status: COMMIT in 0.0 seconds
[0m11:02:18  On master: Close
[0m11:02:18  Concurrency: 1 threads (target='dev')
[0m11:02:18  
[0m11:02:18  Began running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:18  1 of 20 START test accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m11:02:18  Acquiring new postgres connection 'test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3'
[0m11:02:18  Began compiling node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:18  Writing injected SQL for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:02:18  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (compile): 13:02:18.739950 => 13:02:18.754650
[0m11:02:18  Began executing node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:18  Writing runtime sql for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:02:18  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:02:18  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: BEGIN
[0m11:02:18  Opening a new connection, currently in state init
[0m11:02:18  SQL status: BEGIN in 0.0 seconds
[0m11:02:18  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:02:18  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m11:02:18  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:18  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (execute): 13:02:18.758653 => 13:02:18.941017
[0m11:02:18  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: ROLLBACK
[0m11:02:18  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: Close
[0m11:02:18  1 of 20 PASS accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.21s]
[0m11:02:18  Finished running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:18  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:18  2 of 20 START test accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m11:02:18  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3, now test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad)
[0m11:02:18  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:18  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:02:18  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 13:02:18.951876 => 13:02:18.960873
[0m11:02:18  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:18  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:02:18  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:02:18  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: BEGIN
[0m11:02:18  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:02:19  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."stg_orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 13:02:18.963289 => 13:02:19.022493
[0m11:02:19  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: ROLLBACK
[0m11:02:19  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: Close
[0m11:02:19  2 of 20 PASS accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.08s]
[0m11:02:19  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:19  Began running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:19  3 of 20 START test accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad, now test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278)
[0m11:02:19  Began compiling node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:02:19  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (compile): 13:02:19.033501 => 13:02:19.046493
[0m11:02:19  Began executing node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:02:19  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:02:19  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:02:19  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        payment_method as value_field,
        count(*) as n_records

    from "sales"."public"."stg_payments"
    group by payment_method

)

select *
from all_values
where value_field not in (
    'credit_card','coupon','bank_transfer','gift_card'
)



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (execute): 13:02:19.048495 => 13:02:19.107031
[0m11:02:19  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: ROLLBACK
[0m11:02:19  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: Close
[0m11:02:19  3 of 20 PASS accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [[32mPASS[0m in 0.08s]
[0m11:02:19  Finished running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:19  Began running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:19  4 of 20 START test not_null_customers_customer_id .............................. [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278, now test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (compile): 13:02:19.118216 => 13:02:19.126218
[0m11:02:19  Began executing node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:02:19  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:02:19  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."customers"
where customer_id is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (execute): 13:02:19.131223 => 13:02:19.189000
[0m11:02:19  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: Close
[0m11:02:19  4 of 20 PASS not_null_customers_customer_id .................................... [[32mPASS[0m in 0.08s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:19  Began running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:19  5 of 20 START test not_null_orders_amount ...................................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d, now test.jaffle_shop.not_null_orders_amount.106140f9fd)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (compile): 13:02:19.200278 => 13:02:19.207567
[0m11:02:19  Began executing node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:02:19  On test.jaffle_shop.not_null_orders_amount.106140f9fd: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:02:19  On test.jaffle_shop.not_null_orders_amount.106140f9fd: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select amount
from "sales"."public"."orders"
where amount is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (execute): 13:02:19.209593 => 13:02:19.265431
[0m11:02:19  On test.jaffle_shop.not_null_orders_amount.106140f9fd: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_orders_amount.106140f9fd: Close
[0m11:02:19  5 of 20 PASS not_null_orders_amount ............................................ [[32mPASS[0m in 0.07s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:19  Began running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:19  6 of 20 START test not_null_orders_bank_transfer_amount ........................ [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_amount.106140f9fd, now test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (compile): 13:02:19.279872 => 13:02:19.284872
[0m11:02:19  Began executing node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:02:19  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:02:19  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select bank_transfer_amount
from "sales"."public"."orders"
where bank_transfer_amount is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (execute): 13:02:19.286874 => 13:02:19.344702
[0m11:02:19  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: Close
[0m11:02:19  6 of 20 PASS not_null_orders_bank_transfer_amount .............................. [[32mPASS[0m in 0.07s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:19  Began running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:19  7 of 20 START test not_null_orders_coupon_amount ............................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49, now test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (compile): 13:02:19.356200 => 13:02:19.363320
[0m11:02:19  Began executing node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:02:19  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:02:19  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select coupon_amount
from "sales"."public"."orders"
where coupon_amount is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (execute): 13:02:19.365586 => 13:02:19.426476
[0m11:02:19  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: Close
[0m11:02:19  7 of 20 PASS not_null_orders_coupon_amount ..................................... [[32mPASS[0m in 0.08s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:19  Began running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:19  8 of 20 START test not_null_orders_credit_card_amount .......................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625, now test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (compile): 13:02:19.440432 => 13:02:19.446434
[0m11:02:19  Began executing node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:02:19  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:02:19  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select credit_card_amount
from "sales"."public"."orders"
where credit_card_amount is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (execute): 13:02:19.448438 => 13:02:19.541694
[0m11:02:19  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: Close
[0m11:02:19  8 of 20 PASS not_null_orders_credit_card_amount ................................ [[32mPASS[0m in 0.11s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:19  Began running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:19  9 of 20 START test not_null_orders_customer_id ................................. [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59, now test.jaffle_shop.not_null_orders_customer_id.c5f02694af)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (compile): 13:02:19.551098 => 13:02:19.559633
[0m11:02:19  Began executing node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:02:19  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:02:19  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."orders"
where customer_id is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (execute): 13:02:19.561639 => 13:02:19.617981
[0m11:02:19  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: Close
[0m11:02:19  9 of 20 PASS not_null_orders_customer_id ....................................... [[32mPASS[0m in 0.07s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:19  Began running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:19  10 of 20 START test not_null_orders_gift_card_amount ........................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_customer_id.c5f02694af, now test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (compile): 13:02:19.631985 => 13:02:19.637996
[0m11:02:19  Began executing node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:02:19  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:02:19  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select gift_card_amount
from "sales"."public"."orders"
where gift_card_amount is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (execute): 13:02:19.641990 => 13:02:19.697751
[0m11:02:19  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: Close
[0m11:02:19  10 of 20 PASS not_null_orders_gift_card_amount ................................. [[32mPASS[0m in 0.07s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:19  Began running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:19  11 of 20 START test not_null_orders_order_id ................................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a, now test.jaffle_shop.not_null_orders_order_id.cf6c17daed)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (compile): 13:02:19.712753 => 13:02:19.717752
[0m11:02:19  Began executing node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:02:19  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:02:19  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "sales"."public"."orders"
where order_id is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (execute): 13:02:19.720751 => 13:02:19.784624
[0m11:02:19  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: Close
[0m11:02:19  11 of 20 PASS not_null_orders_order_id ......................................... [[32mPASS[0m in 0.08s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:19  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:19  12 of 20 START test not_null_stg_customers_customer_id ......................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_order_id.cf6c17daed, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 13:02:19.801130 => 13:02:19.812535
[0m11:02:19  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:02:19  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:02:19  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."stg_customers"
where customer_id is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 13:02:19.815567 => 13:02:19.871413
[0m11:02:19  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: Close
[0m11:02:19  12 of 20 PASS not_null_stg_customers_customer_id ............................... [[32mPASS[0m in 0.08s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:19  Began running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:19  13 of 20 START test not_null_stg_orders_order_id ............................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (compile): 13:02:19.882388 => 13:02:19.890389
[0m11:02:19  Began executing node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:02:19  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:19  SQL status: BEGIN in 0.0 seconds
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:02:19  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "sales"."public"."stg_orders"
where order_id is null



      
    ) dbt_internal_test
[0m11:02:19  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:19  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (execute): 13:02:19.892580 => 13:02:19.946976
[0m11:02:19  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: ROLLBACK
[0m11:02:19  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: Close
[0m11:02:19  13 of 20 PASS not_null_stg_orders_order_id ..................................... [[32mPASS[0m in 0.07s]
[0m11:02:19  Finished running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:19  Began running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:19  14 of 20 START test not_null_stg_payments_payment_id ........................... [RUN]
[0m11:02:19  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64, now test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075)
[0m11:02:19  Began compiling node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:19  Writing injected SQL for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:02:19  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (compile): 13:02:19.960467 => 13:02:19.965797
[0m11:02:19  Began executing node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:19  Writing runtime sql for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:02:19  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:02:19  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: BEGIN
[0m11:02:19  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:02:20  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select payment_id
from "sales"."public"."stg_payments"
where payment_id is null



      
    ) dbt_internal_test
[0m11:02:20  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:20  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (execute): 13:02:19.967795 => 13:02:20.031491
[0m11:02:20  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: ROLLBACK
[0m11:02:20  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: Close
[0m11:02:20  14 of 20 PASS not_null_stg_payments_payment_id ................................. [[32mPASS[0m in 0.08s]
[0m11:02:20  Finished running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:20  Began running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:20  15 of 20 START test relationships_orders_customer_id__customer_id__ref_customers_  [RUN]
[0m11:02:20  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075, now test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2)
[0m11:02:20  Began compiling node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:20  Writing injected SQL for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:02:20  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (compile): 13:02:20.044509 => 13:02:20.054037
[0m11:02:20  Began executing node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:20  Writing runtime sql for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:02:20  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:02:20  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: BEGIN
[0m11:02:20  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:02:20  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with child as (
    select customer_id as from_field
    from "sales"."public"."orders"
    where customer_id is not null
),

parent as (
    select customer_id as to_field
    from "sales"."public"."customers"
)

select
    from_field

from child
left join parent
    on child.from_field = parent.to_field

where parent.to_field is null



      
    ) dbt_internal_test
[0m11:02:20  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:20  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (execute): 13:02:20.058036 => 13:02:20.118006
[0m11:02:20  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: ROLLBACK
[0m11:02:20  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: Close
[0m11:02:20  15 of 20 PASS relationships_orders_customer_id__customer_id__ref_customers_ .... [[32mPASS[0m in 0.08s]
[0m11:02:20  Finished running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:20  Began running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:20  16 of 20 START test unique_customers_customer_id ............................... [RUN]
[0m11:02:20  Re-using an available connection from the pool (formerly test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2, now test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1)
[0m11:02:20  Began compiling node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:20  Writing injected SQL for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:02:20  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (compile): 13:02:20.133003 => 13:02:20.143958
[0m11:02:20  Began executing node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:20  Writing runtime sql for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:02:20  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: BEGIN
[0m11:02:20  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:02:20  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:02:20  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:20  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (execute): 13:02:20.145850 => 13:02:20.208498
[0m11:02:20  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: ROLLBACK
[0m11:02:20  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: Close
[0m11:02:20  16 of 20 PASS unique_customers_customer_id ..................................... [[32mPASS[0m in 0.08s]
[0m11:02:20  Finished running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:20  Began running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:20  17 of 20 START test unique_orders_order_id ..................................... [RUN]
[0m11:02:20  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1, now test.jaffle_shop.unique_orders_order_id.fed79b3a6e)
[0m11:02:20  Began compiling node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:20  Writing injected SQL for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:02:20  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (compile): 13:02:20.218068 => 13:02:20.225070
[0m11:02:20  Began executing node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:20  Writing runtime sql for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:02:20  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: BEGIN
[0m11:02:20  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:02:20  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "sales"."public"."orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:02:20  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:20  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (execute): 13:02:20.227075 => 13:02:20.302716
[0m11:02:20  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: ROLLBACK
[0m11:02:20  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: Close
[0m11:02:20  17 of 20 PASS unique_orders_order_id ........................................... [[32mPASS[0m in 0.09s]
[0m11:02:20  Finished running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:20  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:20  18 of 20 START test unique_stg_customers_customer_id ........................... [RUN]
[0m11:02:20  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_orders_order_id.fed79b3a6e, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m11:02:20  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:20  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:02:20  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 13:02:20.315710 => 13:02:20.324267
[0m11:02:20  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:20  Writing runtime sql for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:02:20  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: BEGIN
[0m11:02:20  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:02:20  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:02:20  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:20  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 13:02:20.326959 => 13:02:20.381622
[0m11:02:20  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: ROLLBACK
[0m11:02:20  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: Close
[0m11:02:20  18 of 20 PASS unique_stg_customers_customer_id ................................. [[32mPASS[0m in 0.07s]
[0m11:02:20  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:20  Began running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:20  19 of 20 START test unique_stg_orders_order_id ................................. [RUN]
[0m11:02:20  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a)
[0m11:02:20  Began compiling node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:20  Writing injected SQL for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:02:20  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (compile): 13:02:20.395938 => 13:02:20.400938
[0m11:02:20  Began executing node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:20  Writing runtime sql for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:02:20  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: BEGIN
[0m11:02:20  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:02:20  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:02:20  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:20  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (execute): 13:02:20.403935 => 13:02:20.464361
[0m11:02:20  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: ROLLBACK
[0m11:02:20  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: Close
[0m11:02:20  19 of 20 PASS unique_stg_orders_order_id ....................................... [[32mPASS[0m in 0.08s]
[0m11:02:20  Finished running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:20  Began running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:20  20 of 20 START test unique_stg_payments_payment_id ............................. [RUN]
[0m11:02:20  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a, now test.jaffle_shop.unique_stg_payments_payment_id.3744510712)
[0m11:02:20  Began compiling node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:20  Writing injected SQL for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:02:20  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (compile): 13:02:20.480328 => 13:02:20.490341
[0m11:02:20  Began executing node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:20  Writing runtime sql for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:02:20  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: BEGIN
[0m11:02:20  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:02:20  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    payment_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_payments"
where payment_id is not null
group by payment_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:02:20  SQL status: SELECT 1 in 0.0 seconds
[0m11:02:20  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (execute): 13:02:20.494327 => 13:02:20.556688
[0m11:02:20  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: ROLLBACK
[0m11:02:20  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: Close
[0m11:02:20  20 of 20 PASS unique_stg_payments_payment_id ................................... [[32mPASS[0m in 0.09s]
[0m11:02:20  Finished running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:20  Using postgres connection "master"
[0m11:02:20  On master: BEGIN
[0m11:02:20  Opening a new connection, currently in state closed
[0m11:02:20  SQL status: BEGIN in 0.0 seconds
[0m11:02:20  On master: COMMIT
[0m11:02:20  Using postgres connection "master"
[0m11:02:20  On master: COMMIT
[0m11:02:20  SQL status: COMMIT in 0.0 seconds
[0m11:02:20  On master: Close
[0m11:02:20  Connection 'master' was properly closed.
[0m11:02:20  Connection 'list_sales_public' was properly closed.
[0m11:02:20  Connection 'test.jaffle_shop.unique_stg_payments_payment_id.3744510712' was properly closed.
[0m11:02:20  
[0m11:02:20  Finished running 20 tests in 0 hours 0 minutes and 2.07 seconds (2.07s).
[0m11:02:20  Command end result
[0m11:02:20  
[0m11:02:20  [32mCompleted successfully[0m
[0m11:02:20  
[0m11:02:20  Done. PASS=20 WARN=0 ERROR=0 SKIP=0 TOTAL=20
[0m11:02:20  Command `dbt test` succeeded at 13:02:20.647861 after 2.28 seconds
[0m11:02:20  Flushing usage events
[0m11:02:34  Running with dbt=1.5.0
[0m11:02:34  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'fail_fast': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:02:34  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:02:34  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:02:34  Partial parsing enabled, no changes found, skipping parsing
[0m11:02:34  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:02:34  
[0m11:02:34  Acquiring new postgres connection 'master'
[0m11:02:34  Acquiring new postgres connection 'list_sales_public'
[0m11:02:34  Using postgres connection "list_sales_public"
[0m11:02:34  On list_sales_public: BEGIN
[0m11:02:34  Opening a new connection, currently in state init
[0m11:02:34  SQL status: BEGIN in 0.0 seconds
[0m11:02:34  Using postgres connection "list_sales_public"
[0m11:02:34  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:02:34  SQL status: SELECT 8 in 0.0 seconds
[0m11:02:34  On list_sales_public: ROLLBACK
[0m11:02:34  On list_sales_public: Close
[0m11:02:34  Using postgres connection "master"
[0m11:02:34  On master: BEGIN
[0m11:02:34  Opening a new connection, currently in state init
[0m11:02:35  SQL status: BEGIN in 0.0 seconds
[0m11:02:35  Using postgres connection "master"
[0m11:02:35  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:02:35  SQL status: SELECT 3 in 0.0 seconds
[0m11:02:35  On master: ROLLBACK
[0m11:02:35  On master: Close
[0m11:02:35  Concurrency: 1 threads (target='dev')
[0m11:02:35  
[0m11:02:35  Began running node seed.jaffle_shop.raw_customers
[0m11:02:35  Acquiring new postgres connection 'seed.jaffle_shop.raw_customers'
[0m11:02:35  Began compiling node seed.jaffle_shop.raw_customers
[0m11:02:35  Timing info for seed.jaffle_shop.raw_customers (compile): 13:02:35.171415 => 13:02:35.172434
[0m11:02:35  Began executing node seed.jaffle_shop.raw_customers
[0m11:02:35  Timing info for seed.jaffle_shop.raw_customers (execute): 13:02:35.174525 => 13:02:35.174525
[0m11:02:35  Finished running node seed.jaffle_shop.raw_customers
[0m11:02:35  Began running node seed.jaffle_shop.raw_orders
[0m11:02:35  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_customers, now seed.jaffle_shop.raw_orders)
[0m11:02:35  Began compiling node seed.jaffle_shop.raw_orders
[0m11:02:35  Timing info for seed.jaffle_shop.raw_orders (compile): 13:02:35.179824 => 13:02:35.180846
[0m11:02:35  Began executing node seed.jaffle_shop.raw_orders
[0m11:02:35  Timing info for seed.jaffle_shop.raw_orders (execute): 13:02:35.182832 => 13:02:35.182832
[0m11:02:35  Finished running node seed.jaffle_shop.raw_orders
[0m11:02:35  Began running node seed.jaffle_shop.raw_payments
[0m11:02:35  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_orders, now seed.jaffle_shop.raw_payments)
[0m11:02:35  Began compiling node seed.jaffle_shop.raw_payments
[0m11:02:35  Timing info for seed.jaffle_shop.raw_payments (compile): 13:02:35.190549 => 13:02:35.191568
[0m11:02:35  Began executing node seed.jaffle_shop.raw_payments
[0m11:02:35  Timing info for seed.jaffle_shop.raw_payments (execute): 13:02:35.193547 => 13:02:35.193547
[0m11:02:35  Finished running node seed.jaffle_shop.raw_payments
[0m11:02:35  Began running node model.jaffle_shop.stg_customers
[0m11:02:35  Re-using an available connection from the pool (formerly seed.jaffle_shop.raw_payments, now model.jaffle_shop.stg_customers)
[0m11:02:35  Began compiling node model.jaffle_shop.stg_customers
[0m11:02:35  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:02:35  Timing info for model.jaffle_shop.stg_customers (compile): 13:02:35.197545 => 13:02:35.204722
[0m11:02:35  Began executing node model.jaffle_shop.stg_customers
[0m11:02:35  Timing info for model.jaffle_shop.stg_customers (execute): 13:02:35.206723 => 13:02:35.206723
[0m11:02:35  Finished running node model.jaffle_shop.stg_customers
[0m11:02:35  Began running node model.jaffle_shop.stg_orders
[0m11:02:35  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:02:35  Began compiling node model.jaffle_shop.stg_orders
[0m11:02:35  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:02:35  Timing info for model.jaffle_shop.stg_orders (compile): 13:02:35.212551 => 13:02:35.216561
[0m11:02:35  Began executing node model.jaffle_shop.stg_orders
[0m11:02:35  Timing info for model.jaffle_shop.stg_orders (execute): 13:02:35.220611 => 13:02:35.220611
[0m11:02:35  Finished running node model.jaffle_shop.stg_orders
[0m11:02:35  Began running node model.jaffle_shop.stg_payments
[0m11:02:35  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:02:35  Began compiling node model.jaffle_shop.stg_payments
[0m11:02:35  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:02:35  Timing info for model.jaffle_shop.stg_payments (compile): 13:02:35.226555 => 13:02:35.229474
[0m11:02:35  Began executing node model.jaffle_shop.stg_payments
[0m11:02:35  Timing info for model.jaffle_shop.stg_payments (execute): 13:02:35.231498 => 13:02:35.231498
[0m11:02:35  Finished running node model.jaffle_shop.stg_payments
[0m11:02:35  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:35  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 13:02:35.239850 => 13:02:35.251870
[0m11:02:35  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:35  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 13:02:35.256277 => 13:02:35.256277
[0m11:02:35  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:02:35  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m11:02:35  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:02:35  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 13:02:35.262639 => 13:02:35.273638
[0m11:02:35  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:35  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 13:02:35.276636 => 13:02:35.276636
[0m11:02:35  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:02:35  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad)
[0m11:02:35  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:02:35  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 13:02:35.281640 => 13:02:35.294340
[0m11:02:35  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:35  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 13:02:35.296349 => 13:02:35.297856
[0m11:02:35  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:02:35  Began running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad, now test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (compile): 13:02:35.303864 => 13:02:35.311208
[0m11:02:35  Began executing node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:35  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (execute): 13:02:35.313210 => 13:02:35.313210
[0m11:02:35  Finished running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:02:35  Began running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64, now test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a)
[0m11:02:35  Began compiling node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:02:35  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (compile): 13:02:35.320209 => 13:02:35.326492
[0m11:02:35  Began executing node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:35  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (execute): 13:02:35.329039 => 13:02:35.329039
[0m11:02:35  Finished running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:02:35  Began running node model.jaffle_shop.customers
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a, now model.jaffle_shop.customers)
[0m11:02:35  Began compiling node model.jaffle_shop.customers
[0m11:02:35  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:02:35  Timing info for model.jaffle_shop.customers (compile): 13:02:35.337076 => 13:02:35.343064
[0m11:02:35  Began executing node model.jaffle_shop.customers
[0m11:02:35  Timing info for model.jaffle_shop.customers (execute): 13:02:35.344065 => 13:02:35.344065
[0m11:02:35  Finished running node model.jaffle_shop.customers
[0m11:02:35  Began running node model.jaffle_shop.orders
[0m11:02:35  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m11:02:35  Began compiling node model.jaffle_shop.orders
[0m11:02:35  Writing injected SQL for node "model.jaffle_shop.orders"
[0m11:02:35  Timing info for model.jaffle_shop.orders (compile): 13:02:35.350066 => 13:02:35.356062
[0m11:02:35  Began executing node model.jaffle_shop.orders
[0m11:02:35  Timing info for model.jaffle_shop.orders (execute): 13:02:35.358367 => 13:02:35.358367
[0m11:02:35  Finished running node model.jaffle_shop.orders
[0m11:02:35  Began running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:35  Re-using an available connection from the pool (formerly model.jaffle_shop.orders, now test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278)
[0m11:02:35  Began compiling node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:02:35  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (compile): 13:02:35.363653 => 13:02:35.372671
[0m11:02:35  Began executing node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:35  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (execute): 13:02:35.374667 => 13:02:35.374667
[0m11:02:35  Finished running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:02:35  Began running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278, now test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (compile): 13:02:35.380562 => 13:02:35.386604
[0m11:02:35  Began executing node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:35  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (execute): 13:02:35.389685 => 13:02:35.389685
[0m11:02:35  Finished running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:02:35  Began running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075, now test.jaffle_shop.unique_stg_payments_payment_id.3744510712)
[0m11:02:35  Began compiling node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:02:35  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (compile): 13:02:35.394487 => 13:02:35.400051
[0m11:02:35  Began executing node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:35  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (execute): 13:02:35.403047 => 13:02:35.403047
[0m11:02:35  Finished running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:02:35  Began running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_payments_payment_id.3744510712, now test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (compile): 13:02:35.409557 => 13:02:35.415556
[0m11:02:35  Began executing node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:35  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (execute): 13:02:35.418556 => 13:02:35.418556
[0m11:02:35  Finished running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:02:35  Began running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d, now test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1)
[0m11:02:35  Began compiling node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:02:35  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (compile): 13:02:35.425438 => 13:02:35.430438
[0m11:02:35  Began executing node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:35  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (execute): 13:02:35.432440 => 13:02:35.432440
[0m11:02:35  Finished running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:02:35  Began running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1, now test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3)
[0m11:02:35  Began compiling node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:02:35  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (compile): 13:02:35.440314 => 13:02:35.451311
[0m11:02:35  Began executing node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:35  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (execute): 13:02:35.455324 => 13:02:35.455324
[0m11:02:35  Finished running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:02:35  Began running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3, now test.jaffle_shop.not_null_orders_amount.106140f9fd)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (compile): 13:02:35.461522 => 13:02:35.466544
[0m11:02:35  Began executing node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (execute): 13:02:35.470567 => 13:02:35.470567
[0m11:02:35  Finished running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:02:35  Began running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_amount.106140f9fd, now test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (compile): 13:02:35.477317 => 13:02:35.482319
[0m11:02:35  Began executing node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (execute): 13:02:35.485326 => 13:02:35.485326
[0m11:02:35  Finished running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:02:35  Began running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49, now test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (compile): 13:02:35.492326 => 13:02:35.496782
[0m11:02:35  Began executing node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (execute): 13:02:35.500323 => 13:02:35.500323
[0m11:02:35  Finished running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:02:35  Began running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625, now test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (compile): 13:02:35.506313 => 13:02:35.512659
[0m11:02:35  Began executing node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (execute): 13:02:35.513659 => 13:02:35.513659
[0m11:02:35  Finished running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:02:35  Began running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59, now test.jaffle_shop.not_null_orders_customer_id.c5f02694af)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (compile): 13:02:35.523659 => 13:02:35.529089
[0m11:02:35  Began executing node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (execute): 13:02:35.531089 => 13:02:35.531089
[0m11:02:35  Finished running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:02:35  Began running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_customer_id.c5f02694af, now test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (compile): 13:02:35.539091 => 13:02:35.545093
[0m11:02:35  Began executing node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (execute): 13:02:35.546885 => 13:02:35.546885
[0m11:02:35  Finished running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:02:35  Began running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a, now test.jaffle_shop.not_null_orders_order_id.cf6c17daed)
[0m11:02:35  Began compiling node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (compile): 13:02:35.555037 => 13:02:35.560859
[0m11:02:35  Began executing node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:35  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (execute): 13:02:35.563870 => 13:02:35.563870
[0m11:02:35  Finished running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:02:35  Began running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_order_id.cf6c17daed, now test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2)
[0m11:02:35  Began compiling node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:02:35  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (compile): 13:02:35.590874 => 13:02:35.608392
[0m11:02:35  Began executing node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:35  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (execute): 13:02:35.610391 => 13:02:35.610391
[0m11:02:35  Finished running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:02:35  Began running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:35  Re-using an available connection from the pool (formerly test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2, now test.jaffle_shop.unique_orders_order_id.fed79b3a6e)
[0m11:02:35  Began compiling node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:35  Writing injected SQL for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:02:35  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (compile): 13:02:35.619391 => 13:02:35.628390
[0m11:02:35  Began executing node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:35  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (execute): 13:02:35.630389 => 13:02:35.630389
[0m11:02:35  Finished running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:02:35  Connection 'master' was properly closed.
[0m11:02:35  Connection 'list_sales_public' was properly closed.
[0m11:02:35  Connection 'test.jaffle_shop.unique_orders_order_id.fed79b3a6e' was properly closed.
[0m11:02:35  Command end result
[0m11:02:35  Acquiring new postgres connection 'generate_catalog'
[0m11:02:35  Building catalog
[0m11:02:35  Acquiring new postgres connection 'sales.information_schema'
[0m11:02:35  Using postgres connection "sales.information_schema"
[0m11:02:35  On sales.information_schema: BEGIN
[0m11:02:35  Opening a new connection, currently in state init
[0m11:02:35  SQL status: BEGIN in 0.0 seconds
[0m11:02:35  Using postgres connection "sales.information_schema"
[0m11:02:35  On sales.information_schema: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "sales.information_schema"} */

    
    

    select
        'sales' as table_database,
        sch.nspname as table_schema,
        tbl.relname as table_name,
        case tbl.relkind
            when 'v' then 'VIEW'
            else 'BASE TABLE'
        end as table_type,
        tbl_desc.description as table_comment,
        col.attname as column_name,
        col.attnum as column_index,
        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,
        col_desc.description as column_comment,
        pg_get_userbyid(tbl.relowner) as table_owner

    from pg_catalog.pg_namespace sch
    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid
    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid
    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)
    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)

    where (upper(sch.nspname) = upper('public'))
      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session
      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables
      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view
      and col.attnum > 0 -- negative numbers are used for system columns such as oid
      and not col.attisdropped -- column as not been dropped

    order by
        sch.nspname,
        tbl.relname,
        col.attnum
[0m11:02:35  SQL status: SELECT 38 in 0.0 seconds
[0m11:02:35  On sales.information_schema: ROLLBACK
[0m11:02:35  On sales.information_schema: Close
[0m11:02:35  Catalog written to C:\Louw\GitHub\dbt\jaffle_shop\target\catalog.json
[0m11:02:35  Command `dbt docs generate` succeeded at 13:02:35.919470 after 1.20 seconds
[0m11:02:35  Connection 'generate_catalog' was properly closed.
[0m11:02:35  Connection 'sales.information_schema' was properly closed.
[0m11:02:35  Flushing usage events
[0m11:02:45  Running with dbt=1.5.0
[0m11:02:45  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:02:45  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:02:45  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:02:45  Partial parsing enabled, no changes found, skipping parsing
[0m11:07:01  Encountered an error:

[0m11:07:01  Traceback (most recent call last):
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 86, in wrapper
    result, success = func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 71, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 142, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 168, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 215, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 250, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\main.py", line 301, in docs_serve
    results = task.run()
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\task\serve.py", line 28, in run
    httpd.serve_forever()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\socketserver.py", line 232, in serve_forever
    ready = selector.select(poll_interval)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 324, in select
    r, w, _ = self._select(self._readers, self._writers, [], timeout)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 315, in _select
    r, w, x = select.select(r, w, w, timeout)
KeyboardInterrupt

[0m11:07:01  Command `dbt docs serve` failed at 13:07:01.155510 after 255.93 seconds
[0m11:07:01  Flushing usage events
[0m11:21:00  Running with dbt=1.5.0
[0m11:21:00  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:21:00  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:21:00  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:21:00  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m11:21:00  1699: static parser successfully parsed customers.sql
[0m11:21:04  Encountered an error:

[0m11:21:04  Traceback (most recent call last):
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 86, in wrapper
    result, success = func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 71, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 142, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 168, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 215, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\requires.py", line 250, in wrapper
    return func(*args, **kwargs)
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\cli\main.py", line 301, in docs_serve
    results = task.run()
  File "C:\Louw\GitHub\dbt\dbt-env\lib\site-packages\dbt\task\serve.py", line 28, in run
    httpd.serve_forever()
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\socketserver.py", line 232, in serve_forever
    ready = selector.select(poll_interval)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 324, in select
    r, w, _ = self._select(self._readers, self._writers, [], timeout)
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.10_3.10.3056.0_x64__qbz5n2kfra8p0\lib\selectors.py", line 315, in _select
    r, w, x = select.select(r, w, w, timeout)
KeyboardInterrupt

[0m11:21:04  Command `dbt docs serve` failed at 13:21:04.380673 after 4.02 seconds
[0m11:21:04  Flushing usage events
[0m11:21:09  Running with dbt=1.5.0
[0m11:21:09  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:21:09  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:21:09  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:21:09  Partial parsing enabled, no changes found, skipping parsing
[0m11:21:09  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:21:09  
[0m11:21:09  Acquiring new postgres connection 'master'
[0m11:21:09  Acquiring new postgres connection 'list_sales'
[0m11:21:09  Using postgres connection "list_sales"
[0m11:21:09  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:21:09  Opening a new connection, currently in state init
[0m11:21:10  SQL status: SELECT 4 in 0.0 seconds
[0m11:21:10  On list_sales: Close
[0m11:21:10  Acquiring new postgres connection 'list_sales_public'
[0m11:21:10  Using postgres connection "list_sales_public"
[0m11:21:10  On list_sales_public: BEGIN
[0m11:21:10  Opening a new connection, currently in state init
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  Using postgres connection "list_sales_public"
[0m11:21:10  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:21:10  SQL status: SELECT 8 in 0.0 seconds
[0m11:21:10  On list_sales_public: ROLLBACK
[0m11:21:10  On list_sales_public: Close
[0m11:21:10  Using postgres connection "master"
[0m11:21:10  On master: BEGIN
[0m11:21:10  Opening a new connection, currently in state init
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  Using postgres connection "master"
[0m11:21:10  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:21:10  SQL status: SELECT 3 in 0.0 seconds
[0m11:21:10  On master: ROLLBACK
[0m11:21:10  Using postgres connection "master"
[0m11:21:10  On master: BEGIN
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  On master: COMMIT
[0m11:21:10  Using postgres connection "master"
[0m11:21:10  On master: COMMIT
[0m11:21:10  SQL status: COMMIT in 0.0 seconds
[0m11:21:10  On master: Close
[0m11:21:10  Concurrency: 1 threads (target='dev')
[0m11:21:10  
[0m11:21:10  Began running node model.jaffle_shop.stg_customers
[0m11:21:10  1 of 5 START sql view model public.stg_customers ............................... [RUN]
[0m11:21:10  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m11:21:10  Began compiling node model.jaffle_shop.stg_customers
[0m11:21:10  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:21:10  Timing info for model.jaffle_shop.stg_customers (compile): 13:21:10.181305 => 13:21:10.184306
[0m11:21:10  Began executing node model.jaffle_shop.stg_customers
[0m11:21:10  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:21:10  On model.jaffle_shop.stg_customers: BEGIN
[0m11:21:10  Opening a new connection, currently in state init
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:21:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m11:21:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:21:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:21:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  On model.jaffle_shop.stg_customers: COMMIT
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:21:10  On model.jaffle_shop.stg_customers: COMMIT
[0m11:21:10  SQL status: COMMIT in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:21:10  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "sales"."public"."stg_customers__dbt_backup" cascade
[0m11:21:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:21:10  Timing info for model.jaffle_shop.stg_customers (execute): 13:21:10.186312 => 13:21:10.337961
[0m11:21:10  On model.jaffle_shop.stg_customers: Close
[0m11:21:10  1 of 5 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.16s]
[0m11:21:10  Finished running node model.jaffle_shop.stg_customers
[0m11:21:10  Began running node model.jaffle_shop.stg_orders
[0m11:21:10  2 of 5 START sql view model public.stg_orders .................................. [RUN]
[0m11:21:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:21:10  Began compiling node model.jaffle_shop.stg_orders
[0m11:21:10  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:21:10  Timing info for model.jaffle_shop.stg_orders (compile): 13:21:10.350832 => 13:21:10.354836
[0m11:21:10  Began executing node model.jaffle_shop.stg_orders
[0m11:21:10  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:21:10  On model.jaffle_shop.stg_orders: BEGIN
[0m11:21:10  Opening a new connection, currently in state closed
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:21:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  create view "sales"."public"."stg_orders__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
[0m11:21:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:21:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:21:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  On model.jaffle_shop.stg_orders: COMMIT
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:21:10  On model.jaffle_shop.stg_orders: COMMIT
[0m11:21:10  SQL status: COMMIT in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:21:10  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop view if exists "sales"."public"."stg_orders__dbt_backup" cascade
[0m11:21:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:21:10  Timing info for model.jaffle_shop.stg_orders (execute): 13:21:10.356830 => 13:21:10.454982
[0m11:21:10  On model.jaffle_shop.stg_orders: Close
[0m11:21:10  2 of 5 OK created sql view model public.stg_orders ............................. [[32mCREATE VIEW[0m in 0.11s]
[0m11:21:10  Finished running node model.jaffle_shop.stg_orders
[0m11:21:10  Began running node model.jaffle_shop.stg_payments
[0m11:21:10  3 of 5 START sql view model public.stg_payments ................................ [RUN]
[0m11:21:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:21:10  Began compiling node model.jaffle_shop.stg_payments
[0m11:21:10  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:21:10  Timing info for model.jaffle_shop.stg_payments (compile): 13:21:10.488427 => 13:21:10.500426
[0m11:21:10  Began executing node model.jaffle_shop.stg_payments
[0m11:21:10  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:21:10  On model.jaffle_shop.stg_payments: BEGIN
[0m11:21:10  Opening a new connection, currently in state closed
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:21:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m11:21:10  SQL status: CREATE VIEW in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:21:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:21:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  On model.jaffle_shop.stg_payments: COMMIT
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:21:10  On model.jaffle_shop.stg_payments: COMMIT
[0m11:21:10  SQL status: COMMIT in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:21:10  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "sales"."public"."stg_payments__dbt_backup" cascade
[0m11:21:10  SQL status: DROP VIEW in 0.0 seconds
[0m11:21:10  Timing info for model.jaffle_shop.stg_payments (execute): 13:21:10.507425 => 13:21:10.602810
[0m11:21:10  On model.jaffle_shop.stg_payments: Close
[0m11:21:10  3 of 5 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.12s]
[0m11:21:10  Finished running node model.jaffle_shop.stg_payments
[0m11:21:10  Began running node model.jaffle_shop.customers
[0m11:21:10  4 of 5 START sql table model public.customers .................................. [RUN]
[0m11:21:10  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.customers)
[0m11:21:10  Began compiling node model.jaffle_shop.customers
[0m11:21:10  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:21:10  Timing info for model.jaffle_shop.customers (compile): 13:21:10.615839 => 13:21:10.620204
[0m11:21:10  Began executing node model.jaffle_shop.customers
[0m11:21:10  Writing runtime sql for node "model.jaffle_shop.customers"
[0m11:21:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:21:10  On model.jaffle_shop.customers: BEGIN
[0m11:21:10  Opening a new connection, currently in state closed
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.customers"
[0m11:21:10  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "sales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select 1 from "sales"."public"."stg_customers"

),

orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m11:21:10  Postgres adapter: Postgres error: column customers.customer_id does not exist
LINE 73:         on customers.customer_id = customer_orders.customer_...
                    ^

[0m11:21:10  On model.jaffle_shop.customers: ROLLBACK
[0m11:21:10  Timing info for model.jaffle_shop.customers (execute): 13:21:10.622210 => 13:21:10.704468
[0m11:21:10  On model.jaffle_shop.customers: Close
[0m11:21:10  Database Error in model customers (models\customers.sql)
  column customers.customer_id does not exist
  LINE 73:         on customers.customer_id = customer_orders.customer_...
                      ^
  compiled Code at target\run\jaffle_shop\models\customers.sql
[0m11:21:10  4 of 5 ERROR creating sql table model public.customers ......................... [[31mERROR[0m in 0.10s]
[0m11:21:10  Finished running node model.jaffle_shop.customers
[0m11:21:10  Began running node model.jaffle_shop.orders
[0m11:21:10  5 of 5 START sql table model public.orders ..................................... [RUN]
[0m11:21:10  CANCEL query list_sales ........................................................ [[31mCANCEL[0m]
[0m11:21:10  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m11:21:10  CANCEL query list_sales_public ................................................. [[31mCANCEL[0m]
[0m11:21:10  Began compiling node model.jaffle_shop.orders
[0m11:21:10  CANCEL query model.jaffle_shop.customers ....................................... [[31mCANCEL[0m]
[0m11:21:10  Writing injected SQL for node "model.jaffle_shop.orders"
[0m11:21:10  Timing info for model.jaffle_shop.orders (compile): 13:21:10.721545 => 13:21:10.729357
[0m11:21:10  Began executing node model.jaffle_shop.orders
[0m11:21:10  Writing runtime sql for node "model.jaffle_shop.orders"
[0m11:21:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:21:10  On model.jaffle_shop.orders: BEGIN
[0m11:21:10  Opening a new connection, currently in state closed
[0m11:21:10  SQL status: BEGIN in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:21:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "sales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    

with orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.credit_card_amount,

        order_payments.coupon_amount,

        order_payments.bank_transfer_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m11:21:10  SQL status: SELECT 99 in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:21:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders" rename to "orders__dbt_backup"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:21:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders__dbt_tmp" rename to "orders"
[0m11:21:10  SQL status: ALTER TABLE in 0.0 seconds
[0m11:21:10  On model.jaffle_shop.orders: COMMIT
[0m11:21:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:21:10  On model.jaffle_shop.orders: COMMIT
[0m11:21:10  SQL status: COMMIT in 0.0 seconds
[0m11:21:10  Using postgres connection "model.jaffle_shop.orders"
[0m11:21:10  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "sales"."public"."orders__dbt_backup" cascade
[0m11:21:10  SQL status: DROP TABLE in 0.0 seconds
[0m11:21:10  Timing info for model.jaffle_shop.orders (execute): 13:21:10.731369 => 13:21:10.838413
[0m11:21:10  On model.jaffle_shop.orders: Close
[0m11:21:10  5 of 5 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.12s]
[0m11:21:10  Finished running node model.jaffle_shop.orders
[0m11:21:10  
[0m11:21:10  [33mDatabase Error in model customers (models\customers.sql)[0m
[0m11:21:10    column customers.customer_id does not exist
[0m11:21:10    LINE 73:         on customers.customer_id = customer_orders.customer_...
[0m11:21:10                        ^
[0m11:21:10    compiled Code at target\run\jaffle_shop\models\customers.sql
[0m11:21:10  Connection 'master' was properly closed.
[0m11:21:10  Connection 'list_sales' was properly closed.
[0m11:21:10  Connection 'list_sales_public' was properly closed.
[0m11:21:10  Connection 'model.jaffle_shop.orders' was properly closed.
[0m11:21:10  
[0m11:21:10  Finished running 3 view models, 1 table model in 0 hours 0 minutes and 0.91 seconds (0.91s).
[0m11:21:10  Encountered an error:
FailFast Error in model customers (models\customers.sql)
  Failing early due to test failure or runtime error
[0m11:21:10  Command `dbt run` failed at 13:21:10.858416 after 1.11 seconds
[0m11:21:10  Flushing usage events
[0m11:21:20  Running with dbt=1.5.0
[0m11:21:20  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'fail_fast': 'True', 'warn_error': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'version_check': 'True', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:21:20  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:21:20  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:21:20  Partial parsing enabled, no changes found, skipping parsing
[0m11:21:20  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:21:20  
[0m11:21:20  Acquiring new postgres connection 'master'
[0m11:21:20  Acquiring new postgres connection 'list_sales_public'
[0m11:21:21  Using postgres connection "list_sales_public"
[0m11:21:21  On list_sales_public: BEGIN
[0m11:21:21  Opening a new connection, currently in state init
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "list_sales_public"
[0m11:21:21  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:21:21  SQL status: SELECT 8 in 0.0 seconds
[0m11:21:21  On list_sales_public: ROLLBACK
[0m11:21:21  On list_sales_public: Close
[0m11:21:21  Using postgres connection "master"
[0m11:21:21  On master: BEGIN
[0m11:21:21  Opening a new connection, currently in state init
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "master"
[0m11:21:21  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:21:21  SQL status: SELECT 3 in 0.0 seconds
[0m11:21:21  On master: ROLLBACK
[0m11:21:21  Using postgres connection "master"
[0m11:21:21  On master: BEGIN
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  On master: COMMIT
[0m11:21:21  Using postgres connection "master"
[0m11:21:21  On master: COMMIT
[0m11:21:21  SQL status: COMMIT in 0.0 seconds
[0m11:21:21  On master: Close
[0m11:21:21  Concurrency: 1 threads (target='dev')
[0m11:21:21  
[0m11:21:21  Began running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:21:21  1 of 20 START test accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m11:21:21  Acquiring new postgres connection 'test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3'
[0m11:21:21  Began compiling node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:21:21  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (compile): 13:21:21.191104 => 13:21:21.211103
[0m11:21:21  Began executing node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:21:21  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:21:21  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: BEGIN
[0m11:21:21  Opening a new connection, currently in state init
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:21:21  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m11:21:21  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:21  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (execute): 13:21:21.214104 => 13:21:21.283860
[0m11:21:21  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: ROLLBACK
[0m11:21:21  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: Close
[0m11:21:21  1 of 20 PASS accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.10s]
[0m11:21:21  Finished running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:21:21  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:21:21  2 of 20 START test accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m11:21:21  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3, now test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad)
[0m11:21:21  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:21:21  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 13:21:21.299372 => 13:21:21.306888
[0m11:21:21  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:21:21  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: BEGIN
[0m11:21:21  Opening a new connection, currently in state closed
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."stg_orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m11:21:21  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:21  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 13:21:21.309892 => 13:21:21.486352
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: ROLLBACK
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: Close
[0m11:21:21  2 of 20 PASS accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.20s]
[0m11:21:21  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:21:21  Began running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:21:21  3 of 20 START test accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [RUN]
[0m11:21:21  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad, now test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278)
[0m11:21:21  Began compiling node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:21:21  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (compile): 13:21:21.499553 => 13:21:21.512555
[0m11:21:21  Began executing node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:21:21  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: BEGIN
[0m11:21:21  Opening a new connection, currently in state closed
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        payment_method as value_field,
        count(*) as n_records

    from "sales"."public"."stg_payments"
    group by payment_method

)

select *
from all_values
where value_field not in (
    'credit_card','coupon','bank_transfer','gift_card'
)



      
    ) dbt_internal_test
[0m11:21:21  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:21  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (execute): 13:21:21.514564 => 13:21:21.573619
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: ROLLBACK
[0m11:21:21  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: Close
[0m11:21:21  3 of 20 PASS accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [[32mPASS[0m in 0.08s]
[0m11:21:21  Finished running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:21:21  Began running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:21:21  4 of 20 START test not_null_customers_customer_id .............................. [RUN]
[0m11:21:21  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278, now test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d)
[0m11:21:21  Began compiling node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:21:21  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (compile): 13:21:21.586177 => 13:21:21.594176
[0m11:21:21  Began executing node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:21:21  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: BEGIN
[0m11:21:21  Opening a new connection, currently in state closed
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:21:21  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."customers"
where customer_id is null



      
    ) dbt_internal_test
[0m11:21:21  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:21  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (execute): 13:21:21.596181 => 13:21:21.653538
[0m11:21:21  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: ROLLBACK
[0m11:21:21  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: Close
[0m11:21:21  4 of 20 PASS not_null_customers_customer_id .................................... [[32mPASS[0m in 0.07s]
[0m11:21:21  Finished running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:21:21  Began running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:21:21  5 of 20 START test not_null_orders_amount ...................................... [RUN]
[0m11:21:21  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d, now test.jaffle_shop.not_null_orders_amount.106140f9fd)
[0m11:21:21  Began compiling node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:21:21  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (compile): 13:21:21.667963 => 13:21:21.673960
[0m11:21:21  Began executing node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:21:21  On test.jaffle_shop.not_null_orders_amount.106140f9fd: BEGIN
[0m11:21:21  Opening a new connection, currently in state closed
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:21:21  On test.jaffle_shop.not_null_orders_amount.106140f9fd: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select amount
from "sales"."public"."orders"
where amount is null



      
    ) dbt_internal_test
[0m11:21:21  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:21  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (execute): 13:21:21.678966 => 13:21:21.738077
[0m11:21:21  On test.jaffle_shop.not_null_orders_amount.106140f9fd: ROLLBACK
[0m11:21:21  On test.jaffle_shop.not_null_orders_amount.106140f9fd: Close
[0m11:21:21  5 of 20 PASS not_null_orders_amount ............................................ [[32mPASS[0m in 0.08s]
[0m11:21:21  Finished running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:21:21  Began running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:21:21  6 of 20 START test not_null_orders_bank_transfer_amount ........................ [RUN]
[0m11:21:21  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_amount.106140f9fd, now test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49)
[0m11:21:21  Began compiling node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:21:21  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (compile): 13:21:21.752928 => 13:21:21.759933
[0m11:21:21  Began executing node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:21:21  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: BEGIN
[0m11:21:21  Opening a new connection, currently in state closed
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:21:21  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select bank_transfer_amount
from "sales"."public"."orders"
where bank_transfer_amount is null



      
    ) dbt_internal_test
[0m11:21:21  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:21  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (execute): 13:21:21.762514 => 13:21:21.818139
[0m11:21:21  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: ROLLBACK
[0m11:21:21  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: Close
[0m11:21:21  6 of 20 PASS not_null_orders_bank_transfer_amount .............................. [[32mPASS[0m in 0.07s]
[0m11:21:21  Finished running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:21:21  Began running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:21:21  7 of 20 START test not_null_orders_coupon_amount ............................... [RUN]
[0m11:21:21  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49, now test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625)
[0m11:21:21  Began compiling node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:21:21  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (compile): 13:21:21.829307 => 13:21:21.835632
[0m11:21:21  Began executing node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:21:21  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: BEGIN
[0m11:21:21  Opening a new connection, currently in state closed
[0m11:21:21  SQL status: BEGIN in 0.0 seconds
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:21:21  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select coupon_amount
from "sales"."public"."orders"
where coupon_amount is null



      
    ) dbt_internal_test
[0m11:21:21  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:21  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (execute): 13:21:21.837629 => 13:21:21.896165
[0m11:21:21  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: ROLLBACK
[0m11:21:21  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: Close
[0m11:21:21  7 of 20 PASS not_null_orders_coupon_amount ..................................... [[32mPASS[0m in 0.07s]
[0m11:21:21  Finished running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:21:21  Began running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:21:21  8 of 20 START test not_null_orders_credit_card_amount .......................... [RUN]
[0m11:21:21  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625, now test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59)
[0m11:21:21  Began compiling node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:21:21  Writing injected SQL for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:21:21  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (compile): 13:21:21.910344 => 13:21:21.915047
[0m11:21:21  Began executing node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:21:21  Writing runtime sql for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:21:21  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:21:21  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: BEGIN
[0m11:21:21  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:21:22  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select credit_card_amount
from "sales"."public"."orders"
where credit_card_amount is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (execute): 13:21:21.917806 => 13:21:22.076861
[0m11:21:22  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: ROLLBACK
[0m11:21:22  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: Close
[0m11:21:22  8 of 20 PASS not_null_orders_credit_card_amount ................................ [[32mPASS[0m in 0.18s]
[0m11:21:22  Finished running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:21:22  Began running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:21:22  9 of 20 START test not_null_orders_customer_id ................................. [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59, now test.jaffle_shop.not_null_orders_customer_id.c5f02694af)
[0m11:21:22  Began compiling node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:21:22  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (compile): 13:21:22.089014 => 13:21:22.098017
[0m11:21:22  Began executing node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:21:22  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:21:22  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."orders"
where customer_id is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (execute): 13:21:22.101017 => 13:21:22.158138
[0m11:21:22  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: ROLLBACK
[0m11:21:22  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: Close
[0m11:21:22  9 of 20 PASS not_null_orders_customer_id ....................................... [[32mPASS[0m in 0.08s]
[0m11:21:22  Finished running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:21:22  Began running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:21:22  10 of 20 START test not_null_orders_gift_card_amount ........................... [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_customer_id.c5f02694af, now test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a)
[0m11:21:22  Began compiling node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:21:22  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (compile): 13:21:22.169934 => 13:21:22.176932
[0m11:21:22  Began executing node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:21:22  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:21:22  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select gift_card_amount
from "sales"."public"."orders"
where gift_card_amount is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (execute): 13:21:22.178933 => 13:21:22.235082
[0m11:21:22  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: ROLLBACK
[0m11:21:22  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: Close
[0m11:21:22  10 of 20 PASS not_null_orders_gift_card_amount ................................. [[32mPASS[0m in 0.07s]
[0m11:21:22  Finished running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:21:22  Began running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:21:22  11 of 20 START test not_null_orders_order_id ................................... [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a, now test.jaffle_shop.not_null_orders_order_id.cf6c17daed)
[0m11:21:22  Began compiling node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:21:22  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (compile): 13:21:22.246896 => 13:21:22.252903
[0m11:21:22  Began executing node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:21:22  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:21:22  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "sales"."public"."orders"
where order_id is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (execute): 13:21:22.255907 => 13:21:22.312290
[0m11:21:22  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: ROLLBACK
[0m11:21:22  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: Close
[0m11:21:22  11 of 20 PASS not_null_orders_order_id ......................................... [[32mPASS[0m in 0.07s]
[0m11:21:22  Finished running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:21:22  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:21:22  12 of 20 START test not_null_stg_customers_customer_id ......................... [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_order_id.cf6c17daed, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m11:21:22  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:21:22  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 13:21:22.326414 => 13:21:22.332311
[0m11:21:22  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:21:22  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:21:22  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."stg_customers"
where customer_id is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 13:21:22.335320 => 13:21:22.499231
[0m11:21:22  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: ROLLBACK
[0m11:21:22  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: Close
[0m11:21:22  12 of 20 PASS not_null_stg_customers_customer_id ............................... [[32mPASS[0m in 0.18s]
[0m11:21:22  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:21:22  Began running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:21:22  13 of 20 START test not_null_stg_orders_order_id ............................... [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64)
[0m11:21:22  Began compiling node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:21:22  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (compile): 13:21:22.511230 => 13:21:22.517193
[0m11:21:22  Began executing node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:21:22  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:21:22  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "sales"."public"."stg_orders"
where order_id is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (execute): 13:21:22.519244 => 13:21:22.699654
[0m11:21:22  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: ROLLBACK
[0m11:21:22  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: Close
[0m11:21:22  13 of 20 PASS not_null_stg_orders_order_id ..................................... [[32mPASS[0m in 0.20s]
[0m11:21:22  Finished running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:21:22  Began running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:21:22  14 of 20 START test not_null_stg_payments_payment_id ........................... [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64, now test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075)
[0m11:21:22  Began compiling node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:21:22  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (compile): 13:21:22.713654 => 13:21:22.720659
[0m11:21:22  Began executing node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:21:22  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:21:22  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select payment_id
from "sales"."public"."stg_payments"
where payment_id is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (execute): 13:21:22.723658 => 13:21:22.783561
[0m11:21:22  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: ROLLBACK
[0m11:21:22  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: Close
[0m11:21:22  14 of 20 PASS not_null_stg_payments_payment_id ................................. [[32mPASS[0m in 0.08s]
[0m11:21:22  Finished running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:21:22  Began running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:21:22  15 of 20 START test relationships_orders_customer_id__customer_id__ref_customers_  [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075, now test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2)
[0m11:21:22  Began compiling node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:21:22  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (compile): 13:21:22.798594 => 13:21:22.806598
[0m11:21:22  Began executing node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:21:22  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:21:22  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:22  SQL status: BEGIN in 0.0 seconds
[0m11:21:22  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:21:22  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with child as (
    select customer_id as from_field
    from "sales"."public"."orders"
    where customer_id is not null
),

parent as (
    select customer_id as to_field
    from "sales"."public"."customers"
)

select
    from_field

from child
left join parent
    on child.from_field = parent.to_field

where parent.to_field is null



      
    ) dbt_internal_test
[0m11:21:22  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:22  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (execute): 13:21:22.810595 => 13:21:22.869508
[0m11:21:22  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: ROLLBACK
[0m11:21:22  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: Close
[0m11:21:22  15 of 20 PASS relationships_orders_customer_id__customer_id__ref_customers_ .... [[32mPASS[0m in 0.08s]
[0m11:21:22  Finished running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:21:22  Began running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:21:22  16 of 20 START test unique_customers_customer_id ............................... [RUN]
[0m11:21:22  Re-using an available connection from the pool (formerly test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2, now test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1)
[0m11:21:22  Began compiling node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:21:22  Writing injected SQL for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:21:22  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (compile): 13:21:22.883415 => 13:21:22.890933
[0m11:21:22  Began executing node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:21:22  Writing runtime sql for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:21:22  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:21:22  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: BEGIN
[0m11:21:22  Opening a new connection, currently in state closed
[0m11:21:23  SQL status: BEGIN in 0.0 seconds
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:21:23  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:21:23  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:23  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (execute): 13:21:22.894933 => 13:21:23.069425
[0m11:21:23  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: ROLLBACK
[0m11:21:23  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: Close
[0m11:21:23  16 of 20 PASS unique_customers_customer_id ..................................... [[32mPASS[0m in 0.19s]
[0m11:21:23  Finished running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:21:23  Began running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:21:23  17 of 20 START test unique_orders_order_id ..................................... [RUN]
[0m11:21:23  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1, now test.jaffle_shop.unique_orders_order_id.fed79b3a6e)
[0m11:21:23  Began compiling node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:21:23  Writing injected SQL for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:21:23  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (compile): 13:21:23.085809 => 13:21:23.092519
[0m11:21:23  Began executing node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:21:23  Writing runtime sql for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:21:23  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: BEGIN
[0m11:21:23  Opening a new connection, currently in state closed
[0m11:21:23  SQL status: BEGIN in 0.0 seconds
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:21:23  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "sales"."public"."orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:21:23  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:23  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (execute): 13:21:23.097601 => 13:21:23.158387
[0m11:21:23  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: ROLLBACK
[0m11:21:23  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: Close
[0m11:21:23  17 of 20 PASS unique_orders_order_id ........................................... [[32mPASS[0m in 0.08s]
[0m11:21:23  Finished running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:21:23  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:21:23  18 of 20 START test unique_stg_customers_customer_id ........................... [RUN]
[0m11:21:23  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_orders_order_id.fed79b3a6e, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m11:21:23  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:21:23  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:21:23  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 13:21:23.169491 => 13:21:23.176190
[0m11:21:23  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:21:23  Writing runtime sql for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:21:23  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: BEGIN
[0m11:21:23  Opening a new connection, currently in state closed
[0m11:21:23  SQL status: BEGIN in 0.0 seconds
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:21:23  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:21:23  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:23  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 13:21:23.178167 => 13:21:23.351245
[0m11:21:23  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: ROLLBACK
[0m11:21:23  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: Close
[0m11:21:23  18 of 20 PASS unique_stg_customers_customer_id ................................. [[32mPASS[0m in 0.19s]
[0m11:21:23  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:21:23  Began running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:21:23  19 of 20 START test unique_stg_orders_order_id ................................. [RUN]
[0m11:21:23  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a)
[0m11:21:23  Began compiling node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:21:23  Writing injected SQL for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:21:23  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (compile): 13:21:23.364152 => 13:21:23.371153
[0m11:21:23  Began executing node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:21:23  Writing runtime sql for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:21:23  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: BEGIN
[0m11:21:23  Opening a new connection, currently in state closed
[0m11:21:23  SQL status: BEGIN in 0.0 seconds
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:21:23  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:21:23  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:23  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (execute): 13:21:23.373167 => 13:21:23.434394
[0m11:21:23  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: ROLLBACK
[0m11:21:23  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: Close
[0m11:21:23  19 of 20 PASS unique_stg_orders_order_id ....................................... [[32mPASS[0m in 0.08s]
[0m11:21:23  Finished running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:21:23  Began running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:21:23  20 of 20 START test unique_stg_payments_payment_id ............................. [RUN]
[0m11:21:23  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a, now test.jaffle_shop.unique_stg_payments_payment_id.3744510712)
[0m11:21:23  Began compiling node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:21:23  Writing injected SQL for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:21:23  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (compile): 13:21:23.447682 => 13:21:23.452732
[0m11:21:23  Began executing node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:21:23  Writing runtime sql for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:21:23  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: BEGIN
[0m11:21:23  Opening a new connection, currently in state closed
[0m11:21:23  SQL status: BEGIN in 0.0 seconds
[0m11:21:23  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:21:23  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    payment_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_payments"
where payment_id is not null
group by payment_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:21:23  SQL status: SELECT 1 in 0.0 seconds
[0m11:21:23  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (execute): 13:21:23.454685 => 13:21:23.634105
[0m11:21:23  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: ROLLBACK
[0m11:21:23  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: Close
[0m11:21:23  20 of 20 PASS unique_stg_payments_payment_id ................................... [[32mPASS[0m in 0.19s]
[0m11:21:23  Finished running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:21:23  Using postgres connection "master"
[0m11:21:23  On master: BEGIN
[0m11:21:23  Opening a new connection, currently in state closed
[0m11:21:23  SQL status: BEGIN in 0.0 seconds
[0m11:21:23  On master: COMMIT
[0m11:21:23  Using postgres connection "master"
[0m11:21:23  On master: COMMIT
[0m11:21:23  SQL status: COMMIT in 0.0 seconds
[0m11:21:23  On master: Close
[0m11:21:23  Connection 'master' was properly closed.
[0m11:21:23  Connection 'list_sales_public' was properly closed.
[0m11:21:23  Connection 'test.jaffle_shop.unique_stg_payments_payment_id.3744510712' was properly closed.
[0m11:21:23  
[0m11:21:23  Finished running 20 tests in 0 hours 0 minutes and 2.83 seconds (2.83s).
[0m11:21:23  Command end result
[0m11:21:23  
[0m11:21:23  [32mCompleted successfully[0m
[0m11:21:23  
[0m11:21:23  Done. PASS=20 WARN=0 ERROR=0 SKIP=0 TOTAL=20
[0m11:21:23  Command `dbt test` succeeded at 13:21:23.836849 after 3.03 seconds
[0m11:21:23  Flushing usage events
[0m11:22:04  Running with dbt=1.5.0
[0m11:22:04  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'debug': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'warn_error': 'True', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:22:04  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:22:04  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:22:04  Partial parsing enabled, no changes found, skipping parsing
[0m11:22:04  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:22:04  
[0m11:22:04  Acquiring new postgres connection 'master'
[0m11:22:04  Acquiring new postgres connection 'list_sales'
[0m11:22:04  Using postgres connection "list_sales"
[0m11:22:04  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:22:04  Opening a new connection, currently in state init
[0m11:22:04  SQL status: SELECT 4 in 0.0 seconds
[0m11:22:04  On list_sales: Close
[0m11:22:04  Acquiring new postgres connection 'list_sales_public'
[0m11:22:04  Using postgres connection "list_sales_public"
[0m11:22:04  On list_sales_public: BEGIN
[0m11:22:04  Opening a new connection, currently in state init
[0m11:22:04  SQL status: BEGIN in 0.0 seconds
[0m11:22:04  Using postgres connection "list_sales_public"
[0m11:22:04  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:22:04  SQL status: SELECT 8 in 0.0 seconds
[0m11:22:04  On list_sales_public: ROLLBACK
[0m11:22:04  On list_sales_public: Close
[0m11:22:04  Using postgres connection "master"
[0m11:22:04  On master: BEGIN
[0m11:22:04  Opening a new connection, currently in state init
[0m11:22:04  SQL status: BEGIN in 0.0 seconds
[0m11:22:04  Using postgres connection "master"
[0m11:22:04  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:22:04  SQL status: SELECT 3 in 0.0 seconds
[0m11:22:04  On master: ROLLBACK
[0m11:22:04  Using postgres connection "master"
[0m11:22:04  On master: BEGIN
[0m11:22:04  SQL status: BEGIN in 0.0 seconds
[0m11:22:04  On master: COMMIT
[0m11:22:04  Using postgres connection "master"
[0m11:22:04  On master: COMMIT
[0m11:22:04  SQL status: COMMIT in 0.0 seconds
[0m11:22:04  On master: Close
[0m11:22:04  Concurrency: 1 threads (target='dev')
[0m11:22:04  
[0m11:22:04  Began running node model.jaffle_shop.stg_customers
[0m11:22:04  1 of 5 START sql view model public.stg_customers ............................... [RUN]
[0m11:22:04  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m11:22:04  Began compiling node model.jaffle_shop.stg_customers
[0m11:22:04  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:22:04  Timing info for model.jaffle_shop.stg_customers (compile): 13:22:04.832961 => 13:22:04.838254
[0m11:22:04  Began executing node model.jaffle_shop.stg_customers
[0m11:22:04  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m11:22:04  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:22:04  On model.jaffle_shop.stg_customers: BEGIN
[0m11:22:04  Opening a new connection, currently in state init
[0m11:22:04  SQL status: BEGIN in 0.0 seconds
[0m11:22:04  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:22:04  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m11:22:04  SQL status: CREATE VIEW in 0.0 seconds
[0m11:22:04  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:22:04  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m11:22:04  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:04  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:22:04  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m11:22:04  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:05  On model.jaffle_shop.stg_customers: COMMIT
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:22:05  On model.jaffle_shop.stg_customers: COMMIT
[0m11:22:05  SQL status: COMMIT in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:22:05  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "sales"."public"."stg_customers__dbt_backup" cascade
[0m11:22:05  SQL status: DROP VIEW in 0.0 seconds
[0m11:22:05  Timing info for model.jaffle_shop.stg_customers (execute): 13:22:04.840238 => 13:22:05.036692
[0m11:22:05  On model.jaffle_shop.stg_customers: Close
[0m11:22:05  1 of 5 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.21s]
[0m11:22:05  Finished running node model.jaffle_shop.stg_customers
[0m11:22:05  Began running node model.jaffle_shop.stg_orders
[0m11:22:05  2 of 5 START sql view model public.stg_orders .................................. [RUN]
[0m11:22:05  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:22:05  Began compiling node model.jaffle_shop.stg_orders
[0m11:22:05  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:22:05  Timing info for model.jaffle_shop.stg_orders (compile): 13:22:05.047438 => 13:22:05.054860
[0m11:22:05  Began executing node model.jaffle_shop.stg_orders
[0m11:22:05  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:22:05  On model.jaffle_shop.stg_orders: BEGIN
[0m11:22:05  Opening a new connection, currently in state closed
[0m11:22:05  SQL status: BEGIN in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:22:05  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  create view "sales"."public"."stg_orders__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
[0m11:22:05  SQL status: CREATE VIEW in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:22:05  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m11:22:05  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:22:05  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m11:22:05  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:05  On model.jaffle_shop.stg_orders: COMMIT
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:22:05  On model.jaffle_shop.stg_orders: COMMIT
[0m11:22:05  SQL status: COMMIT in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:22:05  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop view if exists "sales"."public"."stg_orders__dbt_backup" cascade
[0m11:22:05  SQL status: DROP VIEW in 0.0 seconds
[0m11:22:05  Timing info for model.jaffle_shop.stg_orders (execute): 13:22:05.057867 => 13:22:05.154751
[0m11:22:05  On model.jaffle_shop.stg_orders: Close
[0m11:22:05  2 of 5 OK created sql view model public.stg_orders ............................. [[32mCREATE VIEW[0m in 0.11s]
[0m11:22:05  Finished running node model.jaffle_shop.stg_orders
[0m11:22:05  Began running node model.jaffle_shop.stg_payments
[0m11:22:05  3 of 5 START sql view model public.stg_payments ................................ [RUN]
[0m11:22:05  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:22:05  Began compiling node model.jaffle_shop.stg_payments
[0m11:22:05  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:22:05  Timing info for model.jaffle_shop.stg_payments (compile): 13:22:05.165264 => 13:22:05.170267
[0m11:22:05  Began executing node model.jaffle_shop.stg_payments
[0m11:22:05  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:22:05  On model.jaffle_shop.stg_payments: BEGIN
[0m11:22:05  Opening a new connection, currently in state closed
[0m11:22:05  SQL status: BEGIN in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:22:05  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m11:22:05  SQL status: CREATE VIEW in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:22:05  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m11:22:05  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:22:05  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m11:22:05  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:05  On model.jaffle_shop.stg_payments: COMMIT
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:22:05  On model.jaffle_shop.stg_payments: COMMIT
[0m11:22:05  SQL status: COMMIT in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:22:05  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "sales"."public"."stg_payments__dbt_backup" cascade
[0m11:22:05  SQL status: DROP VIEW in 0.0 seconds
[0m11:22:05  Timing info for model.jaffle_shop.stg_payments (execute): 13:22:05.172263 => 13:22:05.270894
[0m11:22:05  On model.jaffle_shop.stg_payments: Close
[0m11:22:05  3 of 5 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.11s]
[0m11:22:05  Finished running node model.jaffle_shop.stg_payments
[0m11:22:05  Began running node model.jaffle_shop.customers
[0m11:22:05  4 of 5 START sql table model public.customers .................................. [RUN]
[0m11:22:05  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.customers)
[0m11:22:05  Began compiling node model.jaffle_shop.customers
[0m11:22:05  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:22:05  Timing info for model.jaffle_shop.customers (compile): 13:22:05.282377 => 13:22:05.290378
[0m11:22:05  Began executing node model.jaffle_shop.customers
[0m11:22:05  Writing runtime sql for node "model.jaffle_shop.customers"
[0m11:22:05  Using postgres connection "model.jaffle_shop.customers"
[0m11:22:05  On model.jaffle_shop.customers: BEGIN
[0m11:22:05  Opening a new connection, currently in state closed
[0m11:22:05  SQL status: BEGIN in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.customers"
[0m11:22:05  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "sales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select 1 from "sales"."public"."stg_customers"

),

orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m11:22:05  Postgres adapter: Postgres error: column customers.customer_id does not exist
LINE 73:         on customers.customer_id = customer_orders.customer_...
                    ^

[0m11:22:05  On model.jaffle_shop.customers: ROLLBACK
[0m11:22:05  Timing info for model.jaffle_shop.customers (execute): 13:22:05.293065 => 13:22:05.373928
[0m11:22:05  On model.jaffle_shop.customers: Close
[0m11:22:05  Database Error in model customers (models\customers.sql)
  column customers.customer_id does not exist
  LINE 73:         on customers.customer_id = customer_orders.customer_...
                      ^
  compiled Code at target\run\jaffle_shop\models\customers.sql
[0m11:22:05  4 of 5 ERROR creating sql table model public.customers ......................... [[31mERROR[0m in 0.10s]
[0m11:22:05  Finished running node model.jaffle_shop.customers
[0m11:22:05  Began running node model.jaffle_shop.orders
[0m11:22:05  5 of 5 START sql table model public.orders ..................................... [RUN]
[0m11:22:05  CANCEL query list_sales ........................................................ [[31mCANCEL[0m]
[0m11:22:05  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m11:22:05  CANCEL query list_sales_public ................................................. [[31mCANCEL[0m]
[0m11:22:05  Began compiling node model.jaffle_shop.orders
[0m11:22:05  CANCEL query model.jaffle_shop.customers ....................................... [[31mCANCEL[0m]
[0m11:22:05  Writing injected SQL for node "model.jaffle_shop.orders"
[0m11:22:05  Timing info for model.jaffle_shop.orders (compile): 13:22:05.393745 => 13:22:05.398742
[0m11:22:05  Began executing node model.jaffle_shop.orders
[0m11:22:05  Writing runtime sql for node "model.jaffle_shop.orders"
[0m11:22:05  Using postgres connection "model.jaffle_shop.orders"
[0m11:22:05  On model.jaffle_shop.orders: BEGIN
[0m11:22:05  Opening a new connection, currently in state closed
[0m11:22:05  SQL status: BEGIN in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.orders"
[0m11:22:05  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "sales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    

with orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.credit_card_amount,

        order_payments.coupon_amount,

        order_payments.bank_transfer_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m11:22:05  SQL status: SELECT 99 in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.orders"
[0m11:22:05  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders" rename to "orders__dbt_backup"
[0m11:22:05  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.orders"
[0m11:22:05  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders__dbt_tmp" rename to "orders"
[0m11:22:05  SQL status: ALTER TABLE in 0.0 seconds
[0m11:22:05  On model.jaffle_shop.orders: COMMIT
[0m11:22:05  Using postgres connection "model.jaffle_shop.orders"
[0m11:22:05  On model.jaffle_shop.orders: COMMIT
[0m11:22:05  SQL status: COMMIT in 0.0 seconds
[0m11:22:05  Using postgres connection "model.jaffle_shop.orders"
[0m11:22:05  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "sales"."public"."orders__dbt_backup" cascade
[0m11:22:05  SQL status: DROP TABLE in 0.0 seconds
[0m11:22:05  Timing info for model.jaffle_shop.orders (execute): 13:22:05.403755 => 13:22:05.625364
[0m11:22:05  On model.jaffle_shop.orders: Close
[0m11:22:05  5 of 5 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.24s]
[0m11:22:05  Finished running node model.jaffle_shop.orders
[0m11:22:05  
[0m11:22:05  [33mDatabase Error in model customers (models\customers.sql)[0m
[0m11:22:05    column customers.customer_id does not exist
[0m11:22:05    LINE 73:         on customers.customer_id = customer_orders.customer_...
[0m11:22:05                        ^
[0m11:22:05    compiled Code at target\run\jaffle_shop\models\customers.sql
[0m11:22:05  Connection 'master' was properly closed.
[0m11:22:05  Connection 'list_sales' was properly closed.
[0m11:22:05  Connection 'list_sales_public' was properly closed.
[0m11:22:05  Connection 'model.jaffle_shop.orders' was properly closed.
[0m11:22:05  
[0m11:22:05  Finished running 3 view models, 1 table model in 0 hours 0 minutes and 1.19 seconds (1.19s).
[0m11:22:05  Encountered an error:
FailFast Error in model customers (models\customers.sql)
  Failing early due to test failure or runtime error
[0m11:22:05  Command `dbt run` failed at 13:22:05.673674 after 1.39 seconds
[0m11:22:05  Flushing usage events
[0m11:25:39  Running with dbt=1.5.0
[0m11:25:39  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'fail_fast': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'debug': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'text', 'static_parser': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:25:39  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:25:40  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:25:40  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m11:25:40  1699: static parser successfully parsed customers.sql
[0m11:25:40  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:25:40  
[0m11:25:40  Acquiring new postgres connection 'master'
[0m11:25:40  Acquiring new postgres connection 'list_sales'
[0m11:25:40  Using postgres connection "list_sales"
[0m11:25:40  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:25:40  Opening a new connection, currently in state init
[0m11:25:40  SQL status: SELECT 4 in 0.0 seconds
[0m11:25:40  On list_sales: Close
[0m11:25:40  Acquiring new postgres connection 'list_sales_public'
[0m11:25:40  Using postgres connection "list_sales_public"
[0m11:25:40  On list_sales_public: BEGIN
[0m11:25:40  Opening a new connection, currently in state init
[0m11:25:40  SQL status: BEGIN in 0.0 seconds
[0m11:25:40  Using postgres connection "list_sales_public"
[0m11:25:40  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:25:40  SQL status: SELECT 8 in 0.0 seconds
[0m11:25:40  On list_sales_public: ROLLBACK
[0m11:25:40  On list_sales_public: Close
[0m11:25:40  Using postgres connection "master"
[0m11:25:40  On master: BEGIN
[0m11:25:40  Opening a new connection, currently in state init
[0m11:25:40  SQL status: BEGIN in 0.0 seconds
[0m11:25:40  Using postgres connection "master"
[0m11:25:40  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:25:40  SQL status: SELECT 3 in 0.0 seconds
[0m11:25:40  On master: ROLLBACK
[0m11:25:40  Using postgres connection "master"
[0m11:25:40  On master: BEGIN
[0m11:25:40  SQL status: BEGIN in 0.0 seconds
[0m11:25:40  On master: COMMIT
[0m11:25:40  Using postgres connection "master"
[0m11:25:40  On master: COMMIT
[0m11:25:40  SQL status: COMMIT in 0.0 seconds
[0m11:25:40  On master: Close
[0m11:25:40  Concurrency: 1 threads (target='dev')
[0m11:25:40  
[0m11:25:40  Began running node model.jaffle_shop.stg_customers
[0m11:25:40  1 of 5 START sql view model public.stg_customers ............................... [RUN]
[0m11:25:40  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m11:25:40  Began compiling node model.jaffle_shop.stg_customers
[0m11:25:40  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:25:40  Timing info for model.jaffle_shop.stg_customers (compile): 13:25:40.484821 => 13:25:40.488800
[0m11:25:40  Began executing node model.jaffle_shop.stg_customers
[0m11:25:40  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:25:40  On model.jaffle_shop.stg_customers: BEGIN
[0m11:25:40  Opening a new connection, currently in state init
[0m11:25:40  SQL status: BEGIN in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:25:40  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m11:25:40  SQL status: CREATE VIEW in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:25:40  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m11:25:40  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:25:40  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m11:25:40  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:40  On model.jaffle_shop.stg_customers: COMMIT
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:25:40  On model.jaffle_shop.stg_customers: COMMIT
[0m11:25:40  SQL status: COMMIT in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:25:40  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "sales"."public"."stg_customers__dbt_backup" cascade
[0m11:25:40  SQL status: DROP VIEW in 0.0 seconds
[0m11:25:40  Timing info for model.jaffle_shop.stg_customers (execute): 13:25:40.491800 => 13:25:40.763712
[0m11:25:40  On model.jaffle_shop.stg_customers: Close
[0m11:25:40  1 of 5 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.28s]
[0m11:25:40  Finished running node model.jaffle_shop.stg_customers
[0m11:25:40  Began running node model.jaffle_shop.stg_orders
[0m11:25:40  2 of 5 START sql view model public.stg_orders .................................. [RUN]
[0m11:25:40  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:25:40  Began compiling node model.jaffle_shop.stg_orders
[0m11:25:40  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:25:40  Timing info for model.jaffle_shop.stg_orders (compile): 13:25:40.775293 => 13:25:40.782081
[0m11:25:40  Began executing node model.jaffle_shop.stg_orders
[0m11:25:40  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:25:40  On model.jaffle_shop.stg_orders: BEGIN
[0m11:25:40  Opening a new connection, currently in state closed
[0m11:25:40  SQL status: BEGIN in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:25:40  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  create view "sales"."public"."stg_orders__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
[0m11:25:40  SQL status: CREATE VIEW in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:25:40  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m11:25:40  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:25:40  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m11:25:40  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:40  On model.jaffle_shop.stg_orders: COMMIT
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:25:40  On model.jaffle_shop.stg_orders: COMMIT
[0m11:25:40  SQL status: COMMIT in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:25:40  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop view if exists "sales"."public"."stg_orders__dbt_backup" cascade
[0m11:25:40  SQL status: DROP VIEW in 0.0 seconds
[0m11:25:40  Timing info for model.jaffle_shop.stg_orders (execute): 13:25:40.784131 => 13:25:40.913403
[0m11:25:40  On model.jaffle_shop.stg_orders: Close
[0m11:25:40  2 of 5 OK created sql view model public.stg_orders ............................. [[32mCREATE VIEW[0m in 0.15s]
[0m11:25:40  Finished running node model.jaffle_shop.stg_orders
[0m11:25:40  Began running node model.jaffle_shop.stg_payments
[0m11:25:40  3 of 5 START sql view model public.stg_payments ................................ [RUN]
[0m11:25:40  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:25:40  Began compiling node model.jaffle_shop.stg_payments
[0m11:25:40  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:25:40  Timing info for model.jaffle_shop.stg_payments (compile): 13:25:40.929409 => 13:25:40.933663
[0m11:25:40  Began executing node model.jaffle_shop.stg_payments
[0m11:25:40  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:25:40  On model.jaffle_shop.stg_payments: BEGIN
[0m11:25:40  Opening a new connection, currently in state closed
[0m11:25:40  SQL status: BEGIN in 0.0 seconds
[0m11:25:40  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:25:40  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m11:25:40  SQL status: CREATE VIEW in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:25:41  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m11:25:41  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:25:41  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m11:25:41  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:41  On model.jaffle_shop.stg_payments: COMMIT
[0m11:25:41  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:25:41  On model.jaffle_shop.stg_payments: COMMIT
[0m11:25:41  SQL status: COMMIT in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:25:41  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "sales"."public"."stg_payments__dbt_backup" cascade
[0m11:25:41  SQL status: DROP VIEW in 0.0 seconds
[0m11:25:41  Timing info for model.jaffle_shop.stg_payments (execute): 13:25:40.935667 => 13:25:41.030975
[0m11:25:41  On model.jaffle_shop.stg_payments: Close
[0m11:25:41  3 of 5 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.11s]
[0m11:25:41  Finished running node model.jaffle_shop.stg_payments
[0m11:25:41  Began running node model.jaffle_shop.customers
[0m11:25:41  4 of 5 START sql table model public.customers .................................. [RUN]
[0m11:25:41  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_payments, now model.jaffle_shop.customers)
[0m11:25:41  Began compiling node model.jaffle_shop.customers
[0m11:25:41  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:25:41  Timing info for model.jaffle_shop.customers (compile): 13:25:41.043674 => 13:25:41.047672
[0m11:25:41  Began executing node model.jaffle_shop.customers
[0m11:25:41  Writing runtime sql for node "model.jaffle_shop.customers"
[0m11:25:41  Using postgres connection "model.jaffle_shop.customers"
[0m11:25:41  On model.jaffle_shop.customers: BEGIN
[0m11:25:41  Opening a new connection, currently in state closed
[0m11:25:41  SQL status: BEGIN in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.customers"
[0m11:25:41  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "sales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select * from "sales"."public"."stg_customers"

),

orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m11:25:41  SQL status: SELECT 100 in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.customers"
[0m11:25:41  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers" rename to "customers__dbt_backup"
[0m11:25:41  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.customers"
[0m11:25:41  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers__dbt_tmp" rename to "customers"
[0m11:25:41  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:41  On model.jaffle_shop.customers: COMMIT
[0m11:25:41  Using postgres connection "model.jaffle_shop.customers"
[0m11:25:41  On model.jaffle_shop.customers: COMMIT
[0m11:25:41  SQL status: COMMIT in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.customers"
[0m11:25:41  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop table if exists "sales"."public"."customers__dbt_backup" cascade
[0m11:25:41  SQL status: DROP TABLE in 0.0 seconds
[0m11:25:41  Timing info for model.jaffle_shop.customers (execute): 13:25:41.049674 => 13:25:41.177235
[0m11:25:41  On model.jaffle_shop.customers: Close
[0m11:25:41  4 of 5 OK created sql table model public.customers ............................. [[32mSELECT 100[0m in 0.14s]
[0m11:25:41  Finished running node model.jaffle_shop.customers
[0m11:25:41  Began running node model.jaffle_shop.orders
[0m11:25:41  5 of 5 START sql table model public.orders ..................................... [RUN]
[0m11:25:41  Re-using an available connection from the pool (formerly model.jaffle_shop.customers, now model.jaffle_shop.orders)
[0m11:25:41  Began compiling node model.jaffle_shop.orders
[0m11:25:41  Writing injected SQL for node "model.jaffle_shop.orders"
[0m11:25:41  Timing info for model.jaffle_shop.orders (compile): 13:25:41.187483 => 13:25:41.194936
[0m11:25:41  Began executing node model.jaffle_shop.orders
[0m11:25:41  Writing runtime sql for node "model.jaffle_shop.orders"
[0m11:25:41  Using postgres connection "model.jaffle_shop.orders"
[0m11:25:41  On model.jaffle_shop.orders: BEGIN
[0m11:25:41  Opening a new connection, currently in state closed
[0m11:25:41  SQL status: BEGIN in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.orders"
[0m11:25:41  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */

  
    

  create  table "sales"."public"."orders__dbt_tmp"
  
  
    as
  
  (
    

with orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

order_payments as (

    select
        order_id,

        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,
        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,
        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,
        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,
        sum(amount) as total_amount

    from payments

    group by order_id

),

final as (

    select
        orders.order_id,
        orders.customer_id,
        orders.order_date,
        orders.status,

        order_payments.credit_card_amount,

        order_payments.coupon_amount,

        order_payments.bank_transfer_amount,

        order_payments.gift_card_amount,

        order_payments.total_amount as amount

    from orders


    left join order_payments
        on orders.order_id = order_payments.order_id

)

select * from final
  );
  
[0m11:25:41  SQL status: SELECT 99 in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.orders"
[0m11:25:41  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders" rename to "orders__dbt_backup"
[0m11:25:41  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.orders"
[0m11:25:41  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
alter table "sales"."public"."orders__dbt_tmp" rename to "orders"
[0m11:25:41  SQL status: ALTER TABLE in 0.0 seconds
[0m11:25:41  On model.jaffle_shop.orders: COMMIT
[0m11:25:41  Using postgres connection "model.jaffle_shop.orders"
[0m11:25:41  On model.jaffle_shop.orders: COMMIT
[0m11:25:41  SQL status: COMMIT in 0.0 seconds
[0m11:25:41  Using postgres connection "model.jaffle_shop.orders"
[0m11:25:41  On model.jaffle_shop.orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.orders"} */
drop table if exists "sales"."public"."orders__dbt_backup" cascade
[0m11:25:41  SQL status: DROP TABLE in 0.0 seconds
[0m11:25:41  Timing info for model.jaffle_shop.orders (execute): 13:25:41.197449 => 13:25:41.412703
[0m11:25:41  On model.jaffle_shop.orders: Close
[0m11:25:41  5 of 5 OK created sql table model public.orders ................................ [[32mSELECT 99[0m in 0.23s]
[0m11:25:41  Finished running node model.jaffle_shop.orders
[0m11:25:41  Using postgres connection "master"
[0m11:25:41  On master: BEGIN
[0m11:25:41  Opening a new connection, currently in state closed
[0m11:25:41  SQL status: BEGIN in 0.0 seconds
[0m11:25:41  On master: COMMIT
[0m11:25:41  Using postgres connection "master"
[0m11:25:41  On master: COMMIT
[0m11:25:41  SQL status: COMMIT in 0.0 seconds
[0m11:25:41  On master: Close
[0m11:25:41  Connection 'master' was properly closed.
[0m11:25:41  Connection 'list_sales' was properly closed.
[0m11:25:41  Connection 'list_sales_public' was properly closed.
[0m11:25:41  Connection 'model.jaffle_shop.orders' was properly closed.
[0m11:25:41  
[0m11:25:41  Finished running 3 view models, 2 table models in 0 hours 0 minutes and 1.33 seconds (1.33s).
[0m11:25:41  Command end result
[0m11:25:41  
[0m11:25:41  [32mCompleted successfully[0m
[0m11:25:41  
[0m11:25:41  Done. PASS=5 WARN=0 ERROR=0 SKIP=0 TOTAL=5
[0m11:25:41  Command `dbt run` succeeded at 13:25:41.487076 after 1.62 seconds
[0m11:25:41  Flushing usage events
[0m11:27:59  Running with dbt=1.5.0
[0m11:27:59  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:27:59  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:27:59  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:27:59  Partial parsing enabled, no changes found, skipping parsing
[0m11:27:59  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:27:59  
[0m11:27:59  Acquiring new postgres connection 'master'
[0m11:27:59  Acquiring new postgres connection 'list_sales'
[0m11:27:59  Using postgres connection "list_sales"
[0m11:27:59  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:27:59  Opening a new connection, currently in state init
[0m11:28:00  SQL status: SELECT 4 in 0.0 seconds
[0m11:28:00  On list_sales: Close
[0m11:28:00  Acquiring new postgres connection 'list_sales_public'
[0m11:28:00  Using postgres connection "list_sales_public"
[0m11:28:00  On list_sales_public: BEGIN
[0m11:28:00  Opening a new connection, currently in state init
[0m11:28:00  SQL status: BEGIN in 0.0 seconds
[0m11:28:00  Using postgres connection "list_sales_public"
[0m11:28:00  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:28:00  SQL status: SELECT 8 in 0.0 seconds
[0m11:28:00  On list_sales_public: ROLLBACK
[0m11:28:00  On list_sales_public: Close
[0m11:28:00  Using postgres connection "master"
[0m11:28:00  On master: BEGIN
[0m11:28:00  Opening a new connection, currently in state init
[0m11:28:00  SQL status: BEGIN in 0.0 seconds
[0m11:28:00  Using postgres connection "master"
[0m11:28:00  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:28:00  SQL status: SELECT 3 in 0.0 seconds
[0m11:28:00  On master: ROLLBACK
[0m11:28:00  Using postgres connection "master"
[0m11:28:00  On master: BEGIN
[0m11:28:00  SQL status: BEGIN in 0.0 seconds
[0m11:28:00  On master: COMMIT
[0m11:28:00  Using postgres connection "master"
[0m11:28:00  On master: COMMIT
[0m11:28:00  SQL status: COMMIT in 0.0 seconds
[0m11:28:00  On master: Close
[0m11:28:00  Concurrency: 1 threads (target='dev')
[0m11:28:00  
[0m11:28:00  Began running node model.jaffle_shop.customers
[0m11:28:00  1 of 1 START sql table model public.customers .................................. [RUN]
[0m11:28:00  Acquiring new postgres connection 'model.jaffle_shop.customers'
[0m11:28:00  Began compiling node model.jaffle_shop.customers
[0m11:28:00  Writing injected SQL for node "model.jaffle_shop.customers"
[0m11:28:00  Timing info for model.jaffle_shop.customers (compile): 13:28:00.224418 => 13:28:00.229407
[0m11:28:00  Began executing node model.jaffle_shop.customers
[0m11:28:00  Writing runtime sql for node "model.jaffle_shop.customers"
[0m11:28:00  Using postgres connection "model.jaffle_shop.customers"
[0m11:28:00  On model.jaffle_shop.customers: BEGIN
[0m11:28:00  Opening a new connection, currently in state init
[0m11:28:00  SQL status: BEGIN in 0.0 seconds
[0m11:28:00  Using postgres connection "model.jaffle_shop.customers"
[0m11:28:00  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */

  
    

  create  table "sales"."public"."customers__dbt_tmp"
  
  
    as
  
  (
    with customers as (

    select * from "sales"."public"."stg_customers"

),

orders as (

    select * from "sales"."public"."stg_orders"

),

payments as (

    select * from "sales"."public"."stg_payments"

),

customer_orders as (

        select
        customer_id,

        min(order_date) as first_order,
        max(order_date) as most_recent_order,
        count(order_id) as number_of_orders
    from orders

    group by customer_id

),

customer_payments as (

    select
        orders.customer_id,
        sum(amount) as total_amount

    from payments

    left join orders on
         payments.order_id = orders.order_id

    group by orders.customer_id

),

final as (

    select
        customers.customer_id,
        customers.first_name,
        customers.last_name,
        customer_orders.first_order,
        customer_orders.most_recent_order,
        customer_orders.number_of_orders,
        customer_payments.total_amount as customer_lifetime_value

    from customers

    left join customer_orders
        on customers.customer_id = customer_orders.customer_id

    left join customer_payments
        on  customers.customer_id = customer_payments.customer_id

)

select * from final
  );
  
[0m11:28:00  SQL status: SELECT 100 in 0.0 seconds
[0m11:28:00  Using postgres connection "model.jaffle_shop.customers"
[0m11:28:00  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers" rename to "customers__dbt_backup"
[0m11:28:00  SQL status: ALTER TABLE in 0.0 seconds
[0m11:28:00  Using postgres connection "model.jaffle_shop.customers"
[0m11:28:00  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
alter table "sales"."public"."customers__dbt_tmp" rename to "customers"
[0m11:28:00  SQL status: ALTER TABLE in 0.0 seconds
[0m11:28:00  On model.jaffle_shop.customers: COMMIT
[0m11:28:00  Using postgres connection "model.jaffle_shop.customers"
[0m11:28:00  On model.jaffle_shop.customers: COMMIT
[0m11:28:00  SQL status: COMMIT in 0.0 seconds
[0m11:28:00  Using postgres connection "model.jaffle_shop.customers"
[0m11:28:00  On model.jaffle_shop.customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.customers"} */
drop table if exists "sales"."public"."customers__dbt_backup" cascade
[0m11:28:00  SQL status: DROP TABLE in 0.0 seconds
[0m11:28:00  Timing info for model.jaffle_shop.customers (execute): 13:28:00.231460 => 13:28:00.428348
[0m11:28:00  On model.jaffle_shop.customers: Close
[0m11:28:00  1 of 1 OK created sql table model public.customers ............................. [[32mSELECT 100[0m in 0.21s]
[0m11:28:00  Finished running node model.jaffle_shop.customers
[0m11:28:00  Using postgres connection "master"
[0m11:28:00  On master: BEGIN
[0m11:28:00  Opening a new connection, currently in state closed
[0m11:28:00  SQL status: BEGIN in 0.0 seconds
[0m11:28:00  On master: COMMIT
[0m11:28:00  Using postgres connection "master"
[0m11:28:00  On master: COMMIT
[0m11:28:00  SQL status: COMMIT in 0.0 seconds
[0m11:28:00  On master: Close
[0m11:28:00  Connection 'master' was properly closed.
[0m11:28:00  Connection 'list_sales' was properly closed.
[0m11:28:00  Connection 'list_sales_public' was properly closed.
[0m11:28:00  Connection 'model.jaffle_shop.customers' was properly closed.
[0m11:28:00  
[0m11:28:00  Finished running 1 table model in 0 hours 0 minutes and 0.60 seconds (0.60s).
[0m11:28:00  Command end result
[0m11:28:00  
[0m11:28:00  [32mCompleted successfully[0m
[0m11:28:00  
[0m11:28:00  Done. PASS=1 WARN=0 ERROR=0 SKIP=0 TOTAL=1
[0m11:28:00  Command `dbt run` succeeded at 13:28:00.499048 after 0.81 seconds
[0m11:28:00  Flushing usage events
[0m11:31:29  Running with dbt=1.5.0
[0m11:31:29  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'fail_fast': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'debug': 'True', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:31:29  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:31:29  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:31:29  Partial parsing enabled, no changes found, skipping parsing
[0m11:31:30  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:31:30  
[0m11:31:30  Acquiring new postgres connection 'master'
[0m11:31:30  Acquiring new postgres connection 'list_sales'
[0m11:31:30  Using postgres connection "list_sales"
[0m11:31:30  On list_sales: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales"} */

    select distinct nspname from pg_namespace
  
[0m11:31:30  Opening a new connection, currently in state init
[0m11:31:30  SQL status: SELECT 4 in 0.0 seconds
[0m11:31:30  On list_sales: Close
[0m11:31:30  Acquiring new postgres connection 'list_sales_public'
[0m11:31:30  Using postgres connection "list_sales_public"
[0m11:31:30  On list_sales_public: BEGIN
[0m11:31:30  Opening a new connection, currently in state init
[0m11:31:30  SQL status: BEGIN in 0.0 seconds
[0m11:31:30  Using postgres connection "list_sales_public"
[0m11:31:30  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:31:30  SQL status: SELECT 8 in 0.0 seconds
[0m11:31:30  On list_sales_public: ROLLBACK
[0m11:31:30  On list_sales_public: Close
[0m11:31:30  Using postgres connection "master"
[0m11:31:30  On master: BEGIN
[0m11:31:30  Opening a new connection, currently in state init
[0m11:31:30  SQL status: BEGIN in 0.0 seconds
[0m11:31:30  Using postgres connection "master"
[0m11:31:30  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:31:30  SQL status: SELECT 3 in 0.0 seconds
[0m11:31:30  On master: ROLLBACK
[0m11:31:30  Using postgres connection "master"
[0m11:31:30  On master: BEGIN
[0m11:31:30  SQL status: BEGIN in 0.0 seconds
[0m11:31:30  On master: COMMIT
[0m11:31:30  Using postgres connection "master"
[0m11:31:30  On master: COMMIT
[0m11:31:30  SQL status: COMMIT in 0.0 seconds
[0m11:31:30  On master: Close
[0m11:31:30  Concurrency: 1 threads (target='dev')
[0m11:31:30  
[0m11:31:30  Began running node model.jaffle_shop.stg_customers
[0m11:31:30  1 of 3 START sql view model public.stg_customers ............................... [RUN]
[0m11:31:30  Acquiring new postgres connection 'model.jaffle_shop.stg_customers'
[0m11:31:30  Began compiling node model.jaffle_shop.stg_customers
[0m11:31:30  Writing injected SQL for node "model.jaffle_shop.stg_customers"
[0m11:31:30  Timing info for model.jaffle_shop.stg_customers (compile): 13:31:30.245823 => 13:31:30.250830
[0m11:31:30  Began executing node model.jaffle_shop.stg_customers
[0m11:31:30  Writing runtime sql for node "model.jaffle_shop.stg_customers"
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:31:30  On model.jaffle_shop.stg_customers: BEGIN
[0m11:31:30  Opening a new connection, currently in state init
[0m11:31:30  SQL status: BEGIN in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:31:30  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */

  create view "sales"."public"."stg_customers__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_customers"

),

renamed as (

    select
        id as customer_id,
        first_name,
        last_name

    from source

)

select * from renamed
  );
[0m11:31:30  SQL status: CREATE VIEW in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:31:30  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers" rename to "stg_customers__dbt_backup"
[0m11:31:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:31:30  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
alter table "sales"."public"."stg_customers__dbt_tmp" rename to "stg_customers"
[0m11:31:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:31:30  On model.jaffle_shop.stg_customers: COMMIT
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:31:30  On model.jaffle_shop.stg_customers: COMMIT
[0m11:31:30  SQL status: COMMIT in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_customers"
[0m11:31:30  On model.jaffle_shop.stg_customers: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_customers"} */
drop view if exists "sales"."public"."stg_customers__dbt_backup" cascade
[0m11:31:30  SQL status: DROP VIEW in 0.0 seconds
[0m11:31:30  Timing info for model.jaffle_shop.stg_customers (execute): 13:31:30.252834 => 13:31:30.410337
[0m11:31:30  On model.jaffle_shop.stg_customers: Close
[0m11:31:30  1 of 3 OK created sql view model public.stg_customers .......................... [[32mCREATE VIEW[0m in 0.17s]
[0m11:31:30  Finished running node model.jaffle_shop.stg_customers
[0m11:31:30  Began running node model.jaffle_shop.stg_orders
[0m11:31:30  2 of 3 START sql view model public.stg_orders .................................. [RUN]
[0m11:31:30  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_customers, now model.jaffle_shop.stg_orders)
[0m11:31:30  Began compiling node model.jaffle_shop.stg_orders
[0m11:31:30  Writing injected SQL for node "model.jaffle_shop.stg_orders"
[0m11:31:30  Timing info for model.jaffle_shop.stg_orders (compile): 13:31:30.422639 => 13:31:30.426689
[0m11:31:30  Began executing node model.jaffle_shop.stg_orders
[0m11:31:30  Writing runtime sql for node "model.jaffle_shop.stg_orders"
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:31:30  On model.jaffle_shop.stg_orders: BEGIN
[0m11:31:30  Opening a new connection, currently in state closed
[0m11:31:30  SQL status: BEGIN in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:31:30  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */

  create view "sales"."public"."stg_orders__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_orders"

),

renamed as (

    select
        id as order_id,
        user_id as customer_id,
        order_date,
        status

    from source

)

select * from renamed
  );
[0m11:31:30  SQL status: CREATE VIEW in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:31:30  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders" rename to "stg_orders__dbt_backup"
[0m11:31:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:31:30  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
alter table "sales"."public"."stg_orders__dbt_tmp" rename to "stg_orders"
[0m11:31:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:31:30  On model.jaffle_shop.stg_orders: COMMIT
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:31:30  On model.jaffle_shop.stg_orders: COMMIT
[0m11:31:30  SQL status: COMMIT in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_orders"
[0m11:31:30  On model.jaffle_shop.stg_orders: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_orders"} */
drop view if exists "sales"."public"."stg_orders__dbt_backup" cascade
[0m11:31:30  SQL status: DROP VIEW in 0.0 seconds
[0m11:31:30  Timing info for model.jaffle_shop.stg_orders (execute): 13:31:30.429636 => 13:31:30.529123
[0m11:31:30  On model.jaffle_shop.stg_orders: Close
[0m11:31:30  2 of 3 OK created sql view model public.stg_orders ............................. [[32mCREATE VIEW[0m in 0.11s]
[0m11:31:30  Finished running node model.jaffle_shop.stg_orders
[0m11:31:30  Began running node model.jaffle_shop.stg_payments
[0m11:31:30  3 of 3 START sql view model public.stg_payments ................................ [RUN]
[0m11:31:30  Re-using an available connection from the pool (formerly model.jaffle_shop.stg_orders, now model.jaffle_shop.stg_payments)
[0m11:31:30  Began compiling node model.jaffle_shop.stg_payments
[0m11:31:30  Writing injected SQL for node "model.jaffle_shop.stg_payments"
[0m11:31:30  Timing info for model.jaffle_shop.stg_payments (compile): 13:31:30.543123 => 13:31:30.548210
[0m11:31:30  Began executing node model.jaffle_shop.stg_payments
[0m11:31:30  Writing runtime sql for node "model.jaffle_shop.stg_payments"
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:31:30  On model.jaffle_shop.stg_payments: BEGIN
[0m11:31:30  Opening a new connection, currently in state closed
[0m11:31:30  SQL status: BEGIN in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:31:30  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */

  create view "sales"."public"."stg_payments__dbt_tmp"
    
    
  as (
    with source as (
    select * from "sales"."public"."raw_payments"

),

renamed as (

    select
        id as payment_id,
        order_id,
        payment_method,

        -- `amount` is currently stored in cents, so we convert it to dollars
        amount / 100 as amount

    from source

)

select * from renamed
  );
[0m11:31:30  SQL status: CREATE VIEW in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:31:30  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments" rename to "stg_payments__dbt_backup"
[0m11:31:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:31:30  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
alter table "sales"."public"."stg_payments__dbt_tmp" rename to "stg_payments"
[0m11:31:30  SQL status: ALTER TABLE in 0.0 seconds
[0m11:31:30  On model.jaffle_shop.stg_payments: COMMIT
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:31:30  On model.jaffle_shop.stg_payments: COMMIT
[0m11:31:30  SQL status: COMMIT in 0.0 seconds
[0m11:31:30  Using postgres connection "model.jaffle_shop.stg_payments"
[0m11:31:30  On model.jaffle_shop.stg_payments: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "model.jaffle_shop.stg_payments"} */
drop view if exists "sales"."public"."stg_payments__dbt_backup" cascade
[0m11:31:30  SQL status: DROP VIEW in 0.0 seconds
[0m11:31:30  Timing info for model.jaffle_shop.stg_payments (execute): 13:31:30.552216 => 13:31:30.644471
[0m11:31:30  On model.jaffle_shop.stg_payments: Close
[0m11:31:30  3 of 3 OK created sql view model public.stg_payments ........................... [[32mCREATE VIEW[0m in 0.11s]
[0m11:31:30  Finished running node model.jaffle_shop.stg_payments
[0m11:31:30  Using postgres connection "master"
[0m11:31:30  On master: BEGIN
[0m11:31:30  Opening a new connection, currently in state closed
[0m11:31:30  SQL status: BEGIN in 0.0 seconds
[0m11:31:30  On master: COMMIT
[0m11:31:30  Using postgres connection "master"
[0m11:31:30  On master: COMMIT
[0m11:31:30  SQL status: COMMIT in 0.0 seconds
[0m11:31:30  On master: Close
[0m11:31:30  Connection 'master' was properly closed.
[0m11:31:30  Connection 'list_sales' was properly closed.
[0m11:31:30  Connection 'list_sales_public' was properly closed.
[0m11:31:30  Connection 'model.jaffle_shop.stg_payments' was properly closed.
[0m11:31:30  
[0m11:31:30  Finished running 3 view models in 0 hours 0 minutes and 0.80 seconds (0.80s).
[0m11:31:30  Command end result
[0m11:31:30  
[0m11:31:30  [32mCompleted successfully[0m
[0m11:31:30  
[0m11:31:30  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m11:31:30  Command `dbt run` succeeded at 13:31:30.845873 after 1.01 seconds
[0m11:31:30  Flushing usage events
[0m11:36:28  Running with dbt=1.5.0
[0m11:36:28  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'fail_fast': 'True', 'warn_error': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:36:28  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:36:28  Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m11:36:28  Partial parsing enabled, no changes found, skipping parsing
[0m11:36:28  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:36:28  
[0m11:36:28  Acquiring new postgres connection 'master'
[0m11:36:28  Acquiring new postgres connection 'list_sales_public'
[0m11:36:28  Using postgres connection "list_sales_public"
[0m11:36:28  On list_sales_public: BEGIN
[0m11:36:28  Opening a new connection, currently in state init
[0m11:36:28  SQL status: BEGIN in 0.0 seconds
[0m11:36:28  Using postgres connection "list_sales_public"
[0m11:36:28  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:36:28  SQL status: SELECT 8 in 0.0 seconds
[0m11:36:28  On list_sales_public: ROLLBACK
[0m11:36:28  On list_sales_public: Close
[0m11:36:28  Using postgres connection "master"
[0m11:36:28  On master: BEGIN
[0m11:36:28  Opening a new connection, currently in state init
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "master"
[0m11:36:29  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:36:29  SQL status: SELECT 3 in 0.0 seconds
[0m11:36:29  On master: ROLLBACK
[0m11:36:29  Using postgres connection "master"
[0m11:36:29  On master: BEGIN
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  On master: COMMIT
[0m11:36:29  Using postgres connection "master"
[0m11:36:29  On master: COMMIT
[0m11:36:29  SQL status: COMMIT in 0.0 seconds
[0m11:36:29  On master: Close
[0m11:36:29  Concurrency: 1 threads (target='dev')
[0m11:36:29  
[0m11:36:29  Began running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:36:29  1 of 20 START test accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m11:36:29  Acquiring new postgres connection 'test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3'
[0m11:36:29  Began compiling node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:36:29  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (compile): 13:36:29.147540 => 13:36:29.165541
[0m11:36:29  Began executing node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:36:29  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:36:29  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: BEGIN
[0m11:36:29  Opening a new connection, currently in state init
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"
[0m11:36:29  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3 (execute): 13:36:29.168652 => 13:36:29.250046
[0m11:36:29  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: ROLLBACK
[0m11:36:29  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3: Close
[0m11:36:29  1 of 20 PASS accepted_values_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.11s]
[0m11:36:29  Finished running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3
[0m11:36:29  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:36:29  2 of 20 START test accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned.be6b5b5ec3, now test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad)
[0m11:36:29  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:36:29  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 13:36:29.264099 => 13:36:29.272100
[0m11:36:29  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:36:29  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."stg_orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 13:36:29.275097 => 13:36:29.339237
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: ROLLBACK
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: Close
[0m11:36:29  2 of 20 PASS accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.09s]
[0m11:36:29  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:36:29  Began running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:36:29  3 of 20 START test accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad, now test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278)
[0m11:36:29  Began compiling node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:36:29  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (compile): 13:36:29.353238 => 13:36:29.362239
[0m11:36:29  Began executing node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:36:29  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        payment_method as value_field,
        count(*) as n_records

    from "sales"."public"."stg_payments"
    group by payment_method

)

select *
from all_values
where value_field not in (
    'credit_card','coupon','bank_transfer','gift_card'
)



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (execute): 13:36:29.364726 => 13:36:29.424997
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: ROLLBACK
[0m11:36:29  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: Close
[0m11:36:29  3 of 20 PASS accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [[32mPASS[0m in 0.10s]
[0m11:36:29  Finished running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m11:36:29  Began running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:36:29  4 of 20 START test not_null_customers_customer_id .............................. [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278, now test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d)
[0m11:36:29  Began compiling node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:36:29  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (compile): 13:36:29.464758 => 13:36:29.474757
[0m11:36:29  Began executing node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:36:29  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:36:29  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."customers"
where customer_id is null



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (execute): 13:36:29.477757 => 13:36:29.536375
[0m11:36:29  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: ROLLBACK
[0m11:36:29  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: Close
[0m11:36:29  4 of 20 PASS not_null_customers_customer_id .................................... [[32mPASS[0m in 0.08s]
[0m11:36:29  Finished running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:36:29  Began running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:36:29  5 of 20 START test not_null_orders_amount ...................................... [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d, now test.jaffle_shop.not_null_orders_amount.106140f9fd)
[0m11:36:29  Began compiling node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (compile): 13:36:29.549375 => 13:36:29.553438
[0m11:36:29  Began executing node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:36:29  On test.jaffle_shop.not_null_orders_amount.106140f9fd: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_amount.106140f9fd"
[0m11:36:29  On test.jaffle_shop.not_null_orders_amount.106140f9fd: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_amount.106140f9fd"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select amount
from "sales"."public"."orders"
where amount is null



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_amount.106140f9fd (execute): 13:36:29.556446 => 13:36:29.615830
[0m11:36:29  On test.jaffle_shop.not_null_orders_amount.106140f9fd: ROLLBACK
[0m11:36:29  On test.jaffle_shop.not_null_orders_amount.106140f9fd: Close
[0m11:36:29  5 of 20 PASS not_null_orders_amount ............................................ [[32mPASS[0m in 0.07s]
[0m11:36:29  Finished running node test.jaffle_shop.not_null_orders_amount.106140f9fd
[0m11:36:29  Began running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:36:29  6 of 20 START test not_null_orders_bank_transfer_amount ........................ [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_amount.106140f9fd, now test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49)
[0m11:36:29  Began compiling node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (compile): 13:36:29.629750 => 13:36:29.634275
[0m11:36:29  Began executing node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:36:29  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"
[0m11:36:29  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select bank_transfer_amount
from "sales"."public"."orders"
where bank_transfer_amount is null



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49 (execute): 13:36:29.637282 => 13:36:29.791441
[0m11:36:29  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: ROLLBACK
[0m11:36:29  On test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49: Close
[0m11:36:29  6 of 20 PASS not_null_orders_bank_transfer_amount .............................. [[32mPASS[0m in 0.17s]
[0m11:36:29  Finished running node test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49
[0m11:36:29  Began running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:36:29  7 of 20 START test not_null_orders_coupon_amount ............................... [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_bank_transfer_amount.7743500c49, now test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625)
[0m11:36:29  Began compiling node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (compile): 13:36:29.805880 => 13:36:29.805880
[0m11:36:29  Began executing node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:36:29  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"
[0m11:36:29  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select coupon_amount
from "sales"."public"."orders"
where coupon_amount is null



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625 (execute): 13:36:29.805880 => 13:36:29.869995
[0m11:36:29  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: ROLLBACK
[0m11:36:29  On test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625: Close
[0m11:36:29  7 of 20 PASS not_null_orders_coupon_amount ..................................... [[32mPASS[0m in 0.09s]
[0m11:36:29  Finished running node test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625
[0m11:36:29  Began running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:36:29  8 of 20 START test not_null_orders_credit_card_amount .......................... [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_coupon_amount.ab90c90625, now test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59)
[0m11:36:29  Began compiling node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (compile): 13:36:29.884655 => 13:36:29.890671
[0m11:36:29  Began executing node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:36:29  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:29  SQL status: BEGIN in 0.0 seconds
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"
[0m11:36:29  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select credit_card_amount
from "sales"."public"."orders"
where credit_card_amount is null



      
    ) dbt_internal_test
[0m11:36:29  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59 (execute): 13:36:29.894668 => 13:36:29.952654
[0m11:36:29  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: ROLLBACK
[0m11:36:29  On test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59: Close
[0m11:36:29  8 of 20 PASS not_null_orders_credit_card_amount ................................ [[32mPASS[0m in 0.07s]
[0m11:36:29  Finished running node test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59
[0m11:36:29  Began running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:36:29  9 of 20 START test not_null_orders_customer_id ................................. [RUN]
[0m11:36:29  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_credit_card_amount.d3ca593b59, now test.jaffle_shop.not_null_orders_customer_id.c5f02694af)
[0m11:36:29  Began compiling node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:36:29  Writing injected SQL for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:36:29  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (compile): 13:36:29.965654 => 13:36:29.970286
[0m11:36:29  Began executing node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:36:29  Writing runtime sql for node "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:36:29  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:36:29  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: BEGIN
[0m11:36:29  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"
[0m11:36:30  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_customer_id.c5f02694af"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."orders"
where customer_id is null



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.not_null_orders_customer_id.c5f02694af (execute): 13:36:29.974349 => 13:36:30.034556
[0m11:36:30  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: ROLLBACK
[0m11:36:30  On test.jaffle_shop.not_null_orders_customer_id.c5f02694af: Close
[0m11:36:30  9 of 20 PASS not_null_orders_customer_id ....................................... [[32mPASS[0m in 0.08s]
[0m11:36:30  Finished running node test.jaffle_shop.not_null_orders_customer_id.c5f02694af
[0m11:36:30  Began running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:36:30  10 of 20 START test not_null_orders_gift_card_amount ........................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_customer_id.c5f02694af, now test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a)
[0m11:36:30  Began compiling node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:36:30  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (compile): 13:36:30.047988 => 13:36:30.053991
[0m11:36:30  Began executing node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:36:30  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"
[0m11:36:30  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select gift_card_amount
from "sales"."public"."orders"
where gift_card_amount is null



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a (execute): 13:36:30.058990 => 13:36:30.232346
[0m11:36:30  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: ROLLBACK
[0m11:36:30  On test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a: Close
[0m11:36:30  10 of 20 PASS not_null_orders_gift_card_amount ................................. [[32mPASS[0m in 0.19s]
[0m11:36:30  Finished running node test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a
[0m11:36:30  Began running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:36:30  11 of 20 START test not_null_orders_order_id ................................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_gift_card_amount.413a0d2d7a, now test.jaffle_shop.not_null_orders_order_id.cf6c17daed)
[0m11:36:30  Began compiling node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:36:30  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (compile): 13:36:30.248450 => 13:36:30.254448
[0m11:36:30  Began executing node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:36:30  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"
[0m11:36:30  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_orders_order_id.cf6c17daed"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "sales"."public"."orders"
where order_id is null



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.not_null_orders_order_id.cf6c17daed (execute): 13:36:30.257449 => 13:36:30.318142
[0m11:36:30  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: ROLLBACK
[0m11:36:30  On test.jaffle_shop.not_null_orders_order_id.cf6c17daed: Close
[0m11:36:30  11 of 20 PASS not_null_orders_order_id ......................................... [[32mPASS[0m in 0.08s]
[0m11:36:30  Finished running node test.jaffle_shop.not_null_orders_order_id.cf6c17daed
[0m11:36:30  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:36:30  12 of 20 START test not_null_stg_customers_customer_id ......................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_orders_order_id.cf6c17daed, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m11:36:30  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:36:30  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 13:36:30.333992 => 13:36:30.339526
[0m11:36:30  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:36:30  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m11:36:30  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."stg_customers"
where customer_id is null



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 13:36:30.342529 => 13:36:30.403387
[0m11:36:30  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: ROLLBACK
[0m11:36:30  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: Close
[0m11:36:30  12 of 20 PASS not_null_stg_customers_customer_id ............................... [[32mPASS[0m in 0.08s]
[0m11:36:30  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m11:36:30  Began running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:36:30  13 of 20 START test not_null_stg_orders_order_id ............................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64)
[0m11:36:30  Began compiling node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:36:30  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (compile): 13:36:30.415912 => 13:36:30.420943
[0m11:36:30  Began executing node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:36:30  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m11:36:30  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "sales"."public"."stg_orders"
where order_id is null



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (execute): 13:36:30.422946 => 13:36:30.484066
[0m11:36:30  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: ROLLBACK
[0m11:36:30  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: Close
[0m11:36:30  13 of 20 PASS not_null_stg_orders_order_id ..................................... [[32mPASS[0m in 0.07s]
[0m11:36:30  Finished running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m11:36:30  Began running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:36:30  14 of 20 START test not_null_stg_payments_payment_id ........................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64, now test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075)
[0m11:36:30  Began compiling node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:36:30  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (compile): 13:36:30.498059 => 13:36:30.503059
[0m11:36:30  Began executing node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:36:30  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m11:36:30  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select payment_id
from "sales"."public"."stg_payments"
where payment_id is null



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (execute): 13:36:30.505061 => 13:36:30.563597
[0m11:36:30  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: ROLLBACK
[0m11:36:30  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: Close
[0m11:36:30  14 of 20 PASS not_null_stg_payments_payment_id ................................. [[32mPASS[0m in 0.07s]
[0m11:36:30  Finished running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m11:36:30  Began running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:36:30  15 of 20 START test relationships_orders_customer_id__customer_id__ref_customers_  [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075, now test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2)
[0m11:36:30  Began compiling node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:36:30  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (compile): 13:36:30.574589 => 13:36:30.586772
[0m11:36:30  Began executing node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:36:30  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:36:30  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:36:30  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with child as (
    select customer_id as from_field
    from "sales"."public"."orders"
    where customer_id is not null
),

parent as (
    select customer_id as to_field
    from "sales"."public"."customers"
)

select
    from_field

from child
left join parent
    on child.from_field = parent.to_field

where parent.to_field is null



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (execute): 13:36:30.588770 => 13:36:30.651194
[0m11:36:30  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: ROLLBACK
[0m11:36:30  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: Close
[0m11:36:30  15 of 20 PASS relationships_orders_customer_id__customer_id__ref_customers_ .... [[32mPASS[0m in 0.08s]
[0m11:36:30  Finished running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:36:30  Began running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:36:30  16 of 20 START test unique_customers_customer_id ............................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2, now test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1)
[0m11:36:30  Began compiling node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:36:30  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (compile): 13:36:30.664054 => 13:36:30.671020
[0m11:36:30  Began executing node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:36:30  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:36:30  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:36:30  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (execute): 13:36:30.673810 => 13:36:30.838999
[0m11:36:30  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: ROLLBACK
[0m11:36:30  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: Close
[0m11:36:30  16 of 20 PASS unique_customers_customer_id ..................................... [[32mPASS[0m in 0.18s]
[0m11:36:30  Finished running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:36:30  Began running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:36:30  17 of 20 START test unique_orders_order_id ..................................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1, now test.jaffle_shop.unique_orders_order_id.fed79b3a6e)
[0m11:36:30  Began compiling node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:36:30  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (compile): 13:36:30.854508 => 13:36:30.854508
[0m11:36:30  Began executing node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:36:30  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:36:30  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:30  SQL status: BEGIN in 0.0 seconds
[0m11:36:30  Using postgres connection "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"
[0m11:36:30  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_orders_order_id.fed79b3a6e"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "sales"."public"."orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:36:30  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:30  Timing info for test.jaffle_shop.unique_orders_order_id.fed79b3a6e (execute): 13:36:30.854508 => 13:36:30.931817
[0m11:36:30  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: ROLLBACK
[0m11:36:30  On test.jaffle_shop.unique_orders_order_id.fed79b3a6e: Close
[0m11:36:30  17 of 20 PASS unique_orders_order_id ........................................... [[32mPASS[0m in 0.08s]
[0m11:36:30  Finished running node test.jaffle_shop.unique_orders_order_id.fed79b3a6e
[0m11:36:30  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:36:30  18 of 20 START test unique_stg_customers_customer_id ........................... [RUN]
[0m11:36:30  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_orders_order_id.fed79b3a6e, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m11:36:30  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:36:30  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:36:30  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 13:36:30.946008 => 13:36:30.951681
[0m11:36:30  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:36:30  Writing runtime sql for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:36:30  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:36:30  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: BEGIN
[0m11:36:30  Opening a new connection, currently in state closed
[0m11:36:31  SQL status: BEGIN in 0.0 seconds
[0m11:36:31  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m11:36:31  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:36:31  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:31  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 13:36:30.953680 => 13:36:31.132089
[0m11:36:31  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: ROLLBACK
[0m11:36:31  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: Close
[0m11:36:31  18 of 20 PASS unique_stg_customers_customer_id ................................. [[32mPASS[0m in 0.19s]
[0m11:36:31  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m11:36:31  Began running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:36:31  19 of 20 START test unique_stg_orders_order_id ................................. [RUN]
[0m11:36:31  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a)
[0m11:36:31  Began compiling node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:36:31  Writing injected SQL for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:36:31  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (compile): 13:36:31.145433 => 13:36:31.152439
[0m11:36:31  Began executing node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:36:31  Writing runtime sql for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:36:31  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:36:31  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: BEGIN
[0m11:36:31  Opening a new connection, currently in state closed
[0m11:36:31  SQL status: BEGIN in 0.0 seconds
[0m11:36:31  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m11:36:31  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:36:31  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:31  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (execute): 13:36:31.154445 => 13:36:31.250707
[0m11:36:31  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: ROLLBACK
[0m11:36:31  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: Close
[0m11:36:31  19 of 20 PASS unique_stg_orders_order_id ....................................... [[32mPASS[0m in 0.11s]
[0m11:36:31  Finished running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m11:36:31  Began running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:36:31  20 of 20 START test unique_stg_payments_payment_id ............................. [RUN]
[0m11:36:31  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a, now test.jaffle_shop.unique_stg_payments_payment_id.3744510712)
[0m11:36:31  Began compiling node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:36:31  Writing injected SQL for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:36:31  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (compile): 13:36:31.264723 => 13:36:31.269887
[0m11:36:31  Began executing node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:36:31  Writing runtime sql for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:36:31  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:36:31  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: BEGIN
[0m11:36:31  Opening a new connection, currently in state closed
[0m11:36:31  SQL status: BEGIN in 0.0 seconds
[0m11:36:31  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m11:36:31  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    payment_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_payments"
where payment_id is not null
group by payment_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:36:31  SQL status: SELECT 1 in 0.0 seconds
[0m11:36:31  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (execute): 13:36:31.271887 => 13:36:31.446934
[0m11:36:31  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: ROLLBACK
[0m11:36:31  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: Close
[0m11:36:31  20 of 20 PASS unique_stg_payments_payment_id ................................... [[32mPASS[0m in 0.19s]
[0m11:36:31  Finished running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m11:36:31  Using postgres connection "master"
[0m11:36:31  On master: BEGIN
[0m11:36:31  Opening a new connection, currently in state closed
[0m11:36:31  SQL status: BEGIN in 0.0 seconds
[0m11:36:31  On master: COMMIT
[0m11:36:31  Using postgres connection "master"
[0m11:36:31  On master: COMMIT
[0m11:36:31  SQL status: COMMIT in 0.0 seconds
[0m11:36:31  On master: Close
[0m11:36:31  Connection 'master' was properly closed.
[0m11:36:31  Connection 'list_sales_public' was properly closed.
[0m11:36:31  Connection 'test.jaffle_shop.unique_stg_payments_payment_id.3744510712' was properly closed.
[0m11:36:31  
[0m11:36:31  Finished running 20 tests in 0 hours 0 minutes and 2.65 seconds (2.65s).
[0m11:36:31  Command end result
[0m11:36:31  
[0m11:36:31  [32mCompleted successfully[0m
[0m11:36:31  
[0m11:36:31  Done. PASS=20 WARN=0 ERROR=0 SKIP=0 TOTAL=20
[0m11:36:31  Command `dbt test` succeeded at 13:36:31.530909 after 2.85 seconds
[0m11:36:31  Flushing usage events
[0m11:37:46  Running with dbt=1.5.0
[0m11:37:46  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'version_check': 'True', 'debug': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:37:47  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:37:47  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:37:47  Partial parsing: updated file: jaffle_shop://models\schema.yml
[0m11:37:47  1603: static parser failed on orders.sql
[0m11:37:47  1602: parser fallback to jinja rendering on orders.sql
[0m11:37:47  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:37:47  
[0m11:37:47  Acquiring new postgres connection 'master'
[0m11:37:47  Acquiring new postgres connection 'list_sales_public'
[0m11:37:47  Using postgres connection "list_sales_public"
[0m11:37:47  On list_sales_public: BEGIN
[0m11:37:47  Opening a new connection, currently in state init
[0m11:37:47  SQL status: BEGIN in 0.0 seconds
[0m11:37:47  Using postgres connection "list_sales_public"
[0m11:37:47  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:37:47  SQL status: SELECT 8 in 0.0 seconds
[0m11:37:47  On list_sales_public: ROLLBACK
[0m11:37:47  On list_sales_public: Close
[0m11:37:47  Using postgres connection "master"
[0m11:37:47  On master: BEGIN
[0m11:37:47  Opening a new connection, currently in state init
[0m11:37:47  SQL status: BEGIN in 0.0 seconds
[0m11:37:47  Using postgres connection "master"
[0m11:37:47  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:37:47  SQL status: SELECT 3 in 0.0 seconds
[0m11:37:47  On master: ROLLBACK
[0m11:37:47  Using postgres connection "master"
[0m11:37:47  On master: BEGIN
[0m11:37:47  SQL status: BEGIN in 0.0 seconds
[0m11:37:47  On master: COMMIT
[0m11:37:47  Using postgres connection "master"
[0m11:37:47  On master: COMMIT
[0m11:37:47  SQL status: COMMIT in 0.0 seconds
[0m11:37:47  On master: Close
[0m11:37:47  Concurrency: 1 threads (target='dev')
[0m11:37:47  
[0m11:37:47  Began running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b
[0m11:37:47  1 of 20 START test accepted_values_orders_status__placed__shipped__completed__return_pending  [RUN]
[0m11:37:47  Acquiring new postgres connection 'test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b'
[0m11:37:47  Began compiling node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b
[0m11:37:47  Writing injected SQL for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b"
[0m11:37:47  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b (compile): 13:37:47.509990 => 13:37:47.519009
[0m11:37:47  Began executing node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b
[0m11:37:47  Writing runtime sql for node "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b"
[0m11:37:47  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b"
[0m11:37:47  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b: BEGIN
[0m11:37:47  Opening a new connection, currently in state init
[0m11:37:47  SQL status: BEGIN in 0.0 seconds
[0m11:37:47  Using postgres connection "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b"
[0m11:37:47  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending'
)



      
    ) dbt_internal_test
[0m11:37:47  SQL status: SELECT 1 in 0.0 seconds
[0m11:37:47  Timing info for test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b (execute): 13:37:47.521010 => 13:37:47.597475
[0m11:37:47  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b: ROLLBACK
[0m11:37:47  On test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b: Close
[0m11:37:47  1 of 20 FAIL 1 accepted_values_orders_status__placed__shipped__completed__return_pending  [[31mFAIL 1[0m in 0.10s]
[0m11:37:47  Finished running node test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b
[0m11:37:47  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:37:47  2 of 20 START test accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m11:37:47  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending.9694eb8e9b, now test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad)
[0m11:37:47  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:37:47  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:37:47  Opening a new connection, currently in state closed
[0m11:37:47  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 13:37:47.614476 => 13:37:47.629475
[0m11:37:47  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:37:47  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:37:47  Postgres adapter: Cancelling query 'test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad' (9696)
[0m11:37:47  Using postgres connection "master"
[0m11:37:47  On master: BEGIN
[0m11:37:47  Opening a new connection, currently in state closed
[0m11:37:47  SQL status: BEGIN in 0.0 seconds
[0m11:37:47  Using postgres connection "master"
[0m11:37:47  On master: select pg_terminate_backend(9696)
[0m11:37:47  SQL status: SELECT 1 in 0.0 seconds
[0m11:37:47  Postgres adapter: Cancel query 'test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad': (True,)
[0m11:37:47  CANCEL query list_sales_public ................................................. [[31mCANCEL[0m]
[0m11:37:47  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m11:37:47  CANCEL query test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad  [[31mCANCEL[0m]
[0m11:37:47  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: BEGIN
[0m11:37:47  On master: ROLLBACK
[0m11:37:47  Postgres adapter: Postgres error: server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

[0m11:37:47  On master: Close
[0m11:37:47  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 13:37:47.632552 => 13:37:47.735167
[0m11:37:47  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: Close
[0m11:37:47  Database Error in test accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned (models\staging\schema.yml)
  server closed the connection unexpectedly
  	This probably means the server terminated abnormally
  	before or while processing the request.
  compiled Code at target\run\jaffle_shop\models\staging\schema.yml\accepted_values_stg_orders_4f514bf94b77b7ea437830eec4421c58.sql
[0m11:37:47  2 of 20 ERROR accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [[31mERROR[0m in 0.15s]
[0m11:37:47  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m11:37:47  
[0m11:37:47  [31mFailure in test accepted_values_orders_status__placed__shipped__completed__return_pending (models\schema.yml)[0m
[0m11:37:47    Got 1 result, configured to fail if != 0
[0m11:37:47  
[0m11:37:47    compiled Code at target\compiled\jaffle_shop\models\schema.yml\accepted_values_orders_261b9aa2bfa675a1c3ef0bbd543a8c8f.sql
[0m11:37:47  Connection 'master' was properly closed.
[0m11:37:47  Connection 'list_sales_public' was properly closed.
[0m11:37:47  Connection 'test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad' was properly closed.
[0m11:37:47  
[0m11:37:47  Finished running 1 test in 0 hours 0 minutes and 0.55 seconds (0.55s).
[0m11:37:47  Encountered an error:
FailFast Error in test accepted_values_orders_status__placed__shipped__completed__return_pending (models\schema.yml)
  Failing early due to test failure or runtime error
[0m11:37:47  Command `dbt test` failed at 13:37:47.768537 after 0.86 seconds
[0m11:37:47  Flushing usage events
[0m11:44:15  Running with dbt=1.5.0
[0m11:44:15  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'text', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m11:44:15  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m11:44:15  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m11:44:15  Partial parsing: updated file: jaffle_shop://models\customers.sql
[0m11:44:15  1699: static parser successfully parsed customers.sql
[0m11:44:15  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m11:44:15  
[0m11:44:15  Acquiring new postgres connection 'master'
[0m11:44:15  Acquiring new postgres connection 'list_sales_public'
[0m11:44:15  Using postgres connection "list_sales_public"
[0m11:44:15  On list_sales_public: BEGIN
[0m11:44:15  Opening a new connection, currently in state init
[0m11:44:15  SQL status: BEGIN in 0.0 seconds
[0m11:44:15  Using postgres connection "list_sales_public"
[0m11:44:15  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m11:44:15  SQL status: SELECT 8 in 0.0 seconds
[0m11:44:15  On list_sales_public: ROLLBACK
[0m11:44:15  On list_sales_public: Close
[0m11:44:15  Using postgres connection "master"
[0m11:44:15  On master: BEGIN
[0m11:44:15  Opening a new connection, currently in state init
[0m11:44:15  SQL status: BEGIN in 0.0 seconds
[0m11:44:15  Using postgres connection "master"
[0m11:44:15  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m11:44:15  SQL status: SELECT 3 in 0.0 seconds
[0m11:44:15  On master: ROLLBACK
[0m11:44:15  Using postgres connection "master"
[0m11:44:15  On master: BEGIN
[0m11:44:15  SQL status: BEGIN in 0.0 seconds
[0m11:44:15  On master: COMMIT
[0m11:44:15  Using postgres connection "master"
[0m11:44:15  On master: COMMIT
[0m11:44:15  SQL status: COMMIT in 0.0 seconds
[0m11:44:15  On master: Close
[0m11:44:15  Concurrency: 1 threads (target='dev')
[0m11:44:15  
[0m11:44:15  Began running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:44:15  1 of 3 START test not_null_customers_customer_id ............................... [RUN]
[0m11:44:15  Acquiring new postgres connection 'test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d'
[0m11:44:15  Began compiling node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:44:15  Writing injected SQL for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:44:15  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (compile): 13:44:15.762164 => 13:44:15.778310
[0m11:44:15  Began executing node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:44:15  Writing runtime sql for node "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:44:15  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:44:15  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: BEGIN
[0m11:44:15  Opening a new connection, currently in state init
[0m11:44:15  SQL status: BEGIN in 0.0 seconds
[0m11:44:15  Using postgres connection "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"
[0m11:44:15  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."customers"
where customer_id is null



      
    ) dbt_internal_test
[0m11:44:15  SQL status: SELECT 1 in 0.0 seconds
[0m11:44:15  Timing info for test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d (execute): 13:44:15.784824 => 13:44:15.962901
[0m11:44:15  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: ROLLBACK
[0m11:44:15  On test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d: Close
[0m11:44:15  1 of 3 PASS not_null_customers_customer_id ..................................... [[32mPASS[0m in 0.24s]
[0m11:44:15  Finished running node test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d
[0m11:44:15  Began running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:44:15  2 of 3 START test relationships_orders_customer_id__customer_id__ref_customers_  [RUN]
[0m11:44:15  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_customers_customer_id.5c9bf9911d, now test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2)
[0m11:44:15  Began compiling node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:44:15  Writing injected SQL for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:44:15  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (compile): 13:44:15.978410 => 13:44:15.994434
[0m11:44:15  Began executing node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:44:16  Writing runtime sql for node "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:44:16  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:44:16  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: BEGIN
[0m11:44:16  Opening a new connection, currently in state closed
[0m11:44:16  SQL status: BEGIN in 0.0 seconds
[0m11:44:16  Using postgres connection "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"
[0m11:44:16  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with child as (
    select customer_id as from_field
    from "sales"."public"."orders"
    where customer_id is not null
),

parent as (
    select customer_id as to_field
    from "sales"."public"."customers"
)

select
    from_field

from child
left join parent
    on child.from_field = parent.to_field

where parent.to_field is null



      
    ) dbt_internal_test
[0m11:44:16  SQL status: SELECT 1 in 0.0 seconds
[0m11:44:16  Timing info for test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2 (execute): 13:44:15.999701 => 13:44:16.071226
[0m11:44:16  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: ROLLBACK
[0m11:44:16  On test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2: Close
[0m11:44:16  2 of 3 PASS relationships_orders_customer_id__customer_id__ref_customers_ ...... [[32mPASS[0m in 0.10s]
[0m11:44:16  Finished running node test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2
[0m11:44:16  Began running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:44:16  3 of 3 START test unique_customers_customer_id ................................. [RUN]
[0m11:44:16  Re-using an available connection from the pool (formerly test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2, now test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1)
[0m11:44:16  Began compiling node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:44:16  Writing injected SQL for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:44:16  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (compile): 13:44:16.083150 => 13:44:16.091072
[0m11:44:16  Began executing node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:44:16  Writing runtime sql for node "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:44:16  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:44:16  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: BEGIN
[0m11:44:16  Opening a new connection, currently in state closed
[0m11:44:16  SQL status: BEGIN in 0.0 seconds
[0m11:44:16  Using postgres connection "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"
[0m11:44:16  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m11:44:16  SQL status: SELECT 1 in 0.0 seconds
[0m11:44:16  Timing info for test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1 (execute): 13:44:16.093702 => 13:44:16.153341
[0m11:44:16  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: ROLLBACK
[0m11:44:16  On test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1: Close
[0m11:44:16  3 of 3 PASS unique_customers_customer_id ....................................... [[32mPASS[0m in 0.08s]
[0m11:44:16  Finished running node test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1
[0m11:44:16  Using postgres connection "master"
[0m11:44:16  On master: BEGIN
[0m11:44:16  Opening a new connection, currently in state closed
[0m11:44:16  SQL status: BEGIN in 0.0 seconds
[0m11:44:16  On master: COMMIT
[0m11:44:16  Using postgres connection "master"
[0m11:44:16  On master: COMMIT
[0m11:44:16  SQL status: COMMIT in 0.0 seconds
[0m11:44:16  On master: Close
[0m11:44:16  Connection 'master' was properly closed.
[0m11:44:16  Connection 'list_sales_public' was properly closed.
[0m11:44:16  Connection 'test.jaffle_shop.unique_customers_customer_id.c5af1ff4b1' was properly closed.
[0m11:44:16  
[0m11:44:16  Finished running 3 tests in 0 hours 0 minutes and 0.89 seconds (0.89s).
[0m11:44:16  Command end result
[0m11:44:16  
[0m11:44:16  [32mCompleted successfully[0m
[0m11:44:16  
[0m11:44:16  Done. PASS=3 WARN=0 ERROR=0 SKIP=0 TOTAL=3
[0m11:44:16  Command `dbt test` succeeded at 13:44:16.231417 after 1.17 seconds
[0m11:44:16  Flushing usage events
[0m15:45:10  Running with dbt=1.5.0
[0m15:45:10  running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'True', 'debug': 'True', 'version_check': 'True', 'log_path': 'C:\\Louw\\GitHub\\dbt\\jaffle_shop\\logs', 'profiles_dir': 'C:\\Users\\lfouc\\.dbt', 'fail_fast': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'text', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'send_anonymous_usage_stats': 'False'}
[0m15:45:11  checksum: 4568eb639a77b8fcb3a1f4a07856f42b1ff63f1376652889143968e1dbdafbda, vars: {}, profile: , target: , version: 1.5.0
[0m15:45:11  Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m15:45:11  Partial parsing: updated file: jaffle_shop://models\schema.yml
[0m15:45:11  1603: static parser failed on orders.sql
[0m15:45:11  1602: parser fallback to jinja rendering on orders.sql
[0m15:45:11  Found 5 models, 20 tests, 0 snapshots, 0 analyses, 307 macros, 0 operations, 3 seed files, 0 sources, 0 exposures, 0 metrics, 0 groups
[0m15:45:11  
[0m15:45:11  Acquiring new postgres connection 'master'
[0m15:45:11  Acquiring new postgres connection 'list_sales_public'
[0m15:45:11  Using postgres connection "list_sales_public"
[0m15:45:11  On list_sales_public: BEGIN
[0m15:45:11  Opening a new connection, currently in state init
[0m15:45:11  SQL status: BEGIN in 0.0 seconds
[0m15:45:11  Using postgres connection "list_sales_public"
[0m15:45:11  On list_sales_public: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "list_sales_public"} */
select
      'sales' as database,
      tablename as name,
      schemaname as schema,
      'table' as type
    from pg_tables
    where schemaname ilike 'public'
    union all
    select
      'sales' as database,
      viewname as name,
      schemaname as schema,
      'view' as type
    from pg_views
    where schemaname ilike 'public'
  
[0m15:45:11  SQL status: SELECT 8 in 0.0 seconds
[0m15:45:11  On list_sales_public: ROLLBACK
[0m15:45:11  On list_sales_public: Close
[0m15:45:11  Using postgres connection "master"
[0m15:45:11  On master: BEGIN
[0m15:45:11  Opening a new connection, currently in state init
[0m15:45:11  SQL status: BEGIN in 0.0 seconds
[0m15:45:11  Using postgres connection "master"
[0m15:45:11  On master: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "connection_name": "master"} */
with relation as (
        select
            pg_rewrite.ev_class as class,
            pg_rewrite.oid as id
        from pg_rewrite
    ),
    class as (
        select
            oid as id,
            relname as name,
            relnamespace as schema,
            relkind as kind
        from pg_class
    ),
    dependency as (
        select distinct
            pg_depend.objid as id,
            pg_depend.refobjid as ref
        from pg_depend
    ),
    schema as (
        select
            pg_namespace.oid as id,
            pg_namespace.nspname as name
        from pg_namespace
        where nspname != 'information_schema' and nspname not like 'pg\_%'
    ),
    referenced as (
        select
            relation.id AS id,
            referenced_class.name ,
            referenced_class.schema ,
            referenced_class.kind
        from relation
        join class as referenced_class on relation.class=referenced_class.id
        where referenced_class.kind in ('r', 'v')
    ),
    relationships as (
        select
            referenced.name as referenced_name,
            referenced.schema as referenced_schema_id,
            dependent_class.name as dependent_name,
            dependent_class.schema as dependent_schema_id,
            referenced.kind as kind
        from referenced
        join dependency on referenced.id=dependency.id
        join class as dependent_class on dependency.ref=dependent_class.id
        where
            (referenced.name != dependent_class.name or
             referenced.schema != dependent_class.schema)
    )

    select
        referenced_schema.name as referenced_schema,
        relationships.referenced_name as referenced_name,
        dependent_schema.name as dependent_schema,
        relationships.dependent_name as dependent_name
    from relationships
    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id
    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id
    group by referenced_schema, referenced_name, dependent_schema, dependent_name
    order by referenced_schema, referenced_name, dependent_schema, dependent_name;
[0m15:45:11  SQL status: SELECT 3 in 0.0 seconds
[0m15:45:11  On master: ROLLBACK
[0m15:45:11  Using postgres connection "master"
[0m15:45:11  On master: BEGIN
[0m15:45:11  SQL status: BEGIN in 0.0 seconds
[0m15:45:11  On master: COMMIT
[0m15:45:11  Using postgres connection "master"
[0m15:45:11  On master: COMMIT
[0m15:45:11  SQL status: COMMIT in 0.0 seconds
[0m15:45:11  On master: Close
[0m15:45:11  Concurrency: 1 threads (target='dev')
[0m15:45:11  
[0m15:45:11  Began running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m15:45:11  1 of 8 START test accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [RUN]
[0m15:45:11  Acquiring new postgres connection 'test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad'
[0m15:45:11  Began compiling node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m15:45:11  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m15:45:11  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (compile): 17:45:11.706928 => 17:45:11.723118
[0m15:45:11  Began executing node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m15:45:11  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m15:45:11  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: BEGIN
[0m15:45:11  Opening a new connection, currently in state init
[0m15:45:11  SQL status: BEGIN in 0.0 seconds
[0m15:45:11  Using postgres connection "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        status as value_field,
        count(*) as n_records

    from "sales"."public"."stg_orders"
    group by status

)

select *
from all_values
where value_field not in (
    'placed','shipped','completed','return_pending','returned'
)



      
    ) dbt_internal_test
[0m15:45:11  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:11  Timing info for test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad (execute): 17:45:11.729364 => 17:45:11.852039
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: ROLLBACK
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad: Close
[0m15:45:11  1 of 8 PASS accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned  [[32mPASS[0m in 0.17s]
[0m15:45:11  Finished running node test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad
[0m15:45:11  Began running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m15:45:11  2 of 8 START test accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [RUN]
[0m15:45:11  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned.080fb20aad, now test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278)
[0m15:45:11  Began compiling node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m15:45:11  Writing injected SQL for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m15:45:11  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (compile): 17:45:11.886683 => 17:45:11.901010
[0m15:45:11  Began executing node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m15:45:11  Writing runtime sql for node "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m15:45:11  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: BEGIN
[0m15:45:11  Opening a new connection, currently in state closed
[0m15:45:11  SQL status: BEGIN in 0.0 seconds
[0m15:45:11  Using postgres connection "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

with all_values as (

    select
        payment_method as value_field,
        count(*) as n_records

    from "sales"."public"."stg_payments"
    group by payment_method

)

select *
from all_values
where value_field not in (
    'credit_card','coupon','bank_transfer','gift_card'
)



      
    ) dbt_internal_test
[0m15:45:11  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:11  Timing info for test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278 (execute): 17:45:11.909033 => 17:45:11.992131
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: ROLLBACK
[0m15:45:11  On test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278: Close
[0m15:45:11  2 of 8 PASS accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card  [[32mPASS[0m in 0.12s]
[0m15:45:12  Finished running node test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278
[0m15:45:12  Began running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m15:45:12  3 of 8 START test not_null_stg_customers_customer_id ........................... [RUN]
[0m15:45:12  Re-using an available connection from the pool (formerly test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card.3c3820f278, now test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa)
[0m15:45:12  Began compiling node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m15:45:12  Writing injected SQL for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m15:45:12  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (compile): 17:45:12.007520 => 17:45:12.024177
[0m15:45:12  Began executing node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m15:45:12  Writing runtime sql for node "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m15:45:12  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m15:45:12  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: BEGIN
[0m15:45:12  Opening a new connection, currently in state closed
[0m15:45:12  SQL status: BEGIN in 0.0 seconds
[0m15:45:12  Using postgres connection "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"
[0m15:45:12  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select customer_id
from "sales"."public"."stg_customers"
where customer_id is null



      
    ) dbt_internal_test
[0m15:45:12  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:12  Timing info for test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa (execute): 17:45:12.030824 => 17:45:12.103889
[0m15:45:12  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: ROLLBACK
[0m15:45:12  On test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa: Close
[0m15:45:12  3 of 8 PASS not_null_stg_customers_customer_id ................................. [[32mPASS[0m in 0.10s]
[0m15:45:12  Finished running node test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa
[0m15:45:12  Began running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m15:45:12  4 of 8 START test not_null_stg_orders_order_id ................................. [RUN]
[0m15:45:12  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_customers_customer_id.e2cfb1f9aa, now test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64)
[0m15:45:12  Began compiling node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m15:45:12  Writing injected SQL for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m15:45:12  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (compile): 17:45:12.127908 => 17:45:12.135927
[0m15:45:12  Began executing node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m15:45:12  Writing runtime sql for node "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m15:45:12  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m15:45:12  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: BEGIN
[0m15:45:12  Opening a new connection, currently in state closed
[0m15:45:12  SQL status: BEGIN in 0.0 seconds
[0m15:45:12  Using postgres connection "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"
[0m15:45:12  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select order_id
from "sales"."public"."stg_orders"
where order_id is null



      
    ) dbt_internal_test
[0m15:45:12  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:12  Timing info for test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64 (execute): 17:45:12.135927 => 17:45:12.368879
[0m15:45:12  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: ROLLBACK
[0m15:45:12  On test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64: Close
[0m15:45:12  4 of 8 PASS not_null_stg_orders_order_id ....................................... [[32mPASS[0m in 0.26s]
[0m15:45:12  Finished running node test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64
[0m15:45:12  Began running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m15:45:12  5 of 8 START test not_null_stg_payments_payment_id ............................. [RUN]
[0m15:45:12  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_orders_order_id.81cfe2fe64, now test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075)
[0m15:45:12  Began compiling node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m15:45:12  Writing injected SQL for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m15:45:12  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (compile): 17:45:12.390879 => 17:45:12.397494
[0m15:45:12  Began executing node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m15:45:12  Writing runtime sql for node "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m15:45:12  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m15:45:12  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: BEGIN
[0m15:45:12  Opening a new connection, currently in state closed
[0m15:45:12  SQL status: BEGIN in 0.0 seconds
[0m15:45:12  Using postgres connection "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"
[0m15:45:12  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    



select payment_id
from "sales"."public"."stg_payments"
where payment_id is null



      
    ) dbt_internal_test
[0m15:45:12  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:12  Timing info for test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075 (execute): 17:45:12.401503 => 17:45:12.593684
[0m15:45:12  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: ROLLBACK
[0m15:45:12  On test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075: Close
[0m15:45:12  5 of 8 PASS not_null_stg_payments_payment_id ................................... [[32mPASS[0m in 0.22s]
[0m15:45:12  Finished running node test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075
[0m15:45:12  Began running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m15:45:12  6 of 8 START test unique_stg_customers_customer_id ............................. [RUN]
[0m15:45:12  Re-using an available connection from the pool (formerly test.jaffle_shop.not_null_stg_payments_payment_id.c19cc50075, now test.jaffle_shop.unique_stg_customers_customer_id.c7614daada)
[0m15:45:12  Began compiling node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m15:45:12  Writing injected SQL for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m15:45:12  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (compile): 17:45:12.609736 => 17:45:12.617839
[0m15:45:12  Began executing node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m15:45:12  Writing runtime sql for node "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m15:45:12  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m15:45:12  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: BEGIN
[0m15:45:12  Opening a new connection, currently in state closed
[0m15:45:12  SQL status: BEGIN in 0.0 seconds
[0m15:45:12  Using postgres connection "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"
[0m15:45:12  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_customers_customer_id.c7614daada"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    customer_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_customers"
where customer_id is not null
group by customer_id
having count(*) > 1



      
    ) dbt_internal_test
[0m15:45:12  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:12  Timing info for test.jaffle_shop.unique_stg_customers_customer_id.c7614daada (execute): 17:45:12.621830 => 17:45:12.690689
[0m15:45:12  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: ROLLBACK
[0m15:45:12  On test.jaffle_shop.unique_stg_customers_customer_id.c7614daada: Close
[0m15:45:12  6 of 8 PASS unique_stg_customers_customer_id ................................... [[32mPASS[0m in 0.09s]
[0m15:45:12  Finished running node test.jaffle_shop.unique_stg_customers_customer_id.c7614daada
[0m15:45:12  Began running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m15:45:12  7 of 8 START test unique_stg_orders_order_id ................................... [RUN]
[0m15:45:12  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_customers_customer_id.c7614daada, now test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a)
[0m15:45:12  Began compiling node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m15:45:12  Writing injected SQL for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m15:45:12  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (compile): 17:45:12.706279 => 17:45:12.714243
[0m15:45:12  Began executing node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m15:45:12  Writing runtime sql for node "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m15:45:12  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m15:45:12  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: BEGIN
[0m15:45:12  Opening a new connection, currently in state closed
[0m15:45:12  SQL status: BEGIN in 0.0 seconds
[0m15:45:12  Using postgres connection "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"
[0m15:45:12  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    order_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_orders"
where order_id is not null
group by order_id
having count(*) > 1



      
    ) dbt_internal_test
[0m15:45:12  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:12  Timing info for test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a (execute): 17:45:12.714243 => 17:45:12.778540
[0m15:45:12  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: ROLLBACK
[0m15:45:12  On test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a: Close
[0m15:45:12  7 of 8 PASS unique_stg_orders_order_id ......................................... [[32mPASS[0m in 0.09s]
[0m15:45:12  Finished running node test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a
[0m15:45:12  Began running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m15:45:12  8 of 8 START test unique_stg_payments_payment_id ............................... [RUN]
[0m15:45:12  Re-using an available connection from the pool (formerly test.jaffle_shop.unique_stg_orders_order_id.e3b841c71a, now test.jaffle_shop.unique_stg_payments_payment_id.3744510712)
[0m15:45:12  Began compiling node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m15:45:12  Writing injected SQL for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m15:45:12  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (compile): 17:45:12.798561 => 17:45:12.810589
[0m15:45:12  Began executing node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m15:45:12  Writing runtime sql for node "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m15:45:12  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m15:45:12  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: BEGIN
[0m15:45:12  Opening a new connection, currently in state closed
[0m15:45:12  SQL status: BEGIN in 0.0 seconds
[0m15:45:12  Using postgres connection "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"
[0m15:45:12  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: /* {"app": "dbt", "dbt_version": "1.5.0", "profile_name": "jaffle_shop", "target_name": "dev", "node_id": "test.jaffle_shop.unique_stg_payments_payment_id.3744510712"} */
select
      count(*) as failures,
      count(*) != 0 as should_warn,
      count(*) != 0 as should_error
    from (
      
    
    

select
    payment_id as unique_field,
    count(*) as n_records

from "sales"."public"."stg_payments"
where payment_id is not null
group by payment_id
having count(*) > 1



      
    ) dbt_internal_test
[0m15:45:12  SQL status: SELECT 1 in 0.0 seconds
[0m15:45:12  Timing info for test.jaffle_shop.unique_stg_payments_payment_id.3744510712 (execute): 17:45:12.818588 => 17:45:12.914888
[0m15:45:12  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: ROLLBACK
[0m15:45:12  On test.jaffle_shop.unique_stg_payments_payment_id.3744510712: Close
[0m15:45:12  8 of 8 PASS unique_stg_payments_payment_id ..................................... [[32mPASS[0m in 0.13s]
[0m15:45:12  Finished running node test.jaffle_shop.unique_stg_payments_payment_id.3744510712
[0m15:45:12  Using postgres connection "master"
[0m15:45:12  On master: BEGIN
[0m15:45:12  Opening a new connection, currently in state closed
[0m15:45:13  SQL status: BEGIN in 0.0 seconds
[0m15:45:13  On master: COMMIT
[0m15:45:13  Using postgres connection "master"
[0m15:45:13  On master: COMMIT
[0m15:45:13  SQL status: COMMIT in 0.0 seconds
[0m15:45:13  On master: Close
[0m15:45:13  Connection 'master' was properly closed.
[0m15:45:13  Connection 'list_sales_public' was properly closed.
[0m15:45:13  Connection 'test.jaffle_shop.unique_stg_payments_payment_id.3744510712' was properly closed.
[0m15:45:13  
[0m15:45:13  Finished running 8 tests in 0 hours 0 minutes and 1.77 seconds (1.77s).
[0m15:45:13  Command end result
[0m15:45:13  
[0m15:45:13  [32mCompleted successfully[0m
[0m15:45:13  
[0m15:45:13  Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m15:45:13  Command `dbt test` succeeded at 17:45:13.165497 after 2.36 seconds
[0m15:45:13  Flushing usage events
